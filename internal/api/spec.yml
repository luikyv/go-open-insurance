openapi: 3.0.0
paths:
  /consents/v2/consents:
    post:
      operationId: CreateConsentV2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateConsentRequestV2'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponseV2'
  /consents/v2/consents/{consentId}:
    get:
      operationId: ConsentV2
      parameters:
          - $ref: '#/components/parameters/consentId'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponseV2'
    delete:
      operationId: DeleteConsentV2
      parameters:
        - $ref: '#/components/parameters/consentId'
      responses:
        '204':
          description: .
  /customers/v1/personal/identifications:
    get:
      operationId: PersonalIdentificationsV1
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonalIdentificationResponseV1"
components:
  schemas:
    ResponseError:
      type: object
      required:
        - errors
      properties:
        errors:
          type: array
          minItems: 1
          maxItems: 13
          items:
            $ref: '#/components/schemas/Error'
        meta:
          $ref: '#/components/schemas/Meta'
    Error:
      type: object
      required:
        - code
        - title
        - detail
        - requestDateTime
      properties:
        code:
          type: string
          pattern: '[\w\W\s]*'
          maxLength: 255
        title:
          type: string
          pattern: '[\w\W\s]*'
          maxLength: 255
        detail:
          type: string
          pattern: '[\w\W\s]*'
          maxLength: 2048
        requestDateTime:
          type: string
          maxLength: 20
          format: date-time
      additionalProperties: false
    Links:
      type: object
      required:
        - self
      properties:
        self:
          type: string
          format: uri
          maxLength: 2000
          pattern: ^(https:\/\/)(.*?)(\/open-insurance\/consents\/v\d+)(\/.*)?$
        first:
          type: string
          format: uri
          maxLength: 2000
          pattern: ^(https:\/\/)(.*?)(\/open-insurance\/consents\/v\d+)(\/.*)?$
        prev:
          type: string
          format: uri
          maxLength: 2000
          pattern: ^(https:\/\/)(.*?)(\/open-insurance\/consents\/v\d+)(\/.*)?$
        next:
          type: string
          format: uri
          maxLength: 2000
          pattern: ^(https:\/\/)(.*?)(\/open-insurance\/consents\/v\d+)(\/.*)?$
        last:
          type: string
          format: uri
          maxLength: 2000
          pattern: ^(https:\/\/)(.*?)(\/open-insurance\/consents\/v\d+)(\/.*)?$
      additionalProperties: false
    Meta:
      type: object
      required:
        - totalRecords
        - totalPages
      properties:
        totalRecords:
          type: integer
          format: int32
        totalPages:
          type: integer
          format: int32
      additionalProperties: false
    LoggedUser:
      type: object
      additionalProperties: false
      required:
        - document
      properties:
        document:
          type: object
          additionalProperties: false
          required:
            - identification
            - rel
          properties:
            identification:
              type: string
              maxLength: 11
              pattern: '^\d{11}$'
            rel:
              type: string
              maxLength: 3
              pattern: '^[A-Z]{3}$'
    BusinessEntity:
      type: object
      additionalProperties: false
      required:
        - document
      properties:
        document:
          type: object
          additionalProperties: false
          required:
            - identification
            - rel
          properties:
            identification:
              type: string
              maxLength: 14
              pattern: '^\d{14}$'
            rel:
              type: string
              maxLength: 4
              pattern: '^[A-Z]{4}$'
    CreateConsentRequestV2:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - permissions
            - loggedUser
            - expirationDateTime
          properties:
            loggedUser:
              $ref: '#/components/schemas/LoggedUser'
            businessEntity:
              $ref: '#/components/schemas/BusinessEntity'
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/ConsentPermission'
              minItems: 1
            expirationDateTime:
              type: string
              maxLength: 20
              format: date-time
            endorsementInformation:
              type: object
              required:
                - policyNumber
                - endorsementType
                - requestDescription
              properties:
                policyNumber:
                  type: string
                  maxLength: 60
                  example: "111111"
                endorsementType:
                  $ref: '#/components/schemas/EndorsementType'
                requestDescription:
                  type: string
                  maxLength: 1024
            claimNotificationInformation:
              type: object
              required:
                - documentType
                - policyNumber
                - occurrenceDate
                - occurrenceDescription
              properties:
                documentType:
                  type: string
                  enum: [APOLICE_INDIVIDUAL,
                         BILHETE,
                         CERTIFICADO,
                         APOLICE_INDIVIDUAL_AUTOMOVEL,
                         APOLICE_FROTA_AUTOMOVEL,
                         CERTIFICADO_AUTOMOVEL]
                policyNumber:
                  type: string
                  maxLength: 60
                  example: "111111"
                groupCertificateId:
                  type: string
                  maxLength: 60
                occurrenceDate:
                  type: string
                  format: date
                  maxLength: 10
                occurrenceTime:
                  type: string
                  pattern: '[0-2][0-3]:[0-5][0-9]:[0-5][0-9]'
                occurrenceDescription:
                  type: string
                  maxLength: 10000
          additionalProperties: false
      additionalProperties: false
    ConsentResponseV2:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ConsentDataV2'
        links:
          $ref: '#/components/schemas/Links'
        meta:
          $ref: '#/components/schemas/Meta'
      additionalProperties: false
    ConsentDataV2:
      type: object
      required:
        - consentId
        - creationDateTime
        - status
        - statusUpdateDateTime
        - permissions
        - expirationDateTime
      properties:
        consentId:
          type: string
          pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*''%\/?#]+$'
          maxLength: 256
          example: 'urn:prudential:C1DD93123'
        creationDateTime:
          type: string
          format: date-time
          maxLength: 20
        status:
          $ref: '#/components/schemas/ConsentStatus'
        statusUpdateDateTime:
          type: string
          format: date-time
          maxLength: 20
        permissions:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/ConsentPermission'
        expirationDateTime:
          type: string
          format: date-time
          maxLength: 20
        endorsementInformation:
          type: object
          required:
            - policyNumber
            - endorsementType
            - requestDescription
          properties:
            policyNumber:
              type: string
              maxLength: 60
            endorsementType:
              $ref: '#/components/schemas/EndorsementType'
            requestDescription:
              type: string
              maxLength: 1024
        claimNotificationInformation:
          type: object
          required:
            - documentType
            - policyNumber
            - occurrenceDate
            - occurrenceDescription
          properties:
            documentType:
              description: Tipo de Documento Emitido.
              type: string
              enum: [APOLICE_INDIVIDUAL,
                      BILHETE,
                      CERTIFICADO,
                      APOLICE_INDIVIDUAL_AUTOMOVEL,
                      APOLICE_FROTA_AUTOMOVEL,
                      CERTIFICADO_AUTOMOVEL]
            policyNumber:
              type: string
              maxLength: 60
            groupCertificateId:
              type: string
              maxLength: 60
            occurrenceDate:
              type: string
              format: date
              maxLength: 10
            occurrenceTime:
              type: string
              pattern: '[0-2][0-3]:[0-5][0-9]:[0-5][0-9]'
            occurrenceDescription:
              type: string
              maxLength: 10000
        rejection:
          $ref: '#/components/schemas/ConsentRejection'
    ConsentStatus:
      type: string
      enum:
        - AUTHORISED
        - AWAITING_AUTHORISATION
        - REJECTED
        - CONSUMED
    ConsentPermission:
      type: string
      enum:
        - CUSTOMERS_PERSONAL_IDENTIFICATIONS_READ
        - CUSTOMERS_PERSONAL_ADDITIONALINFO_READ
        - CUSTOMERS_PERSONAL_QUALIFICATION_READ
        - CUSTOMERS_BUSINESS_IDENTIFICATIONS_READ
        - CUSTOMERS_BUSINESS_QUALIFICATION_READ
        - CUSTOMERS_BUSINESS_ADDITIONALINFO_READ
        - CAPITALIZATION_TITLE_READ
        - CAPITALIZATION_TITLE_PLANINFO_READ
        - CAPITALIZATION_TITLE_EVENTS_READ
        - CAPITALIZATION_TITLE_SETTLEMENTS_READ
        - PENSION_PLAN_READ
        - PENSION_PLAN_CONTRACTINFO_READ
        - PENSION_PLAN_MOVEMENTS_READ
        - PENSION_PLAN_PORTABILITIES_READ
        - PENSION_PLAN_WITHDRAWALS_READ
        - PENSION_PLAN_CLAIM
        - LIFE_PENSION_READ
        - LIFE_PENSION_CONTRACTINFO_READ
        - LIFE_PENSION_MOVEMENTS_READ
        - LIFE_PENSION_PORTABILITIES_READ
        - LIFE_PENSION_WITHDRAWALS_READ
        - LIFE_PENSION_CLAIM
        - FINANCIAL_ASSISTANCE_READ
        - FINANCIAL_ASSISTANCE_CONTRACTINFO_READ
        - FINANCIAL_ASSISTANCE_MOVEMENTS_READ
        - DAMAGES_AND_PEOPLE_PATRIMONIAL_READ
        - DAMAGES_AND_PEOPLE_PATRIMONIAL_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_PATRIMONIAL_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_PATRIMONIAL_CLAIM_READ
        - DAMAGES_AND_PEOPLE_RESPONSIBILITY_READ
        - DAMAGES_AND_PEOPLE_RESPONSIBILITY_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_RESPONSIBILITY_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_RESPONSIBILITY_CLAIM_READ
        - DAMAGES_AND_PEOPLE_TRANSPORT_READ
        - DAMAGES_AND_PEOPLE_TRANSPORT_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_TRANSPORT_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_TRANSPORT_CLAIM_READ
        - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_READ
        - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_CLAIM_READ
        - DAMAGES_AND_PEOPLE_RURAL_READ
        - DAMAGES_AND_PEOPLE_RURAL_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_RURAL_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_RURAL_CLAIM_READ
        - DAMAGES_AND_PEOPLE_AUTO_READ
        - DAMAGES_AND_PEOPLE_AUTO_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_AUTO_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_AUTO_CLAIM_READ
        - DAMAGES_AND_PEOPLE_HOUSING_READ
        - DAMAGES_AND_PEOPLE_HOUSING_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_HOUSING_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_HOUSING_CLAIM_READ
        - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_READ
        - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_CLAIM_READ
        - DAMAGES_AND_PEOPLE_PERSON_READ
        - DAMAGES_AND_PEOPLE_PERSON_POLICYINFO_READ
        - DAMAGES_AND_PEOPLE_PERSON_PREMIUM_READ
        - DAMAGES_AND_PEOPLE_PERSON_CLAIM_READ
        - ENDORSEMENT_REQUEST_CREATE
        - CLAIM_NOTIFICATION_REQUEST_DAMAGE_CREATE
        - CLAIM_NOTIFICATION_REQUEST_PERSON_CREATE
        - QUOTE_PATRIMONIAL_LEAD_CREATE
        - QUOTE_PATRIMONIAL_LEAD_UPDATE
        - QUOTE_PATRIMONIAL_HOME_READ
        - QUOTE_PATRIMONIAL_HOME_CREATE
        - QUOTE_PATRIMONIAL_HOME_UPDATE
        - QUOTE_PATRIMONIAL_CONDOMINIUM_READ
        - QUOTE_PATRIMONIAL_CONDOMINIUM_CREATE
        - QUOTE_PATRIMONIAL_CONDOMINIUM_UPDATE
        - QUOTE_PATRIMONIAL_BUSINESS_READ
        - QUOTE_PATRIMONIAL_BUSINESS_CREATE
        - QUOTE_PATRIMONIAL_BUSINESS_UPDATE
        - QUOTE_PATRIMONIAL_DIVERSE_RISKS_READ
        - QUOTE_PATRIMONIAL_DIVERSE_RISKS_CREATE
        - QUOTE_PATRIMONIAL_DIVERSE_RISKS_UPDATE
        - QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD_LEAD_CREATE
        - QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD_LEAD_UPDATE
        - QUOTE_AUTO_LEAD_CREATE
        - QUOTE_AUTO_LEAD_UPDATE
        - QUOTE_AUTO_READ
        - QUOTE_AUTO_CREATE
        - QUOTE_AUTO_UPDATE
        - QUOTE_FINANCIAL_RISK_LEAD_CREATE
        - QUOTE_FINANCIAL_RISK_LEAD_UPDATE
        - QUOTE_HOUSING_LEAD_CREATE
        - QUOTE_HOUSING_LEAD_UPDATE
        - QUOTE_RESPONSIBILITY_LEAD_CREATE
        - QUOTE_RESPONSIBILITY_LEAD_UPDATE
        - QUOTE_RURAL_LEAD_CREATE
        - QUOTE_RURAL_LEAD_UPDATE
        - QUOTE_TRANSPORT_LEAD_CREATE
        - QUOTE_TRANSPORT_LEAD_UPDATE
        - QUOTE_PERSON_LEAD_CREATE
        - QUOTE_PERSON_LEAD_UPDATE
        - QUOTE_PERSON_LIFE_READ
        - QUOTE_PERSON_LIFE_CREATE
        - QUOTE_PERSON_LIFE_UPDATE
        - QUOTE_PERSON_TRAVEL_READ
        - QUOTE_PERSON_TRAVEL_CREATE
        - QUOTE_PERSON_TRAVEL_UPDATE
        - QUOTE_CAPITALIZATION_TITLE_LEAD_CREATE
        - QUOTE_CAPITALIZATION_TITLE_LEAD_UPDATE
        - QUOTE_CAPITALIZATION_TITLE_READ
        - QUOTE_CAPITALIZATION_TITLE_CREATE
        - QUOTE_CAPITALIZATION_TITLE_UPDATE
        - QUOTE_CAPITALIZATION_TITLE_RAFFLE_CREATE
        - CONTRACT_LIFE_PENSION_LEAD_CREATE
        - CONTRACT_LIFE_PENSION_LEAD_UPDATE
        - CONTRACT_LIFE_PENSION_LEAD_PORTABILITY_CREATE
        - CONTRACT_LIFE_PENSION_LEAD_PORTABILITY_UPDATE
        - CONTRACT_PENSION_PLAN_LEAD_CREATE
        - CONTRACT_PENSION_PLAN_LEAD_UPDATE
        - CONTRACT_PENSION_PLAN_LEAD_PORTABILITY_CREATE
        - CONTRACT_PENSION_PLAN_LEAD_PORTABILITY_UPDATE
        - PENSION_WITHDRAWAL_CREATE
        - CAPITALIZATION_TITLE_WITHDRAWAL_CREATE
        - RESOURCES_READ
    EndorsementType:
      type: string
      enum:
        - ALTERACAO
        - CANCELAMENTO
        - INCLUSAO
        - EXCLUSAO
    ConsentRejection:
      type: object
      required:
        - rejectedBy
        - reason
      properties:
        rejectedBy:
          $ref: '#/components/schemas/ConsentRejectedBy'
        reason:
          $ref: '#/components/schemas/ConsentRejectedReason'
    ConsentRejectedBy:
      type: string
      enum:
        - USER
        - ASPSP
        - TPP
    ConsentRejectedReason:
      type: object
      required:
        - code
      properties:
        code:
          $ref: '#/components/schemas/ConsentRejectedReasonCode'
        additionalInformation:
          type: string
          maxLength: 140
          pattern: '[\w\W\s]*'
    ConsentRejectedReasonCode:
      type: string
      enum:
        - CONSENT_EXPIRED
        - CUSTOMER_MANUALLY_REJECTED
        - CUSTOMER_MANUALLY_REVOKED
        - CONSENT_MAX_DATE_REACHED
        - CONSENT_TECHNICAL_ISSUE
        - INTERNAL_SECURITY_REASON
    PersonalIdentificationResponseV1:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PersonalIdentificationDataV1"
        links:
          $ref: "#/components/schemas/Links"
        meta:
          $ref: "#/components/schemas/Meta"
      additionalProperties: false
    PersonalIdentificationDataV1:
      type: object
      required:
        - updateDateTime
        - brandName
        - companyInfo
        - civilName
        - hasBrazilianNationality
        - contact
        - cpfNumber
      properties:
        updateDateTime:
          type: string
          maxLength: 20
          format: date-time
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])T(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)Z$'
        personalId:
          type: string
          pattern: '^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$'
          maxLength: 100
        brandName:
          type: string
          maxLength: 80
          pattern: '[\w\W\s]*'
        civilName:
          type: string
          maxLength: 70
          pattern: '[\w\W\s]*'
        socialName:
          type: string
          maxLength: 70
          pattern: '^[\w\W]*$'
        cpfNumber:
          type: string
          maxLength: 11
          pattern: '^\d{11}$|^NA$'
        companyInfo:
          type: object
          required:
            - name
            - cnpjNumber
          properties:
            cnpjNumber:
              type: string
              pattern: ^\d{14}$
              maxLength: 14
            name:
              type: string
              maxLength: 70
              pattern: '[\w\W\s]*'
        documents:
          $ref: "#/components/schemas/PersonalDocuments"
        hasBrazilianNationality:
          type: boolean
          nullable: true
        otherNationalitiesInfo:
          type: string
          maxLength: 3
        otherDocuments:
          $ref: "#/components/schemas/OtherPersonalDocuments"
        contact:
          $ref: "#/components/schemas/PersonalContact"
        civilStatusCode:
          $ref: "#/components/schemas/CivilStatusCode"
        civilStatusCodeOthers:
          type: string
          maxLength: 100
        sex:
          type: string
          maxLength: 20
        birthDate:
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
        filiation:
          type: object
          properties:
            type:
              $ref: "#/components/schemas/FiliationType"
            civilName:
              type: string
              maxLength: 70
              pattern: '^[\w\W]*$'
              example: Marcelo Cláudio Fernandes
              description: |
                Nome civil completo da pessoa relativa à filiação.
                (Direito fundamental da pessoa, o nome civil é aquele atribuído à pessoa natural desde o registro de seu nascimento,
                com o qual será identificada por toda a sua vida, bem como após a sua morte).
        identificationDetails:
          type: object
          description: Informações referente ao cônjuge.
          properties:
            civilName:
              type: string
              maxLength: 70
              pattern: '[\w\W\s]*'
              example: Juan Kaique Cláudio Fernandes
              description: "Nome civil completo da pessoa natural (Direito fundamental da pessoa, o nome civil é aquele atribuído à pessoa natural desde o registro de seu nascimento, com o qual será identificada por toda a sua vida, bem como após a sua morte)"
            cpfNumber:
              type: string
              maxLength: 11
              pattern: '^\d{11}$|^NA$'
              description: |
                Número completo do CPF. Atributo que corresponde às informações mínimas exigidas pela Regulamentação em vigor. O CPF é o Cadastro de Pessoa natural.  Ele é um documento feito pela Receita Federal e serve para identificar os contribuintes. O CPF é uma numeração com 11 dígitos, que só mudam por decisão judicial. O documento é emitido pela receita federal
                Condicional a seleção de true em hasBrazilianNationality
      additionalProperties: false
    PersonalDocuments:
      type: array
      items:
        properties:
          type:
            allOf:
              - $ref: "#/components/schemas/PersonalDocumentType"
          documentTypeOthers:
            type: string
            maxLength: 100
          number:
            type: string
            maxLength: 20
          expirationDate:
            type: string
            maxLength: 10
            format: date
            pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
            example: "2023-05-21"
            description: "Data de validade do(s) documento(s) de identificação - Se aplicável."
          issueLocation:
            type: string
            maxLength: 40
            description: "Local de emissão - Se aplicável."
      additionalProperties: false
    OtherPersonalDocuments:
      type: object
      properties:
        type:
          type: string
          maxLength: 40
          description: "Tipo do(s) documento(s) estrangeiro(s) de identificação"
          example: "SOCIAL SEC"
        number:
          type: string
          maxLength: 20
          description: "Numero/codigo do(s) documento(s) de identificacao. Obrigatorio desde que a participante possua a informacao"
          example: "15291908"
        country:
          type: string
          maxLength: 40
          description: "País do(s) documento(s) estrangeiro(s) de identificação."
        expirationDate:
          type: string
          maxLength: 10
          format: date
          pattern: '^(\d{4})-(1[0-2]|0?[1-9])-(3[01]|[12][0-9]|0?[1-9])$'
          example: "2023-05-21"
          description: "Data de vigência do documento de registro - conforme especificação RFC-3339."
      additionalProperties: false
    CivilStatusCode:
      type: string
      enum:
        - SOLTEIRO
        - CASADO
        - VIUVO
        - SEPARADO_JUDICIALMENTE
        - DIVORCIADO
        - UNIAO_ESTAVEL
        - OUTROS
    AreaCode:
      type: string
      enum:
        - "11"
        - "12"
        - "13"
        - "14"
        - "15"
        - "16"
        - "17"
        - "18"
        - "19"
        - "21"
        - "22"
        - "24"
        - "27"
        - "28"
        - "31"
        - "32"
        - "33"
        - "34"
        - "35"
        - "37"
        - "38"
        - "41"
        - "42"
        - "43"
        - "44"
        - "45"
        - "46"
        - "47"
        - "48"
        - "49"
        - "51"
        - "53"
        - "54"
        - "55"
        - "61"
        - "62"
        - "63"
        - "64"
        - "65"
        - "66"
        - "67"
        - "68"
        - "69"
        - "71"
        - "73"
        - "74"
        - "75"
        - "77"
        - "79"
        - "81"
        - "82"
        - "83"
        - "84"
        - "85"
        - "86"
        - "87"
        - "88"
        - "89"
        - "91"
        - "92"
        - "93"
        - "94"
        - "95"
        - "96"
        - "97"
        - "98"
        - "99"
        - NA
    CountrySubDivision:
      type: string
      description: "Enumeração referente a cada sigla da unidade da federação que identifica o estado ou o distrito federal, no qual o endereço está localizado. p.ex. 'AC'. São consideradas apenas as siglas para os estados brasileiros"
      enum:
        - AC
        - AL
        - AP
        - AM
        - BA
        - CE
        - DF
        - ES
        - GO
        - MA
        - MT
        - MS
        - MG
        - PA
        - PB
        - PR
        - PE
        - PI
        - RJ
        - RN
        - RS
        - RO
        - RR
        - SC
        - SP
        - SE
        - TO
      example: SP
    PersonalContact:
      type: object
      description: Conjunto de informações referentes às formas para contatar o cliente.
      required:
        - postalAddresses
      properties:
        postalAddresses:
          type: array
          items:
            $ref: "#/components/schemas/PersonalPostalAddress"
          minItems: 1
          description: Lista de endereços da pessoa natural
        phones:
          type: array
          items:
            $ref: "#/components/schemas/CustomerPhone"
          minItems: 1
          description: Lista com telefones de contato da pessoa natural
        emails:
          type: array
          items:
            $ref: "#/components/schemas/CustomerEmail"
          minItems: 1
          description: Lista e-mails de contato
      additionalProperties: false
    CustomerEmail:
      type: object
      properties:
        email:
          type: string
          maxLength: 320
          pattern: '[\w\W\s]*'
      additionalProperties: false
    CustomerPhone:
      type: object
      properties:
        countryCallingCode:
          type: string
          maxLength: 4
          pattern: '^\d{1,4}$|^NA$'
        areaCode:
          $ref: "#/components/schemas/AreaCode"
        number:
          type: string
          maxLength: 11
          pattern: "^([0-9]{8,11})|^NA$"
        phoneExtension:
          type: string
          maxLength: 5
          pattern: '^\d{1,5}$|^NA$'
      additionalProperties: false
    PersonalPostalAddress:
      type: object
      required:
        - address
        - townName
        - countrySubDivision
        - postCode
        - country
      properties:
        address:
          type: string
          maxLength: 200
          pattern: '[\w\W\s]*'
        additionalInfo:
          type: string
          maxLength: 30
          pattern: '[\w\W\s]*'
          example: Fundos
          description: Alguns logradouros ainda necessitam ser especificados por meio de complemento.
        districtName:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: Centro
          description: Bairro é uma comunidade ou região localizada em uma cidade ou município de acordo com as suas subdivisões geográficas.
        townName:
          type: string
          maxLength: 50
          pattern: '[\w\W\s]*'
          example: Marília
          description: |
            Localidade: O nome da localidade corresponde à designação da cidade ou município no qual o endereço está localizado.
        countrySubDivision:
          $ref: "#/components/schemas/CountrySubDivision"
        postCode:
          type: string
          pattern: '\d{8}|^NA$'
          maxLength: 8
          example: "17500001"
          description: |
            Código de Endereçamento Postal: Composto por um conjunto numérico de oito dígitos, o objetivo principal do CEP é orientar e acelerar o encaminhamento, o tratamento e a entrega de objetos postados nos Correios, por meio da sua atribuição a localidades, logradouros, unidades dos Correios, serviços, órgãos públicos, empresas e edifícios. p.ex. '01311000'.
        country:
          type: string
          maxLength: 3
          example: BRA
          description: Código do pais de acordo com o código “alpha3” do ISO-3166.
      additionalProperties: false
    PersonalDocumentType:
      type: string
      enum:
        - CNH
        - RG
        - NIF
        - RNE
        - OUTROS
        - SEM_OUTROS_DOCUMENTOS
      example: CNH
      description: |
        Tipo do(s) documento(s) de identificação.
    FiliationType:
      type: string
      enum:
        - MAE
        - PAI
        - SEM_FILIACAO
      example: PAI
      description: Tipo de filiação.
    ProcuratorsNaturePersonal:
      type: string
      enum:
        - REPRESENTANTE_LEGAL
        - PROCURADOR
        - NAO_SE_APLICA
      example: PROCURADOR
      description: |
        Natureza dos poderes vigentes de representante
    ProcuratorsNatureBusiness:
      type: string
      enum:
        - REPRESENTANTE_LEGAL
        - PROCURADOR
        - NAO_SE_APLICA
      example: PROCURADOR
      description: |
        Natureza dos poderes vigentes de representante
    ProductServiceType:
      type: string
      enum:
        - MICROSSEGUROS
        - TITULOS_DE_CAPITALIZACAO
        - SEGUROS_DE_PESSOAS
        - PLANOS_DE_PREVIDENCIA_COMPLEMENTAR
        - SEGUROS_DE_DANOS
      example: MICROSSEGUROS
      description: Tipos de produtos.
  parameters:
    consentId:
      name: consentId
      in: path
      required: true
      schema:
        type: string
        pattern: '^urn:[a-zA-Z0-9][a-zA-Z0-9-]{0,31}:[a-zA-Z0-9()+,\-.:=@;$_!*''%\/?#]+$'
        maxLength: 256