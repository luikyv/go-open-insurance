//go:build go1.22

// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package api

import (
	"bytes"
	"compress/gzip"
	"context"
	"encoding/base64"
	"encoding/json"
	"fmt"
	"net/http"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	"github.com/oapi-codegen/runtime"
	strictnethttp "github.com/oapi-codegen/runtime/strictmiddleware/nethttp"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

// Defines values for AreaCode.
const (
	AreaCodeN11 AreaCode = "11"
	AreaCodeN12 AreaCode = "12"
	AreaCodeN13 AreaCode = "13"
	AreaCodeN14 AreaCode = "14"
	AreaCodeN15 AreaCode = "15"
	AreaCodeN16 AreaCode = "16"
	AreaCodeN17 AreaCode = "17"
	AreaCodeN18 AreaCode = "18"
	AreaCodeN19 AreaCode = "19"
	AreaCodeN21 AreaCode = "21"
	AreaCodeN22 AreaCode = "22"
	AreaCodeN24 AreaCode = "24"
	AreaCodeN27 AreaCode = "27"
	AreaCodeN28 AreaCode = "28"
	AreaCodeN31 AreaCode = "31"
	AreaCodeN32 AreaCode = "32"
	AreaCodeN33 AreaCode = "33"
	AreaCodeN34 AreaCode = "34"
	AreaCodeN35 AreaCode = "35"
	AreaCodeN37 AreaCode = "37"
	AreaCodeN38 AreaCode = "38"
	AreaCodeN41 AreaCode = "41"
	AreaCodeN42 AreaCode = "42"
	AreaCodeN43 AreaCode = "43"
	AreaCodeN44 AreaCode = "44"
	AreaCodeN45 AreaCode = "45"
	AreaCodeN46 AreaCode = "46"
	AreaCodeN47 AreaCode = "47"
	AreaCodeN48 AreaCode = "48"
	AreaCodeN49 AreaCode = "49"
	AreaCodeN51 AreaCode = "51"
	AreaCodeN53 AreaCode = "53"
	AreaCodeN54 AreaCode = "54"
	AreaCodeN55 AreaCode = "55"
	AreaCodeN61 AreaCode = "61"
	AreaCodeN62 AreaCode = "62"
	AreaCodeN63 AreaCode = "63"
	AreaCodeN64 AreaCode = "64"
	AreaCodeN65 AreaCode = "65"
	AreaCodeN66 AreaCode = "66"
	AreaCodeN67 AreaCode = "67"
	AreaCodeN68 AreaCode = "68"
	AreaCodeN69 AreaCode = "69"
	AreaCodeN71 AreaCode = "71"
	AreaCodeN73 AreaCode = "73"
	AreaCodeN74 AreaCode = "74"
	AreaCodeN75 AreaCode = "75"
	AreaCodeN77 AreaCode = "77"
	AreaCodeN79 AreaCode = "79"
	AreaCodeN81 AreaCode = "81"
	AreaCodeN82 AreaCode = "82"
	AreaCodeN83 AreaCode = "83"
	AreaCodeN84 AreaCode = "84"
	AreaCodeN85 AreaCode = "85"
	AreaCodeN86 AreaCode = "86"
	AreaCodeN87 AreaCode = "87"
	AreaCodeN88 AreaCode = "88"
	AreaCodeN89 AreaCode = "89"
	AreaCodeN91 AreaCode = "91"
	AreaCodeN92 AreaCode = "92"
	AreaCodeN93 AreaCode = "93"
	AreaCodeN94 AreaCode = "94"
	AreaCodeN95 AreaCode = "95"
	AreaCodeN96 AreaCode = "96"
	AreaCodeN97 AreaCode = "97"
	AreaCodeN98 AreaCode = "98"
	AreaCodeN99 AreaCode = "99"
	AreaCodeNA  AreaCode = "NA"
)

// Defines values for CapitalizationTitleEventType.
const (
	CapitalizationTitleEventTypeRESGATE CapitalizationTitleEventType = "RESGATE"
	CapitalizationTitleEventTypeSORTEIO CapitalizationTitleEventType = "SORTEIO"
)

// Defines values for CapitalizationTitleSeriesModality.
const (
	CapitalizationTitleSeriesModalityCOMPRAPROGRAMADA     CapitalizationTitleSeriesModality = "COMPRA_PROGRAMADA"
	CapitalizationTitleSeriesModalityFILANTROPIAPREMIAVEL CapitalizationTitleSeriesModality = "FILANTROPIA_PREMIAVEL"
	CapitalizationTitleSeriesModalityINSTRUMENTOGARANTIA  CapitalizationTitleSeriesModality = "INSTRUMENTO_GARANTIA"
	CapitalizationTitleSeriesModalityPOPULAR              CapitalizationTitleSeriesModality = "POPULAR"
	CapitalizationTitleSeriesModalityTRADICIONAL          CapitalizationTitleSeriesModality = "TRADICIONAL"
)

// Defines values for CapitalizationTypeEventRedemptionType.
const (
	CapitalizationTypeEventRedemptionTypeANTECIPADOPARCIAL CapitalizationTypeEventRedemptionType = "ANTECIPADO_PARCIAL"
	CapitalizationTypeEventRedemptionTypeANTECIPADOTOTAL   CapitalizationTypeEventRedemptionType = "ANTECIPADO_TOTAL"
	CapitalizationTypeEventRedemptionTypeFINALVIGENCIA     CapitalizationTypeEventRedemptionType = "FINAL_VIGENCIA"
)

// Defines values for CivilStatusCode.
const (
	CivilStatusCodeCASADO                CivilStatusCode = "CASADO"
	CivilStatusCodeDIVORCIADO            CivilStatusCode = "DIVORCIADO"
	CivilStatusCodeOUTROS                CivilStatusCode = "OUTROS"
	CivilStatusCodeSEPARADOJUDICIALMENTE CivilStatusCode = "SEPARADO_JUDICIALMENTE"
	CivilStatusCodeSOLTEIRO              CivilStatusCode = "SOLTEIRO"
	CivilStatusCodeUNIAOESTAVEL          CivilStatusCode = "UNIAO_ESTAVEL"
	CivilStatusCodeVIUVO                 CivilStatusCode = "VIUVO"
)

// Defines values for ConsentDataV2ClaimNotificationInformationDocumentType.
const (
	ConsentDataV2ClaimNotificationInformationDocumentTypeAPOLICEFROTAAUTOMOVEL      ConsentDataV2ClaimNotificationInformationDocumentType = "APOLICE_FROTA_AUTOMOVEL"
	ConsentDataV2ClaimNotificationInformationDocumentTypeAPOLICEINDIVIDUAL          ConsentDataV2ClaimNotificationInformationDocumentType = "APOLICE_INDIVIDUAL"
	ConsentDataV2ClaimNotificationInformationDocumentTypeAPOLICEINDIVIDUALAUTOMOVEL ConsentDataV2ClaimNotificationInformationDocumentType = "APOLICE_INDIVIDUAL_AUTOMOVEL"
	ConsentDataV2ClaimNotificationInformationDocumentTypeBILHETE                    ConsentDataV2ClaimNotificationInformationDocumentType = "BILHETE"
	ConsentDataV2ClaimNotificationInformationDocumentTypeCERTIFICADO                ConsentDataV2ClaimNotificationInformationDocumentType = "CERTIFICADO"
	ConsentDataV2ClaimNotificationInformationDocumentTypeCERTIFICADOAUTOMOVEL       ConsentDataV2ClaimNotificationInformationDocumentType = "CERTIFICADO_AUTOMOVEL"
)

// Defines values for ConsentPermission.
const (
	ConsentPermissionCAPITALIZATIONTITLEEVENTSREAD                             ConsentPermission = "CAPITALIZATION_TITLE_EVENTS_READ"
	ConsentPermissionCAPITALIZATIONTITLEPLANINFOREAD                           ConsentPermission = "CAPITALIZATION_TITLE_PLANINFO_READ"
	ConsentPermissionCAPITALIZATIONTITLEREAD                                   ConsentPermission = "CAPITALIZATION_TITLE_READ"
	ConsentPermissionCAPITALIZATIONTITLESETTLEMENTSREAD                        ConsentPermission = "CAPITALIZATION_TITLE_SETTLEMENTS_READ"
	ConsentPermissionCAPITALIZATIONTITLEWITHDRAWALCREATE                       ConsentPermission = "CAPITALIZATION_TITLE_WITHDRAWAL_CREATE"
	ConsentPermissionCLAIMNOTIFICATIONREQUESTDAMAGECREATE                      ConsentPermission = "CLAIM_NOTIFICATION_REQUEST_DAMAGE_CREATE"
	ConsentPermissionCLAIMNOTIFICATIONREQUESTPERSONCREATE                      ConsentPermission = "CLAIM_NOTIFICATION_REQUEST_PERSON_CREATE"
	ConsentPermissionCONTRACTLIFEPENSIONLEADCREATE                             ConsentPermission = "CONTRACT_LIFE_PENSION_LEAD_CREATE"
	ConsentPermissionCONTRACTLIFEPENSIONLEADPORTABILITYCREATE                  ConsentPermission = "CONTRACT_LIFE_PENSION_LEAD_PORTABILITY_CREATE"
	ConsentPermissionCONTRACTLIFEPENSIONLEADPORTABILITYUPDATE                  ConsentPermission = "CONTRACT_LIFE_PENSION_LEAD_PORTABILITY_UPDATE"
	ConsentPermissionCONTRACTLIFEPENSIONLEADUPDATE                             ConsentPermission = "CONTRACT_LIFE_PENSION_LEAD_UPDATE"
	ConsentPermissionCONTRACTPENSIONPLANLEADCREATE                             ConsentPermission = "CONTRACT_PENSION_PLAN_LEAD_CREATE"
	ConsentPermissionCONTRACTPENSIONPLANLEADPORTABILITYCREATE                  ConsentPermission = "CONTRACT_PENSION_PLAN_LEAD_PORTABILITY_CREATE"
	ConsentPermissionCONTRACTPENSIONPLANLEADPORTABILITYUPDATE                  ConsentPermission = "CONTRACT_PENSION_PLAN_LEAD_PORTABILITY_UPDATE"
	ConsentPermissionCONTRACTPENSIONPLANLEADUPDATE                             ConsentPermission = "CONTRACT_PENSION_PLAN_LEAD_UPDATE"
	ConsentPermissionCUSTOMERSBUSINESSADDITIONALINFOREAD                       ConsentPermission = "CUSTOMERS_BUSINESS_ADDITIONALINFO_READ"
	ConsentPermissionCUSTOMERSBUSINESSIDENTIFICATIONSREAD                      ConsentPermission = "CUSTOMERS_BUSINESS_IDENTIFICATIONS_READ"
	ConsentPermissionCUSTOMERSBUSINESSQUALIFICATIONREAD                        ConsentPermission = "CUSTOMERS_BUSINESS_QUALIFICATION_READ"
	ConsentPermissionCUSTOMERSPERSONALADDITIONALINFOREAD                       ConsentPermission = "CUSTOMERS_PERSONAL_ADDITIONALINFO_READ"
	ConsentPermissionCUSTOMERSPERSONALIDENTIFICATIONSREAD                      ConsentPermission = "CUSTOMERS_PERSONAL_IDENTIFICATIONS_READ"
	ConsentPermissionCUSTOMERSPERSONALQUALIFICATIONREAD                        ConsentPermission = "CUSTOMERS_PERSONAL_QUALIFICATION_READ"
	ConsentPermissionDAMAGESANDPEOPLEACCEPTANCEANDBRANCHESABROADCLAIMREAD      ConsentPermission = "DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEACCEPTANCEANDBRANCHESABROADPOLICYINFOREAD ConsentPermission = "DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEACCEPTANCEANDBRANCHESABROADPREMIUMREAD    ConsentPermission = "DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEACCEPTANCEANDBRANCHESABROADREAD           ConsentPermission = "DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD_READ"
	ConsentPermissionDAMAGESANDPEOPLEAUTOCLAIMREAD                             ConsentPermission = "DAMAGES_AND_PEOPLE_AUTO_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEAUTOPOLICYINFOREAD                        ConsentPermission = "DAMAGES_AND_PEOPLE_AUTO_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEAUTOPREMIUMREAD                           ConsentPermission = "DAMAGES_AND_PEOPLE_AUTO_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEAUTOREAD                                  ConsentPermission = "DAMAGES_AND_PEOPLE_AUTO_READ"
	ConsentPermissionDAMAGESANDPEOPLEFINANCIALRISKSCLAIMREAD                   ConsentPermission = "DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEFINANCIALRISKSPOLICYINFOREAD              ConsentPermission = "DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEFINANCIALRISKSPREMIUMREAD                 ConsentPermission = "DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEFINANCIALRISKSREAD                        ConsentPermission = "DAMAGES_AND_PEOPLE_FINANCIAL_RISKS_READ"
	ConsentPermissionDAMAGESANDPEOPLEHOUSINGCLAIMREAD                          ConsentPermission = "DAMAGES_AND_PEOPLE_HOUSING_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEHOUSINGPOLICYINFOREAD                     ConsentPermission = "DAMAGES_AND_PEOPLE_HOUSING_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEHOUSINGPREMIUMREAD                        ConsentPermission = "DAMAGES_AND_PEOPLE_HOUSING_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEHOUSINGREAD                               ConsentPermission = "DAMAGES_AND_PEOPLE_HOUSING_READ"
	ConsentPermissionDAMAGESANDPEOPLEPATRIMONIALCLAIMREAD                      ConsentPermission = "DAMAGES_AND_PEOPLE_PATRIMONIAL_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEPATRIMONIALPOLICYINFOREAD                 ConsentPermission = "DAMAGES_AND_PEOPLE_PATRIMONIAL_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEPATRIMONIALPREMIUMREAD                    ConsentPermission = "DAMAGES_AND_PEOPLE_PATRIMONIAL_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEPATRIMONIALREAD                           ConsentPermission = "DAMAGES_AND_PEOPLE_PATRIMONIAL_READ"
	ConsentPermissionDAMAGESANDPEOPLEPERSONCLAIMREAD                           ConsentPermission = "DAMAGES_AND_PEOPLE_PERSON_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLEPERSONPOLICYINFOREAD                      ConsentPermission = "DAMAGES_AND_PEOPLE_PERSON_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLEPERSONPREMIUMREAD                         ConsentPermission = "DAMAGES_AND_PEOPLE_PERSON_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLEPERSONREAD                                ConsentPermission = "DAMAGES_AND_PEOPLE_PERSON_READ"
	ConsentPermissionDAMAGESANDPEOPLERESPONSIBILITYCLAIMREAD                   ConsentPermission = "DAMAGES_AND_PEOPLE_RESPONSIBILITY_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLERESPONSIBILITYPOLICYINFOREAD              ConsentPermission = "DAMAGES_AND_PEOPLE_RESPONSIBILITY_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLERESPONSIBILITYPREMIUMREAD                 ConsentPermission = "DAMAGES_AND_PEOPLE_RESPONSIBILITY_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLERESPONSIBILITYREAD                        ConsentPermission = "DAMAGES_AND_PEOPLE_RESPONSIBILITY_READ"
	ConsentPermissionDAMAGESANDPEOPLERURALCLAIMREAD                            ConsentPermission = "DAMAGES_AND_PEOPLE_RURAL_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLERURALPOLICYINFOREAD                       ConsentPermission = "DAMAGES_AND_PEOPLE_RURAL_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLERURALPREMIUMREAD                          ConsentPermission = "DAMAGES_AND_PEOPLE_RURAL_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLERURALREAD                                 ConsentPermission = "DAMAGES_AND_PEOPLE_RURAL_READ"
	ConsentPermissionDAMAGESANDPEOPLETRANSPORTCLAIMREAD                        ConsentPermission = "DAMAGES_AND_PEOPLE_TRANSPORT_CLAIM_READ"
	ConsentPermissionDAMAGESANDPEOPLETRANSPORTPOLICYINFOREAD                   ConsentPermission = "DAMAGES_AND_PEOPLE_TRANSPORT_POLICYINFO_READ"
	ConsentPermissionDAMAGESANDPEOPLETRANSPORTPREMIUMREAD                      ConsentPermission = "DAMAGES_AND_PEOPLE_TRANSPORT_PREMIUM_READ"
	ConsentPermissionDAMAGESANDPEOPLETRANSPORTREAD                             ConsentPermission = "DAMAGES_AND_PEOPLE_TRANSPORT_READ"
	ConsentPermissionENDORSEMENTREQUESTCREATE                                  ConsentPermission = "ENDORSEMENT_REQUEST_CREATE"
	ConsentPermissionFINANCIALASSISTANCECONTRACTINFOREAD                       ConsentPermission = "FINANCIAL_ASSISTANCE_CONTRACTINFO_READ"
	ConsentPermissionFINANCIALASSISTANCEMOVEMENTSREAD                          ConsentPermission = "FINANCIAL_ASSISTANCE_MOVEMENTS_READ"
	ConsentPermissionFINANCIALASSISTANCEREAD                                   ConsentPermission = "FINANCIAL_ASSISTANCE_READ"
	ConsentPermissionLIFEPENSIONCLAIM                                          ConsentPermission = "LIFE_PENSION_CLAIM"
	ConsentPermissionLIFEPENSIONCONTRACTINFOREAD                               ConsentPermission = "LIFE_PENSION_CONTRACTINFO_READ"
	ConsentPermissionLIFEPENSIONMOVEMENTSREAD                                  ConsentPermission = "LIFE_PENSION_MOVEMENTS_READ"
	ConsentPermissionLIFEPENSIONPORTABILITIESREAD                              ConsentPermission = "LIFE_PENSION_PORTABILITIES_READ"
	ConsentPermissionLIFEPENSIONREAD                                           ConsentPermission = "LIFE_PENSION_READ"
	ConsentPermissionLIFEPENSIONWITHDRAWALSREAD                                ConsentPermission = "LIFE_PENSION_WITHDRAWALS_READ"
	ConsentPermissionPENSIONPLANCLAIM                                          ConsentPermission = "PENSION_PLAN_CLAIM"
	ConsentPermissionPENSIONPLANCONTRACTINFOREAD                               ConsentPermission = "PENSION_PLAN_CONTRACTINFO_READ"
	ConsentPermissionPENSIONPLANMOVEMENTSREAD                                  ConsentPermission = "PENSION_PLAN_MOVEMENTS_READ"
	ConsentPermissionPENSIONPLANPORTABILITIESREAD                              ConsentPermission = "PENSION_PLAN_PORTABILITIES_READ"
	ConsentPermissionPENSIONPLANREAD                                           ConsentPermission = "PENSION_PLAN_READ"
	ConsentPermissionPENSIONPLANWITHDRAWALSREAD                                ConsentPermission = "PENSION_PLAN_WITHDRAWALS_READ"
	ConsentPermissionPENSIONWITHDRAWALCREATE                                   ConsentPermission = "PENSION_WITHDRAWAL_CREATE"
	ConsentPermissionQUOTEACCEPTANCEANDBRANCHESABROADLEADCREATE                ConsentPermission = "QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD_LEAD_CREATE"
	ConsentPermissionQUOTEACCEPTANCEANDBRANCHESABROADLEADUPDATE                ConsentPermission = "QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD_LEAD_UPDATE"
	ConsentPermissionQUOTEAUTOCREATE                                           ConsentPermission = "QUOTE_AUTO_CREATE"
	ConsentPermissionQUOTEAUTOLEADCREATE                                       ConsentPermission = "QUOTE_AUTO_LEAD_CREATE"
	ConsentPermissionQUOTEAUTOLEADUPDATE                                       ConsentPermission = "QUOTE_AUTO_LEAD_UPDATE"
	ConsentPermissionQUOTEAUTOREAD                                             ConsentPermission = "QUOTE_AUTO_READ"
	ConsentPermissionQUOTEAUTOUPDATE                                           ConsentPermission = "QUOTE_AUTO_UPDATE"
	ConsentPermissionQUOTECAPITALIZATIONTITLECREATE                            ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_CREATE"
	ConsentPermissionQUOTECAPITALIZATIONTITLELEADCREATE                        ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_LEAD_CREATE"
	ConsentPermissionQUOTECAPITALIZATIONTITLELEADUPDATE                        ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_LEAD_UPDATE"
	ConsentPermissionQUOTECAPITALIZATIONTITLERAFFLECREATE                      ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_RAFFLE_CREATE"
	ConsentPermissionQUOTECAPITALIZATIONTITLEREAD                              ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_READ"
	ConsentPermissionQUOTECAPITALIZATIONTITLEUPDATE                            ConsentPermission = "QUOTE_CAPITALIZATION_TITLE_UPDATE"
	ConsentPermissionQUOTEFINANCIALRISKLEADCREATE                              ConsentPermission = "QUOTE_FINANCIAL_RISK_LEAD_CREATE"
	ConsentPermissionQUOTEFINANCIALRISKLEADUPDATE                              ConsentPermission = "QUOTE_FINANCIAL_RISK_LEAD_UPDATE"
	ConsentPermissionQUOTEHOUSINGLEADCREATE                                    ConsentPermission = "QUOTE_HOUSING_LEAD_CREATE"
	ConsentPermissionQUOTEHOUSINGLEADUPDATE                                    ConsentPermission = "QUOTE_HOUSING_LEAD_UPDATE"
	ConsentPermissionQUOTEPATRIMONIALBUSINESSCREATE                            ConsentPermission = "QUOTE_PATRIMONIAL_BUSINESS_CREATE"
	ConsentPermissionQUOTEPATRIMONIALBUSINESSREAD                              ConsentPermission = "QUOTE_PATRIMONIAL_BUSINESS_READ"
	ConsentPermissionQUOTEPATRIMONIALBUSINESSUPDATE                            ConsentPermission = "QUOTE_PATRIMONIAL_BUSINESS_UPDATE"
	ConsentPermissionQUOTEPATRIMONIALCONDOMINIUMCREATE                         ConsentPermission = "QUOTE_PATRIMONIAL_CONDOMINIUM_CREATE"
	ConsentPermissionQUOTEPATRIMONIALCONDOMINIUMREAD                           ConsentPermission = "QUOTE_PATRIMONIAL_CONDOMINIUM_READ"
	ConsentPermissionQUOTEPATRIMONIALCONDOMINIUMUPDATE                         ConsentPermission = "QUOTE_PATRIMONIAL_CONDOMINIUM_UPDATE"
	ConsentPermissionQUOTEPATRIMONIALDIVERSERISKSCREATE                        ConsentPermission = "QUOTE_PATRIMONIAL_DIVERSE_RISKS_CREATE"
	ConsentPermissionQUOTEPATRIMONIALDIVERSERISKSREAD                          ConsentPermission = "QUOTE_PATRIMONIAL_DIVERSE_RISKS_READ"
	ConsentPermissionQUOTEPATRIMONIALDIVERSERISKSUPDATE                        ConsentPermission = "QUOTE_PATRIMONIAL_DIVERSE_RISKS_UPDATE"
	ConsentPermissionQUOTEPATRIMONIALHOMECREATE                                ConsentPermission = "QUOTE_PATRIMONIAL_HOME_CREATE"
	ConsentPermissionQUOTEPATRIMONIALHOMEREAD                                  ConsentPermission = "QUOTE_PATRIMONIAL_HOME_READ"
	ConsentPermissionQUOTEPATRIMONIALHOMEUPDATE                                ConsentPermission = "QUOTE_PATRIMONIAL_HOME_UPDATE"
	ConsentPermissionQUOTEPATRIMONIALLEADCREATE                                ConsentPermission = "QUOTE_PATRIMONIAL_LEAD_CREATE"
	ConsentPermissionQUOTEPATRIMONIALLEADUPDATE                                ConsentPermission = "QUOTE_PATRIMONIAL_LEAD_UPDATE"
	ConsentPermissionQUOTEPERSONLEADCREATE                                     ConsentPermission = "QUOTE_PERSON_LEAD_CREATE"
	ConsentPermissionQUOTEPERSONLEADUPDATE                                     ConsentPermission = "QUOTE_PERSON_LEAD_UPDATE"
	ConsentPermissionQUOTEPERSONLIFECREATE                                     ConsentPermission = "QUOTE_PERSON_LIFE_CREATE"
	ConsentPermissionQUOTEPERSONLIFEREAD                                       ConsentPermission = "QUOTE_PERSON_LIFE_READ"
	ConsentPermissionQUOTEPERSONLIFEUPDATE                                     ConsentPermission = "QUOTE_PERSON_LIFE_UPDATE"
	ConsentPermissionQUOTEPERSONTRAVELCREATE                                   ConsentPermission = "QUOTE_PERSON_TRAVEL_CREATE"
	ConsentPermissionQUOTEPERSONTRAVELREAD                                     ConsentPermission = "QUOTE_PERSON_TRAVEL_READ"
	ConsentPermissionQUOTEPERSONTRAVELUPDATE                                   ConsentPermission = "QUOTE_PERSON_TRAVEL_UPDATE"
	ConsentPermissionQUOTERESPONSIBILITYLEADCREATE                             ConsentPermission = "QUOTE_RESPONSIBILITY_LEAD_CREATE"
	ConsentPermissionQUOTERESPONSIBILITYLEADUPDATE                             ConsentPermission = "QUOTE_RESPONSIBILITY_LEAD_UPDATE"
	ConsentPermissionQUOTERURALLEADCREATE                                      ConsentPermission = "QUOTE_RURAL_LEAD_CREATE"
	ConsentPermissionQUOTERURALLEADUPDATE                                      ConsentPermission = "QUOTE_RURAL_LEAD_UPDATE"
	ConsentPermissionQUOTETRANSPORTLEADCREATE                                  ConsentPermission = "QUOTE_TRANSPORT_LEAD_CREATE"
	ConsentPermissionQUOTETRANSPORTLEADUPDATE                                  ConsentPermission = "QUOTE_TRANSPORT_LEAD_UPDATE"
	ConsentPermissionRESOURCESREAD                                             ConsentPermission = "RESOURCES_READ"
)

// Defines values for ConsentRejectedBy.
const (
	ConsentRejectedByASPSP ConsentRejectedBy = "ASPSP"
	ConsentRejectedByTPP   ConsentRejectedBy = "TPP"
	ConsentRejectedByUSER  ConsentRejectedBy = "USER"
)

// Defines values for ConsentRejectedReasonCode.
const (
	ConsentRejectedReasonCodeCONSENTEXPIRED           ConsentRejectedReasonCode = "CONSENT_EXPIRED"
	ConsentRejectedReasonCodeCONSENTMAXDATEREACHED    ConsentRejectedReasonCode = "CONSENT_MAX_DATE_REACHED"
	ConsentRejectedReasonCodeCONSENTTECHNICALISSUE    ConsentRejectedReasonCode = "CONSENT_TECHNICAL_ISSUE"
	ConsentRejectedReasonCodeCUSTOMERMANUALLYREJECTED ConsentRejectedReasonCode = "CUSTOMER_MANUALLY_REJECTED"
	ConsentRejectedReasonCodeCUSTOMERMANUALLYREVOKED  ConsentRejectedReasonCode = "CUSTOMER_MANUALLY_REVOKED"
	ConsentRejectedReasonCodeINTERNALSECURITYREASON   ConsentRejectedReasonCode = "INTERNAL_SECURITY_REASON"
)

// Defines values for ConsentStatus.
const (
	ConsentStatusAUTHORISED            ConsentStatus = "AUTHORISED"
	ConsentStatusAWAITINGAUTHORISATION ConsentStatus = "AWAITING_AUTHORISATION"
	ConsentStatusCONSUMED              ConsentStatus = "CONSUMED"
	ConsentStatusREJECTED              ConsentStatus = "REJECTED"
)

// Defines values for CountrySubDivision.
const (
	CountrySubDivisionAC CountrySubDivision = "AC"
	CountrySubDivisionAL CountrySubDivision = "AL"
	CountrySubDivisionAM CountrySubDivision = "AM"
	CountrySubDivisionAP CountrySubDivision = "AP"
	CountrySubDivisionBA CountrySubDivision = "BA"
	CountrySubDivisionCE CountrySubDivision = "CE"
	CountrySubDivisionDF CountrySubDivision = "DF"
	CountrySubDivisionES CountrySubDivision = "ES"
	CountrySubDivisionGO CountrySubDivision = "GO"
	CountrySubDivisionMA CountrySubDivision = "MA"
	CountrySubDivisionMG CountrySubDivision = "MG"
	CountrySubDivisionMS CountrySubDivision = "MS"
	CountrySubDivisionMT CountrySubDivision = "MT"
	CountrySubDivisionPA CountrySubDivision = "PA"
	CountrySubDivisionPB CountrySubDivision = "PB"
	CountrySubDivisionPE CountrySubDivision = "PE"
	CountrySubDivisionPI CountrySubDivision = "PI"
	CountrySubDivisionPR CountrySubDivision = "PR"
	CountrySubDivisionRJ CountrySubDivision = "RJ"
	CountrySubDivisionRN CountrySubDivision = "RN"
	CountrySubDivisionRO CountrySubDivision = "RO"
	CountrySubDivisionRR CountrySubDivision = "RR"
	CountrySubDivisionRS CountrySubDivision = "RS"
	CountrySubDivisionSC CountrySubDivision = "SC"
	CountrySubDivisionSE CountrySubDivision = "SE"
	CountrySubDivisionSP CountrySubDivision = "SP"
	CountrySubDivisionTO CountrySubDivision = "TO"
)

// Defines values for CreateConsentRequestDataClaimNotificationInformationDocumentType.
const (
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeAPOLICEFROTAAUTOMOVEL      CreateConsentRequestDataClaimNotificationInformationDocumentType = "APOLICE_FROTA_AUTOMOVEL"
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeAPOLICEINDIVIDUAL          CreateConsentRequestDataClaimNotificationInformationDocumentType = "APOLICE_INDIVIDUAL"
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeAPOLICEINDIVIDUALAUTOMOVEL CreateConsentRequestDataClaimNotificationInformationDocumentType = "APOLICE_INDIVIDUAL_AUTOMOVEL"
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeBILHETE                    CreateConsentRequestDataClaimNotificationInformationDocumentType = "BILHETE"
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeCERTIFICADO                CreateConsentRequestDataClaimNotificationInformationDocumentType = "CERTIFICADO"
	CreateConsentRequestDataClaimNotificationInformationDocumentTypeCERTIFICADOAUTOMOVEL       CreateConsentRequestDataClaimNotificationInformationDocumentType = "CERTIFICADO_AUTOMOVEL"
)

// Defines values for DocumentType.
const (
	DocumentTypeCNPJ       DocumentType = "CNPJ"
	DocumentTypeCPF        DocumentType = "CPF"
	DocumentTypeOUTROS     DocumentType = "OUTROS"
	DocumentTypePASSAPORTE DocumentType = "PASSAPORTE"
)

// Defines values for DriverSex.
const (
	DriverSexFEMININO     DriverSex = "FEMININO"
	DriverSexMASCULINO    DriverSex = "MASCULINO"
	DriverSexNAODECLARADO DriverSex = "NAO_DECLARADO"
	DriverSexOUTROS       DriverSex = "OUTROS"
)

// Defines values for EndorsementType.
const (
	EndorsementTypeALTERACAO    EndorsementType = "ALTERACAO"
	EndorsementTypeCANCELAMENTO EndorsementType = "CANCELAMENTO"
	EndorsementTypeEXCLUSAO     EndorsementType = "EXCLUSAO"
	EndorsementTypeINCLUSAO     EndorsementType = "INCLUSAO"
)

// Defines values for FiliationType.
const (
	FiliationTypeMAE         FiliationType = "MAE"
	FiliationTypePAI         FiliationType = "PAI"
	FiliationTypeSEMFILIACAO FiliationType = "SEM_FILIACAO"
)

// Defines values for Frequency.
const (
	FrequencyMENSAL    Frequency = "MENSAL"
	FrequencyPERIODICO Frequency = "PERIODICO"
	FrequencyUNICO     Frequency = "UNICO"
)

// Defines values for GetQuoteAutoStatusResponseDataStatus.
const (
	GetQuoteAutoStatusResponseDataStatusACKN GetQuoteAutoStatusResponseDataStatus = "ACKN"
	GetQuoteAutoStatusResponseDataStatusACPT GetQuoteAutoStatusResponseDataStatus = "ACPT"
	GetQuoteAutoStatusResponseDataStatusCANC GetQuoteAutoStatusResponseDataStatus = "CANC"
	GetQuoteAutoStatusResponseDataStatusEVAL GetQuoteAutoStatusResponseDataStatus = "EVAL"
	GetQuoteAutoStatusResponseDataStatusRCVD GetQuoteAutoStatusResponseDataStatus = "RCVD"
	GetQuoteAutoStatusResponseDataStatusRJCT GetQuoteAutoStatusResponseDataStatus = "RJCT"
)

// Defines values for IdentificationType.
const (
	IdentificationTypeCNPJ   IdentificationType = "CNPJ"
	IdentificationTypeCPF    IdentificationType = "CPF"
	IdentificationTypeOUTROS IdentificationType = "OUTROS"
)

// Defines values for IncomeFrequency.
const (
	IncomeFrequencyANUAL      IncomeFrequency = "ANUAL"
	IncomeFrequencyBIMESTRAL  IncomeFrequency = "BIMESTRAL"
	IncomeFrequencyDIARIA     IncomeFrequency = "DIARIA"
	IncomeFrequencyMENSAL     IncomeFrequency = "MENSAL"
	IncomeFrequencyQUINZENAL  IncomeFrequency = "QUINZENAL"
	IncomeFrequencySEMANAL    IncomeFrequency = "SEMANAL"
	IncomeFrequencySEMESTRAL  IncomeFrequency = "SEMESTRAL"
	IncomeFrequencyTRIMESTRAL IncomeFrequency = "TRIMESTRAL"
)

// Defines values for InsuranceAutoBoundCoverage.
const (
	InsuranceAutoBoundCoverageCONDUTOR InsuranceAutoBoundCoverage = "CONDUTOR"
	InsuranceAutoBoundCoverageOUTROS   InsuranceAutoBoundCoverage = "OUTROS"
	InsuranceAutoBoundCoverageVEICULO  InsuranceAutoBoundCoverage = "VEICULO"
)

// Defines values for InsuranceAutoClaimDenialJustification.
const (
	InsuranceAutoClaimDenialJustificationDOCUMENTACAOINCOMPLETA InsuranceAutoClaimDenialJustification = "DOCUMENTACAO_INCOMPLETA"
	InsuranceAutoClaimDenialJustificationFORACOBERTURA          InsuranceAutoClaimDenialJustification = "FORA_COBERTURA"
	InsuranceAutoClaimDenialJustificationOUTROS                 InsuranceAutoClaimDenialJustification = "OUTROS"
	InsuranceAutoClaimDenialJustificationPRESCRICAO             InsuranceAutoClaimDenialJustification = "PRESCRICAO"
	InsuranceAutoClaimDenialJustificationRISCOAGRAVADO          InsuranceAutoClaimDenialJustification = "RISCO_AGRAVADO"
	InsuranceAutoClaimDenialJustificationRISCOEXCLUIDO          InsuranceAutoClaimDenialJustification = "RISCO_EXCLUIDO"
	InsuranceAutoClaimDenialJustificationSEMDOCUMENTACAO        InsuranceAutoClaimDenialJustification = "SEM_DOCUMENTACAO"
)

// Defines values for InsuranceAutoClaimStatus.
const (
	InsuranceAutoClaimStatusABERTO                      InsuranceAutoClaimStatus = "ABERTO"
	InsuranceAutoClaimStatusAVALIACAOINICIAL            InsuranceAutoClaimStatus = "AVALIACAO_INICIAL"
	InsuranceAutoClaimStatusCANCELADOPORERROOPERACIONAL InsuranceAutoClaimStatus = "CANCELADO_POR_ERRO_OPERACIONAL"
	InsuranceAutoClaimStatusENCERRADOCOMINDENIZACAO     InsuranceAutoClaimStatus = "ENCERRADO_COM_INDENIZACAO"
	InsuranceAutoClaimStatusENCERRADOSEMINDENIZACAO     InsuranceAutoClaimStatus = "ENCERRADO_SEM_INDENIZACAO"
	InsuranceAutoClaimStatusREABERTO                    InsuranceAutoClaimStatus = "REABERTO"
)

// Defines values for InsuranceAutoCoverageCode.
const (
	InsuranceAutoCoverageCodeACESSORIOSEEQUIPAMENTOS                        InsuranceAutoCoverageCode = "ACESSORIOS_E_EQUIPAMENTOS"
	InsuranceAutoCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPCONDUTOR       InsuranceAutoCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_CONDUTOR"
	InsuranceAutoCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPVEICULO        InsuranceAutoCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_VEICULO"
	InsuranceAutoCoverageCodeCARRORESERVA                                   InsuranceAutoCoverageCode = "CARRO_RESERVA"
	InsuranceAutoCoverageCodeCASCOALAGAMENTO                                InsuranceAutoCoverageCode = "CASCO_ALAGAMENTO"
	InsuranceAutoCoverageCodeCASCOCOLISAOINDENIZACAOINTEGRAL                InsuranceAutoCoverageCode = "CASCO_COLISAO_INDENIZACAO_INTEGRAL"
	InsuranceAutoCoverageCodeCASCOCOLISAOINDENIZACAOPARCIAL                 InsuranceAutoCoverageCode = "CASCO_COLISAO_INDENIZACAO_PARCIAL"
	InsuranceAutoCoverageCodeCASCOCOMPREENSIVA                              InsuranceAutoCoverageCode = "CASCO_COMPREENSIVA"
	InsuranceAutoCoverageCodeCASCOINCENDIO                                  InsuranceAutoCoverageCode = "CASCO_INCENDIO"
	InsuranceAutoCoverageCodeCASCOINCENDIOROUBOEFURTO                       InsuranceAutoCoverageCode = "CASCO_INCENDIO_ROUBO_E_FURTO"
	InsuranceAutoCoverageCodeCASCOROUBOEFURTO                               InsuranceAutoCoverageCode = "CASCO_ROUBO_E_FURTO"
	InsuranceAutoCoverageCodeDIARIAPORINDISPONIBILIDADE                     InsuranceAutoCoverageCode = "DIARIA_POR_INDISPONIBILIDADE"
	InsuranceAutoCoverageCodeLFRLANTERNASFAROISERETROVISORES                InsuranceAutoCoverageCode = "LFR_LANTERNAS_FAROIS_E_RETROVISORES"
	InsuranceAutoCoverageCodeOUTRAS                                         InsuranceAutoCoverageCode = "OUTRAS"
	InsuranceAutoCoverageCodePEQUENOSREPAROS                                InsuranceAutoCoverageCode = "PEQUENOS_REPAROS"
	InsuranceAutoCoverageCodeRESPONSABILIDADECIVILCARTAVERDE                InsuranceAutoCoverageCode = "RESPONSABILIDADE_CIVIL_CARTA_VERDE"
	InsuranceAutoCoverageCodeRESPONSABILIDADECIVILFACULTATIVADEVEICULOSRCFV InsuranceAutoCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DE_VEICULOS_RCFV"
	InsuranceAutoCoverageCodeRESPONSABILIDADECIVILFACULTATIVADOCONDUTORRCFC InsuranceAutoCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DO_CONDUTOR_RCFC"
	InsuranceAutoCoverageCodeVIDROS                                         InsuranceAutoCoverageCode = "VIDROS"
)

// Defines values for InsuranceAutoDeductiblePeriodCountingMethod.
const (
	InsuranceAutoDeductiblePeriodCountingMethodDIASCORRIDOS InsuranceAutoDeductiblePeriodCountingMethod = "DIAS_CORRIDOS"
	InsuranceAutoDeductiblePeriodCountingMethodDIASUTEIS    InsuranceAutoDeductiblePeriodCountingMethod = "DIAS_UTEIS"
)

// Defines values for InsuranceAutoDeductiblePeriodicity.
const (
	InsuranceAutoDeductiblePeriodicityANO InsuranceAutoDeductiblePeriodicity = "ANO"
	InsuranceAutoDeductiblePeriodicityDIA InsuranceAutoDeductiblePeriodicity = "DIA"
	InsuranceAutoDeductiblePeriodicityMES InsuranceAutoDeductiblePeriodicity = "MES"
)

// Defines values for InsuranceAutoDeductibleType.
const (
	InsuranceAutoDeductibleTypeDEDUTIVEL InsuranceAutoDeductibleType = "DEDUTIVEL"
	InsuranceAutoDeductibleTypeMAJORADA  InsuranceAutoDeductibleType = "MAJORADA"
	InsuranceAutoDeductibleTypeNORMAL    InsuranceAutoDeductibleType = "NORMAL"
	InsuranceAutoDeductibleTypeOUTROS    InsuranceAutoDeductibleType = "OUTROS"
	InsuranceAutoDeductibleTypeREDUZIDA  InsuranceAutoDeductibleType = "REDUZIDA"
)

// Defines values for InsuranceAutoFareCategory.
const (
	InsuranceAutoFareCategoryN10  InsuranceAutoFareCategory = "10"
	InsuranceAutoFareCategoryN11  InsuranceAutoFareCategory = "11"
	InsuranceAutoFareCategoryN14A InsuranceAutoFareCategory = "14A"
	InsuranceAutoFareCategoryN14B InsuranceAutoFareCategory = "14B"
	InsuranceAutoFareCategoryN14C InsuranceAutoFareCategory = "14C"
	InsuranceAutoFareCategoryN15  InsuranceAutoFareCategory = "15"
	InsuranceAutoFareCategoryN16  InsuranceAutoFareCategory = "16"
	InsuranceAutoFareCategoryN17  InsuranceAutoFareCategory = "17"
	InsuranceAutoFareCategoryN18  InsuranceAutoFareCategory = "18"
	InsuranceAutoFareCategoryN19  InsuranceAutoFareCategory = "19"
	InsuranceAutoFareCategoryN20  InsuranceAutoFareCategory = "20"
	InsuranceAutoFareCategoryN21  InsuranceAutoFareCategory = "21"
	InsuranceAutoFareCategoryN22  InsuranceAutoFareCategory = "22"
	InsuranceAutoFareCategoryN23  InsuranceAutoFareCategory = "23"
	InsuranceAutoFareCategoryN30  InsuranceAutoFareCategory = "30"
	InsuranceAutoFareCategoryN31  InsuranceAutoFareCategory = "31"
	InsuranceAutoFareCategoryN40  InsuranceAutoFareCategory = "40"
	InsuranceAutoFareCategoryN41  InsuranceAutoFareCategory = "41"
	InsuranceAutoFareCategoryN42  InsuranceAutoFareCategory = "42"
	InsuranceAutoFareCategoryN43  InsuranceAutoFareCategory = "43"
	InsuranceAutoFareCategoryN50  InsuranceAutoFareCategory = "50"
	InsuranceAutoFareCategoryN51  InsuranceAutoFareCategory = "51"
	InsuranceAutoFareCategoryN52  InsuranceAutoFareCategory = "52"
	InsuranceAutoFareCategoryN53  InsuranceAutoFareCategory = "53"
	InsuranceAutoFareCategoryN58  InsuranceAutoFareCategory = "58"
	InsuranceAutoFareCategoryN59  InsuranceAutoFareCategory = "59"
	InsuranceAutoFareCategoryN60  InsuranceAutoFareCategory = "60"
	InsuranceAutoFareCategoryN61  InsuranceAutoFareCategory = "61"
	InsuranceAutoFareCategoryN62  InsuranceAutoFareCategory = "62"
	InsuranceAutoFareCategoryN63  InsuranceAutoFareCategory = "63"
	InsuranceAutoFareCategoryN68  InsuranceAutoFareCategory = "68"
	InsuranceAutoFareCategoryN69  InsuranceAutoFareCategory = "69"
	InsuranceAutoFareCategoryN70  InsuranceAutoFareCategory = "70"
	InsuranceAutoFareCategoryN71  InsuranceAutoFareCategory = "71"
	InsuranceAutoFareCategoryN72  InsuranceAutoFareCategory = "72"
	InsuranceAutoFareCategoryN73  InsuranceAutoFareCategory = "73"
	InsuranceAutoFareCategoryN80  InsuranceAutoFareCategory = "80"
	InsuranceAutoFareCategoryN81  InsuranceAutoFareCategory = "81"
	InsuranceAutoFareCategoryN82  InsuranceAutoFareCategory = "82"
	InsuranceAutoFareCategoryN83  InsuranceAutoFareCategory = "83"
	InsuranceAutoFareCategoryN84  InsuranceAutoFareCategory = "84"
	InsuranceAutoFareCategoryN85  InsuranceAutoFareCategory = "85"
	InsuranceAutoFareCategoryN86  InsuranceAutoFareCategory = "86"
	InsuranceAutoFareCategoryN87  InsuranceAutoFareCategory = "87"
	InsuranceAutoFareCategoryN88  InsuranceAutoFareCategory = "88"
	InsuranceAutoFareCategoryN89  InsuranceAutoFareCategory = "89"
	InsuranceAutoFareCategoryN90  InsuranceAutoFareCategory = "90"
	InsuranceAutoFareCategoryN91  InsuranceAutoFareCategory = "91"
	InsuranceAutoFareCategoryN92  InsuranceAutoFareCategory = "92"
	InsuranceAutoFareCategoryN93  InsuranceAutoFareCategory = "93"
	InsuranceAutoFareCategoryN94  InsuranceAutoFareCategory = "94"
	InsuranceAutoFareCategoryN95  InsuranceAutoFareCategory = "95"
	InsuranceAutoFareCategoryN96  InsuranceAutoFareCategory = "96"
	InsuranceAutoFareCategoryN97  InsuranceAutoFareCategory = "97"
)

// Defines values for InsuranceAutoInsuredObjectAmountReferenceTable.
const (
	InsuranceAutoInsuredObjectAmountReferenceTableFIPE          InsuranceAutoInsuredObjectAmountReferenceTable = "FIPE"
	InsuranceAutoInsuredObjectAmountReferenceTableJORNALDOCARRO InsuranceAutoInsuredObjectAmountReferenceTable = "JORNAL_DO_CARRO"
	InsuranceAutoInsuredObjectAmountReferenceTableMOLICAR       InsuranceAutoInsuredObjectAmountReferenceTable = "MOLICAR"
	InsuranceAutoInsuredObjectAmountReferenceTableOUTRAS        InsuranceAutoInsuredObjectAmountReferenceTable = "OUTRAS"
	InsuranceAutoInsuredObjectAmountReferenceTableVD            InsuranceAutoInsuredObjectAmountReferenceTable = "VD"
)

// Defines values for InsuranceAutoInsuredObjectFareCategory.
const (
	InsuranceAutoInsuredObjectFareCategoryN10  InsuranceAutoInsuredObjectFareCategory = "10"
	InsuranceAutoInsuredObjectFareCategoryN11  InsuranceAutoInsuredObjectFareCategory = "11"
	InsuranceAutoInsuredObjectFareCategoryN14A InsuranceAutoInsuredObjectFareCategory = "14A"
	InsuranceAutoInsuredObjectFareCategoryN14B InsuranceAutoInsuredObjectFareCategory = "14B"
	InsuranceAutoInsuredObjectFareCategoryN14C InsuranceAutoInsuredObjectFareCategory = "14C"
	InsuranceAutoInsuredObjectFareCategoryN15  InsuranceAutoInsuredObjectFareCategory = "15"
	InsuranceAutoInsuredObjectFareCategoryN16  InsuranceAutoInsuredObjectFareCategory = "16"
	InsuranceAutoInsuredObjectFareCategoryN17  InsuranceAutoInsuredObjectFareCategory = "17"
	InsuranceAutoInsuredObjectFareCategoryN18  InsuranceAutoInsuredObjectFareCategory = "18"
	InsuranceAutoInsuredObjectFareCategoryN19  InsuranceAutoInsuredObjectFareCategory = "19"
	InsuranceAutoInsuredObjectFareCategoryN20  InsuranceAutoInsuredObjectFareCategory = "20"
	InsuranceAutoInsuredObjectFareCategoryN21  InsuranceAutoInsuredObjectFareCategory = "21"
	InsuranceAutoInsuredObjectFareCategoryN22  InsuranceAutoInsuredObjectFareCategory = "22"
	InsuranceAutoInsuredObjectFareCategoryN23  InsuranceAutoInsuredObjectFareCategory = "23"
	InsuranceAutoInsuredObjectFareCategoryN30  InsuranceAutoInsuredObjectFareCategory = "30"
	InsuranceAutoInsuredObjectFareCategoryN31  InsuranceAutoInsuredObjectFareCategory = "31"
	InsuranceAutoInsuredObjectFareCategoryN40  InsuranceAutoInsuredObjectFareCategory = "40"
	InsuranceAutoInsuredObjectFareCategoryN41  InsuranceAutoInsuredObjectFareCategory = "41"
	InsuranceAutoInsuredObjectFareCategoryN42  InsuranceAutoInsuredObjectFareCategory = "42"
	InsuranceAutoInsuredObjectFareCategoryN43  InsuranceAutoInsuredObjectFareCategory = "43"
	InsuranceAutoInsuredObjectFareCategoryN50  InsuranceAutoInsuredObjectFareCategory = "50"
	InsuranceAutoInsuredObjectFareCategoryN51  InsuranceAutoInsuredObjectFareCategory = "51"
	InsuranceAutoInsuredObjectFareCategoryN52  InsuranceAutoInsuredObjectFareCategory = "52"
	InsuranceAutoInsuredObjectFareCategoryN53  InsuranceAutoInsuredObjectFareCategory = "53"
	InsuranceAutoInsuredObjectFareCategoryN58  InsuranceAutoInsuredObjectFareCategory = "58"
	InsuranceAutoInsuredObjectFareCategoryN59  InsuranceAutoInsuredObjectFareCategory = "59"
	InsuranceAutoInsuredObjectFareCategoryN60  InsuranceAutoInsuredObjectFareCategory = "60"
	InsuranceAutoInsuredObjectFareCategoryN61  InsuranceAutoInsuredObjectFareCategory = "61"
	InsuranceAutoInsuredObjectFareCategoryN62  InsuranceAutoInsuredObjectFareCategory = "62"
	InsuranceAutoInsuredObjectFareCategoryN63  InsuranceAutoInsuredObjectFareCategory = "63"
	InsuranceAutoInsuredObjectFareCategoryN68  InsuranceAutoInsuredObjectFareCategory = "68"
	InsuranceAutoInsuredObjectFareCategoryN69  InsuranceAutoInsuredObjectFareCategory = "69"
	InsuranceAutoInsuredObjectFareCategoryN70  InsuranceAutoInsuredObjectFareCategory = "70"
	InsuranceAutoInsuredObjectFareCategoryN71  InsuranceAutoInsuredObjectFareCategory = "71"
	InsuranceAutoInsuredObjectFareCategoryN72  InsuranceAutoInsuredObjectFareCategory = "72"
	InsuranceAutoInsuredObjectFareCategoryN73  InsuranceAutoInsuredObjectFareCategory = "73"
	InsuranceAutoInsuredObjectFareCategoryN80  InsuranceAutoInsuredObjectFareCategory = "80"
	InsuranceAutoInsuredObjectFareCategoryN81  InsuranceAutoInsuredObjectFareCategory = "81"
	InsuranceAutoInsuredObjectFareCategoryN82  InsuranceAutoInsuredObjectFareCategory = "82"
	InsuranceAutoInsuredObjectFareCategoryN83  InsuranceAutoInsuredObjectFareCategory = "83"
	InsuranceAutoInsuredObjectFareCategoryN84  InsuranceAutoInsuredObjectFareCategory = "84"
	InsuranceAutoInsuredObjectFareCategoryN85  InsuranceAutoInsuredObjectFareCategory = "85"
	InsuranceAutoInsuredObjectFareCategoryN86  InsuranceAutoInsuredObjectFareCategory = "86"
	InsuranceAutoInsuredObjectFareCategoryN87  InsuranceAutoInsuredObjectFareCategory = "87"
	InsuranceAutoInsuredObjectFareCategoryN88  InsuranceAutoInsuredObjectFareCategory = "88"
	InsuranceAutoInsuredObjectFareCategoryN89  InsuranceAutoInsuredObjectFareCategory = "89"
	InsuranceAutoInsuredObjectFareCategoryN90  InsuranceAutoInsuredObjectFareCategory = "90"
	InsuranceAutoInsuredObjectFareCategoryN91  InsuranceAutoInsuredObjectFareCategory = "91"
	InsuranceAutoInsuredObjectFareCategoryN92  InsuranceAutoInsuredObjectFareCategory = "92"
	InsuranceAutoInsuredObjectFareCategoryN93  InsuranceAutoInsuredObjectFareCategory = "93"
	InsuranceAutoInsuredObjectFareCategoryN94  InsuranceAutoInsuredObjectFareCategory = "94"
	InsuranceAutoInsuredObjectFareCategoryN95  InsuranceAutoInsuredObjectFareCategory = "95"
	InsuranceAutoInsuredObjectFareCategoryN96  InsuranceAutoInsuredObjectFareCategory = "96"
	InsuranceAutoInsuredObjectFareCategoryN97  InsuranceAutoInsuredObjectFareCategory = "97"
)

// Defines values for InsuranceAutoInsuredObjectModality.
const (
	InsuranceAutoInsuredObjectModalityCRITERIODIVERSO            InsuranceAutoInsuredObjectModality = "CRITERIO_DIVERSO"
	InsuranceAutoInsuredObjectModalityOUTROS                     InsuranceAutoInsuredObjectModality = "OUTROS"
	InsuranceAutoInsuredObjectModalityVALORDEMERCADOREFERENCIADO InsuranceAutoInsuredObjectModality = "VALOR_DE_MERCADO_REFERENCIADO"
	InsuranceAutoInsuredObjectModalityVALORDETERMINADO           InsuranceAutoInsuredObjectModality = "VALOR_DETERMINADO"
)

// Defines values for InsuranceAutoInsuredObjectType.
const (
	InsuranceAutoInsuredObjectTypeAUTOMOVEL InsuranceAutoInsuredObjectType = "AUTOMOVEL"
	InsuranceAutoInsuredObjectTypeCONDUTOR  InsuranceAutoInsuredObjectType = "CONDUTOR"
	InsuranceAutoInsuredObjectTypeFROTA     InsuranceAutoInsuredObjectType = "FROTA"
)

// Defines values for InsuranceAutoInsuredObjectVehicleUsage.
const (
	InsuranceAutoInsuredObjectVehicleUsageEXERCICIODOTRABALHO InsuranceAutoInsuredObjectVehicleUsage = "EXERCICIO_DO_TRABALHO"
	InsuranceAutoInsuredObjectVehicleUsageLAZER               InsuranceAutoInsuredObjectVehicleUsage = "LAZER"
	InsuranceAutoInsuredObjectVehicleUsageLOCOMOCAODIARIA     InsuranceAutoInsuredObjectVehicleUsage = "LOCOMOCAO_DIARIA"
	InsuranceAutoInsuredObjectVehicleUsageOUTROS              InsuranceAutoInsuredObjectVehicleUsage = "OUTROS"
)

// Defines values for InsuranceAutoInsuredObjectCoverageBoundCoverage.
const (
	InsuranceAutoInsuredObjectCoverageBoundCoverageCONDUTOR InsuranceAutoInsuredObjectCoverageBoundCoverage = "CONDUTOR"
	InsuranceAutoInsuredObjectCoverageBoundCoverageOUTROS   InsuranceAutoInsuredObjectCoverageBoundCoverage = "OUTROS"
	InsuranceAutoInsuredObjectCoverageBoundCoverageVEICULO  InsuranceAutoInsuredObjectCoverageBoundCoverage = "VEICULO"
)

// Defines values for InsuranceAutoInsuredObjectCoverageCode.
const (
	InsuranceAutoInsuredObjectCoverageCodeACESSORIOSEEQUIPAMENTOS                        InsuranceAutoInsuredObjectCoverageCode = "ACESSORIOS_E_EQUIPAMENTOS"
	InsuranceAutoInsuredObjectCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPCONDUTOR       InsuranceAutoInsuredObjectCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_CONDUTOR"
	InsuranceAutoInsuredObjectCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPVEICULO        InsuranceAutoInsuredObjectCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_VEICULO"
	InsuranceAutoInsuredObjectCoverageCodeCARRORESERVA                                   InsuranceAutoInsuredObjectCoverageCode = "CARRO_RESERVA"
	InsuranceAutoInsuredObjectCoverageCodeCASCOALAGAMENTO                                InsuranceAutoInsuredObjectCoverageCode = "CASCO_ALAGAMENTO"
	InsuranceAutoInsuredObjectCoverageCodeCASCOCOLISAOINDENIZACAOINTEGRAL                InsuranceAutoInsuredObjectCoverageCode = "CASCO_COLISAO_INDENIZACAO_INTEGRAL"
	InsuranceAutoInsuredObjectCoverageCodeCASCOCOLISAOINDENIZACAOPARCIAL                 InsuranceAutoInsuredObjectCoverageCode = "CASCO_COLISAO_INDENIZACAO_PARCIAL"
	InsuranceAutoInsuredObjectCoverageCodeCASCOCOMPREENSIVA                              InsuranceAutoInsuredObjectCoverageCode = "CASCO_COMPREENSIVA"
	InsuranceAutoInsuredObjectCoverageCodeCASCOINCENDIO                                  InsuranceAutoInsuredObjectCoverageCode = "CASCO_INCENDIO"
	InsuranceAutoInsuredObjectCoverageCodeCASCOINCENDIOROUBOEFURTO                       InsuranceAutoInsuredObjectCoverageCode = "CASCO_INCENDIO_ROUBO_E_FURTO"
	InsuranceAutoInsuredObjectCoverageCodeCASCOROUBOEFURTO                               InsuranceAutoInsuredObjectCoverageCode = "CASCO_ROUBO_E_FURTO"
	InsuranceAutoInsuredObjectCoverageCodeDIARIAPORINDISPONIBILIDADE                     InsuranceAutoInsuredObjectCoverageCode = "DIARIA_POR_INDISPONIBILIDADE"
	InsuranceAutoInsuredObjectCoverageCodeLFRLANTERNASFAROISERETROVISORES                InsuranceAutoInsuredObjectCoverageCode = "LFR_LANTERNAS_FAROIS_E_RETROVISORES"
	InsuranceAutoInsuredObjectCoverageCodeOUTRAS                                         InsuranceAutoInsuredObjectCoverageCode = "OUTRAS"
	InsuranceAutoInsuredObjectCoverageCodePEQUENOSREPAROS                                InsuranceAutoInsuredObjectCoverageCode = "PEQUENOS_REPAROS"
	InsuranceAutoInsuredObjectCoverageCodeRESPONSABILIDADECIVILCARTAVERDE                InsuranceAutoInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_CARTA_VERDE"
	InsuranceAutoInsuredObjectCoverageCodeRESPONSABILIDADECIVILFACULTATIVADEVEICULOSRCFV InsuranceAutoInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DE_VEICULOS_RCFV"
	InsuranceAutoInsuredObjectCoverageCodeRESPONSABILIDADECIVILFACULTATIVADOCONDUTORRCFC InsuranceAutoInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DO_CONDUTOR_RCFC"
	InsuranceAutoInsuredObjectCoverageCodeVIDROS                                         InsuranceAutoInsuredObjectCoverageCode = "VIDROS"
)

// Defines values for InsuranceAutoInsuredObjectCoverageCompensationType.
const (
	InsuranceAutoInsuredObjectCoverageCompensationTypeINTEGRAL InsuranceAutoInsuredObjectCoverageCompensationType = "INTEGRAL"
	InsuranceAutoInsuredObjectCoverageCompensationTypeOUTROS   InsuranceAutoInsuredObjectCoverageCompensationType = "OUTROS"
	InsuranceAutoInsuredObjectCoverageCompensationTypePARCIAL  InsuranceAutoInsuredObjectCoverageCompensationType = "PARCIAL"
)

// Defines values for InsuranceAutoInsuredObjectCoverageFeature.
const (
	InsuranceAutoInsuredObjectCoverageFeatureGRANDESRISCOS            InsuranceAutoInsuredObjectCoverageFeature = "GRANDES_RISCOS"
	InsuranceAutoInsuredObjectCoverageFeatureMASSIFICADOS             InsuranceAutoInsuredObjectCoverageFeature = "MASSIFICADOS"
	InsuranceAutoInsuredObjectCoverageFeatureMASSIFICADOSMICROSEGUROS InsuranceAutoInsuredObjectCoverageFeature = "MASSIFICADOS_MICROSEGUROS"
)

// Defines values for InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod.
const (
	InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethodDIASCORRIDOS InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod = "DIAS_CORRIDOS"
	InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethodDIASUTEIS    InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod = "DIAS_UTEIS"
)

// Defines values for InsuranceAutoInsuredObjectCoverageGracePeriodicity.
const (
	InsuranceAutoInsuredObjectCoverageGracePeriodicityANO InsuranceAutoInsuredObjectCoverageGracePeriodicity = "ANO"
	InsuranceAutoInsuredObjectCoverageGracePeriodicityDIA InsuranceAutoInsuredObjectCoverageGracePeriodicity = "DIA"
	InsuranceAutoInsuredObjectCoverageGracePeriodicityMES InsuranceAutoInsuredObjectCoverageGracePeriodicity = "MES"
)

// Defines values for InsuranceAutoInsuredObjectCoverageType.
const (
	InsuranceAutoInsuredObjectCoverageTypeCAPITALGLOBAL            InsuranceAutoInsuredObjectCoverageType = "CAPITAL_GLOBAL"
	InsuranceAutoInsuredObjectCoverageTypeINTERMITENTE             InsuranceAutoInsuredObjectCoverageType = "INTERMITENTE"
	InsuranceAutoInsuredObjectCoverageTypePARAMETRICO              InsuranceAutoInsuredObjectCoverageType = "PARAMETRICO"
	InsuranceAutoInsuredObjectCoverageTypePARAMETRICOEINTERMITENTE InsuranceAutoInsuredObjectCoverageType = "PARAMETRICO_E_INTERMITENTE"
	InsuranceAutoInsuredObjectCoverageTypeREGULARCOMUM             InsuranceAutoInsuredObjectCoverageType = "REGULAR_COMUM"
)

// Defines values for InsuranceAutoObjectAmountReferenceTable.
const (
	InsuranceAutoObjectAmountReferenceTableFIPE          InsuranceAutoObjectAmountReferenceTable = "FIPE"
	InsuranceAutoObjectAmountReferenceTableJORNALDOCARRO InsuranceAutoObjectAmountReferenceTable = "JORNAL_DO_CARRO"
	InsuranceAutoObjectAmountReferenceTableMOLICAR       InsuranceAutoObjectAmountReferenceTable = "MOLICAR"
	InsuranceAutoObjectAmountReferenceTableOUTRAS        InsuranceAutoObjectAmountReferenceTable = "OUTRAS"
	InsuranceAutoObjectAmountReferenceTableVD            InsuranceAutoObjectAmountReferenceTable = "VD"
)

// Defines values for InsuranceAutoObjectModality.
const (
	InsuranceAutoObjectModalityCRITERIODIVERSO            InsuranceAutoObjectModality = "CRITERIO_DIVERSO"
	InsuranceAutoObjectModalityOUTROS                     InsuranceAutoObjectModality = "OUTROS"
	InsuranceAutoObjectModalityVALORDEMERCADOREFERENCIADO InsuranceAutoObjectModality = "VALOR_DE_MERCADO_REFERENCIADO"
	InsuranceAutoObjectModalityVALORDETERMINADO           InsuranceAutoObjectModality = "VALOR_DETERMINADO"
)

// Defines values for InsuranceAutoObjectType.
const (
	InsuranceAutoObjectTypeAUTOMOVEL InsuranceAutoObjectType = "AUTOMOVEL"
	InsuranceAutoObjectTypeCONDUTOR  InsuranceAutoObjectType = "CONDUTOR"
	InsuranceAutoObjectTypeFROTA     InsuranceAutoObjectType = "FROTA"
)

// Defines values for InsuranceAutoOccurenceCause.
const (
	InsuranceAutoOccurenceCauseASSISTENCIAHORAS           InsuranceAutoOccurenceCause = "ASSISTENCIA_HORAS"
	InsuranceAutoOccurenceCauseCOLISAOINDENIZACAOINTEGRAL InsuranceAutoOccurenceCause = "COLISAO_INDENIZACAO_INTEGRAL"
	InsuranceAutoOccurenceCauseCOLISAOPARCIAL             InsuranceAutoOccurenceCause = "COLISAO_PARCIAL"
	InsuranceAutoOccurenceCauseFURTO                      InsuranceAutoOccurenceCause = "FURTO"
	InsuranceAutoOccurenceCauseINCENDIO                   InsuranceAutoOccurenceCause = "INCENDIO"
	InsuranceAutoOccurenceCauseOUTROS                     InsuranceAutoOccurenceCause = "OUTROS"
	InsuranceAutoOccurenceCauseROUBO                      InsuranceAutoOccurenceCause = "ROUBO"
	InsuranceAutoOccurenceCauseROUBOOUFURTO               InsuranceAutoOccurenceCause = "ROUBO_OU_FURTO"
)

// Defines values for InsuranceAutoPOSApplicationType.
const (
	InsuranceAutoPOSApplicationTypeOUTROS     InsuranceAutoPOSApplicationType = "OUTROS"
	InsuranceAutoPOSApplicationTypePERCENTUAL InsuranceAutoPOSApplicationType = "PERCENTUAL"
	InsuranceAutoPOSApplicationTypeVALOR      InsuranceAutoPOSApplicationType = "VALOR"
)

// Defines values for InsuranceAutoPolicyInfoAssistancePackages.
const (
	InsuranceAutoPolicyInfoAssistancePackagesACIMADEVINTESERVICOS InsuranceAutoPolicyInfoAssistancePackages = "ACIMA_DE_VINTE_SERVICOS"
	InsuranceAutoPolicyInfoAssistancePackagesATEDEZSERVICOS       InsuranceAutoPolicyInfoAssistancePackages = "ATE_DEZ_SERVICOS"
	InsuranceAutoPolicyInfoAssistancePackagesATEVINTESERVICOS     InsuranceAutoPolicyInfoAssistancePackages = "ATE_VINTE_SERVICOS"
	InsuranceAutoPolicyInfoAssistancePackagesCUSTOMIZAVEL         InsuranceAutoPolicyInfoAssistancePackages = "CUSTOMIZAVEL"
)

// Defines values for InsuranceAutoPolicyInfoDocumentType.
const (
	InsuranceAutoPolicyInfoDocumentTypeAPOLICEFROTAAUTOMOVEL      InsuranceAutoPolicyInfoDocumentType = "APOLICE_FROTA_AUTOMOVEL"
	InsuranceAutoPolicyInfoDocumentTypeAPOLICEINDIVIDUAL          InsuranceAutoPolicyInfoDocumentType = "APOLICE_INDIVIDUAL"
	InsuranceAutoPolicyInfoDocumentTypeAPOLICEINDIVIDUALAUTOMOVEL InsuranceAutoPolicyInfoDocumentType = "APOLICE_INDIVIDUAL_AUTOMOVEL"
	InsuranceAutoPolicyInfoDocumentTypeBILHETE                    InsuranceAutoPolicyInfoDocumentType = "BILHETE"
	InsuranceAutoPolicyInfoDocumentTypeCERTIFICADO                InsuranceAutoPolicyInfoDocumentType = "CERTIFICADO"
	InsuranceAutoPolicyInfoDocumentTypeCERTIFICADOAUTOMOVEL       InsuranceAutoPolicyInfoDocumentType = "CERTIFICADO_AUTOMOVEL"
)

// Defines values for InsuranceAutoPolicyInfoIssuanceType.
const (
	InsuranceAutoPolicyInfoIssuanceTypeCOSSEGUROACEITO InsuranceAutoPolicyInfoIssuanceType = "COSSEGURO_ACEITO"
	InsuranceAutoPolicyInfoIssuanceTypeEMISSAOPROPRIA  InsuranceAutoPolicyInfoIssuanceType = "EMISSAO_PROPRIA"
)

// Defines values for InsuranceAutoPolicyInfoOtherBenefits.
const (
	InsuranceAutoPolicyInfoOtherBenefitsCASHBACK          InsuranceAutoPolicyInfoOtherBenefits = "CASH_BACK"
	InsuranceAutoPolicyInfoOtherBenefitsCLUBEDEBENEFICIOS InsuranceAutoPolicyInfoOtherBenefits = "CLUBE_DE_BENEFICIOS"
	InsuranceAutoPolicyInfoOtherBenefitsCUSTOMIZAVEL      InsuranceAutoPolicyInfoOtherBenefits = "CUSTOMIZAVEL"
	InsuranceAutoPolicyInfoOtherBenefitsDESCONTOS         InsuranceAutoPolicyInfoOtherBenefits = "DESCONTOS"
	InsuranceAutoPolicyInfoOtherBenefitsSORTEIOGRATUITO   InsuranceAutoPolicyInfoOtherBenefits = "SORTEIO_GRATUITO"
)

// Defines values for InsuranceAutoPolicyInfoRepairNetwork.
const (
	InsuranceAutoPolicyInfoRepairNetworkAMBAS            InsuranceAutoPolicyInfoRepairNetwork = "AMBAS"
	InsuranceAutoPolicyInfoRepairNetworkLIVREESCOLHA     InsuranceAutoPolicyInfoRepairNetwork = "LIVRE_ESCOLHA"
	InsuranceAutoPolicyInfoRepairNetworkOUTROS           InsuranceAutoPolicyInfoRepairNetwork = "OUTROS"
	InsuranceAutoPolicyInfoRepairNetworkREDEREFERENCIADA InsuranceAutoPolicyInfoRepairNetwork = "REDE_REFERENCIADA"
)

// Defines values for InsuranceAutoPolicyInfoRepairedPartsClassification.
const (
	InsuranceAutoPolicyInfoRepairedPartsClassificationCOMPATIVEL          InsuranceAutoPolicyInfoRepairedPartsClassification = "COMPATIVEL"
	InsuranceAutoPolicyInfoRepairedPartsClassificationORIGINAL            InsuranceAutoPolicyInfoRepairedPartsClassification = "ORIGINAL"
	InsuranceAutoPolicyInfoRepairedPartsClassificationORIGINALECOMPATIVEL InsuranceAutoPolicyInfoRepairedPartsClassification = "ORIGINAL_E_COMPATIVEL"
)

// Defines values for InsuranceAutoPolicyInfoRepairedPartsNationality.
const (
	InsuranceAutoPolicyInfoRepairedPartsNationalityIMPORTADA          InsuranceAutoPolicyInfoRepairedPartsNationality = "IMPORTADA"
	InsuranceAutoPolicyInfoRepairedPartsNationalityNACIONAL           InsuranceAutoPolicyInfoRepairedPartsNationality = "NACIONAL"
	InsuranceAutoPolicyInfoRepairedPartsNationalityNACIONALEIMPORTADA InsuranceAutoPolicyInfoRepairedPartsNationality = "NACIONAL_E_IMPORTADA"
)

// Defines values for InsuranceAutoPolicyInfoRepairedPartsUsageType.
const (
	InsuranceAutoPolicyInfoRepairedPartsUsageTypeNOVA       InsuranceAutoPolicyInfoRepairedPartsUsageType = "NOVA"
	InsuranceAutoPolicyInfoRepairedPartsUsageTypeNOVAEUSADA InsuranceAutoPolicyInfoRepairedPartsUsageType = "NOVA_E_USADA"
	InsuranceAutoPolicyInfoRepairedPartsUsageTypeUSADA      InsuranceAutoPolicyInfoRepairedPartsUsageType = "USADA"
)

// Defines values for InsuranceAutoPolicyInfoValidityType.
const (
	InsuranceAutoPolicyInfoValidityTypeANUAL                  InsuranceAutoPolicyInfoValidityType = "ANUAL"
	InsuranceAutoPolicyInfoValidityTypeANUALINTERMITENTE      InsuranceAutoPolicyInfoValidityType = "ANUAL_INTERMITENTE"
	InsuranceAutoPolicyInfoValidityTypeDIARIO                 InsuranceAutoPolicyInfoValidityType = "DIARIO"
	InsuranceAutoPolicyInfoValidityTypeDIARIOINTERMITENTE     InsuranceAutoPolicyInfoValidityType = "DIARIO_INTERMITENTE"
	InsuranceAutoPolicyInfoValidityTypeMENSAL                 InsuranceAutoPolicyInfoValidityType = "MENSAL"
	InsuranceAutoPolicyInfoValidityTypeMENSALINTERMITENTE     InsuranceAutoPolicyInfoValidityType = "MENSAL_INTERMITENTE"
	InsuranceAutoPolicyInfoValidityTypeOUTROS                 InsuranceAutoPolicyInfoValidityType = "OUTROS"
	InsuranceAutoPolicyInfoValidityTypePLURIANUAL             InsuranceAutoPolicyInfoValidityType = "PLURIANUAL"
	InsuranceAutoPolicyInfoValidityTypePLURIANUALINTERMITENTE InsuranceAutoPolicyInfoValidityType = "PLURIANUAL_INTERMITENTE"
	InsuranceAutoPolicyInfoValidityTypeSEMESTRAL              InsuranceAutoPolicyInfoValidityType = "SEMESTRAL"
	InsuranceAutoPolicyInfoValidityTypeSEMESTRALINTERMITENTE  InsuranceAutoPolicyInfoValidityType = "SEMESTRAL_INTERMITENTE"
)

// Defines values for InsuranceAutoSpecificClaimDriverAtOccurrenceSex.
const (
	InsuranceAutoSpecificClaimDriverAtOccurrenceSexFEMININO     InsuranceAutoSpecificClaimDriverAtOccurrenceSex = "FEMININO"
	InsuranceAutoSpecificClaimDriverAtOccurrenceSexMASCULINO    InsuranceAutoSpecificClaimDriverAtOccurrenceSex = "MASCULINO"
	InsuranceAutoSpecificClaimDriverAtOccurrenceSexNAODECLARADO InsuranceAutoSpecificClaimDriverAtOccurrenceSex = "NAO_DECLARADO"
	InsuranceAutoSpecificClaimDriverAtOccurrenceSexOUTROS       InsuranceAutoSpecificClaimDriverAtOccurrenceSex = "OUTROS"
)

// Defines values for InsuranceAutoSpecificClaimOccurrenceCause.
const (
	InsuranceAutoSpecificClaimOccurrenceCauseASSISTENCIAHORAS           InsuranceAutoSpecificClaimOccurrenceCause = "ASSISTENCIA_HORAS"
	InsuranceAutoSpecificClaimOccurrenceCauseCOLISAOINDENIZACAOINTEGRAL InsuranceAutoSpecificClaimOccurrenceCause = "COLISAO_INDENIZACAO_INTEGRAL"
	InsuranceAutoSpecificClaimOccurrenceCauseCOLISAOPARCIAL             InsuranceAutoSpecificClaimOccurrenceCause = "COLISAO_PARCIAL"
	InsuranceAutoSpecificClaimOccurrenceCauseFURTO                      InsuranceAutoSpecificClaimOccurrenceCause = "FURTO"
	InsuranceAutoSpecificClaimOccurrenceCauseINCENDIO                   InsuranceAutoSpecificClaimOccurrenceCause = "INCENDIO"
	InsuranceAutoSpecificClaimOccurrenceCauseOUTROS                     InsuranceAutoSpecificClaimOccurrenceCause = "OUTROS"
	InsuranceAutoSpecificClaimOccurrenceCauseROUBO                      InsuranceAutoSpecificClaimOccurrenceCause = "ROUBO"
	InsuranceAutoSpecificClaimOccurrenceCauseROUBOOUFURTO               InsuranceAutoSpecificClaimOccurrenceCause = "ROUBO_OU_FURTO"
)

// Defines values for InsuranceCompensationType.
const (
	InsuranceCompensationTypeINTEGRAL InsuranceCompensationType = "INTEGRAL"
	InsuranceCompensationTypeOUTROS   InsuranceCompensationType = "OUTROS"
	InsuranceCompensationTypePARCIAL  InsuranceCompensationType = "PARCIAL"
)

// Defines values for InsuranceCoverageFeatureType.
const (
	InsuranceCoverageFeatureTypeGRANDESRISCOS            InsuranceCoverageFeatureType = "GRANDES_RISCOS"
	InsuranceCoverageFeatureTypeMASSIFICADOS             InsuranceCoverageFeatureType = "MASSIFICADOS"
	InsuranceCoverageFeatureTypeMASSIFICADOSMICROSEGUROS InsuranceCoverageFeatureType = "MASSIFICADOS_MICROSEGUROS"
)

// Defines values for InsuranceCoverageType.
const (
	InsuranceCoverageTypeCAPITALGLOBAL            InsuranceCoverageType = "CAPITAL_GLOBAL"
	InsuranceCoverageTypeINTERMITENTE             InsuranceCoverageType = "INTERMITENTE"
	InsuranceCoverageTypePARAMETRICO              InsuranceCoverageType = "PARAMETRICO"
	InsuranceCoverageTypePARAMETRICOEINTERMITENTE InsuranceCoverageType = "PARAMETRICO_E_INTERMITENTE"
	InsuranceCoverageTypeREGULARCOMUM             InsuranceCoverageType = "REGULAR_COMUM"
)

// Defines values for IntermediaryType.
const (
	IntermediaryTypeAGENTEDEMICROSSEGUROS           IntermediaryType = "AGENTE_DE_MICROSSEGUROS"
	IntermediaryTypeCORRESPONDENTE                  IntermediaryType = "CORRESPONDENTE"
	IntermediaryTypeCORRETOR                        IntermediaryType = "CORRETOR"
	IntermediaryTypeESTIPULANTEAVERBADORINSTITUIDOR IntermediaryType = "ESTIPULANTE_AVERBADOR_INSTITUIDOR"
	IntermediaryTypeOUTROS                          IntermediaryType = "OUTROS"
	IntermediaryTypeREPRESENTANTE                   IntermediaryType = "REPRESENTANTE"
)

// Defines values for LifePensionPlanApplicability.
const (
	LifePensionPlanApplicabilityNAO         LifePensionPlanApplicability = "NAO"
	LifePensionPlanApplicabilityNAOSEAPLICA LifePensionPlanApplicability = "NAO_SE_APLICA"
	LifePensionPlanApplicabilitySIM         LifePensionPlanApplicability = "SIM"
)

// Defines values for OcupationCodeType.
const (
	OcupationCodeTypeCBO    OcupationCodeType = "CBO"
	OcupationCodeTypeOUTROS OcupationCodeType = "OUTROS"
	OcupationCodeTypeRFB    OcupationCodeType = "RFB"
)

// Defines values for POSApplicationType.
const (
	POSApplicationTypeOUTROS     POSApplicationType = "OUTROS"
	POSApplicationTypePERCENTUAL POSApplicationType = "PERCENTUAL"
	POSApplicationTypeVALOR      POSApplicationType = "VALOR"
)

// Defines values for PatchQuoteRequestDataAuthorIdentificationType.
const (
	PatchQuoteRequestDataAuthorIdentificationTypeCNPJ PatchQuoteRequestDataAuthorIdentificationType = "CNPJ"
	PatchQuoteRequestDataAuthorIdentificationTypeCPF  PatchQuoteRequestDataAuthorIdentificationType = "CPF"
)

// Defines values for PatchQuoteRequestDataStatus.
const (
	PatchQuoteRequestDataStatusACKN PatchQuoteRequestDataStatus = "ACKN"
	PatchQuoteRequestDataStatusCANC PatchQuoteRequestDataStatus = "CANC"
)

// Defines values for PatchQuoteResponseDataStatus.
const (
	PatchQuoteResponseDataStatusACKN PatchQuoteResponseDataStatus = "ACKN"
	PatchQuoteResponseDataStatusCANC PatchQuoteResponseDataStatus = "CANC"
)

// Defines values for PaymentMovementOrigin.
const (
	PaymentMovementOriginEMISSAOACEITADECOSSEGURO PaymentMovementOrigin = "EMISSAO_ACEITA_DE_COSSEGURO"
	PaymentMovementOriginEMISSAOCEDIDADECOSSEGURO PaymentMovementOrigin = "EMISSAO_CEDIDA_DE_COSSEGURO"
	PaymentMovementOriginEMISSAODIRETA            PaymentMovementOrigin = "EMISSAO_DIRETA"
)

// Defines values for PaymentMovementType.
const (
	PaymentMovementTypeBAIXAPORPERDA                   PaymentMovementType = "BAIXA_POR_PERDA"
	PaymentMovementTypeCANCELAMENTODEPARCELA           PaymentMovementType = "CANCELAMENTO_DE_PARCELA"
	PaymentMovementTypeCANCELAMENTODEPREMIOEPARCELA    PaymentMovementType = "CANCELAMENTO_DE_PREMIO_E_PARCELA"
	PaymentMovementTypeEMISSAODEPREMIO                 PaymentMovementType = "EMISSAO_DE_PREMIO"
	PaymentMovementTypeEMISSAODERESTITUICAODEPREMIO    PaymentMovementType = "EMISSAO_DE_RESTITUICAO_DE_PREMIO"
	PaymentMovementTypeESTORNODEPREMIO                 PaymentMovementType = "ESTORNO_DE_PREMIO"
	PaymentMovementTypeESTORNODERESTITUICAODEPREMIO    PaymentMovementType = "ESTORNO_DE_RESTITUICAO_DE_PREMIO"
	PaymentMovementTypeLIQUIDACAODEPREMIO              PaymentMovementType = "LIQUIDACAO_DE_PREMIO"
	PaymentMovementTypeLIQUIDACAODERESTITUICAODEPREMIO PaymentMovementType = "LIQUIDACAO_DE_RESTITUICAO_DE_PREMIO"
	PaymentMovementTypeREABERTURADEPARCELA             PaymentMovementType = "REABERTURA_DE_PARCELA"
)

// Defines values for PaymentPaymentType.
const (
	PaymentPaymentTypeBOLETO            PaymentPaymentType = "BOLETO"
	PaymentPaymentTypeCARTAO            PaymentPaymentType = "CARTAO"
	PaymentPaymentTypeCHEQUE            PaymentPaymentType = "CHEQUE"
	PaymentPaymentTypeDESCONTOEMFOLHA   PaymentPaymentType = "DESCONTO_EM_FOLHA"
	PaymentPaymentTypeDINHEIROEMESPECIE PaymentPaymentType = "DINHEIRO_EM_ESPECIE"
	PaymentPaymentTypeDOC               PaymentPaymentType = "DOC"
	PaymentPaymentTypeOUTROS            PaymentPaymentType = "OUTROS"
	PaymentPaymentTypePIX               PaymentPaymentType = "PIX"
	PaymentPaymentTypeTED               PaymentPaymentType = "TED"
	PaymentPaymentTypeTEF               PaymentPaymentType = "TEF"
)

// Defines values for PaymentTellerIdType.
const (
	PaymentTellerIdTypeCNPJ   PaymentTellerIdType = "CNPJ"
	PaymentTellerIdTypeCPF    PaymentTellerIdType = "CPF"
	PaymentTellerIdTypeOUTROS PaymentTellerIdType = "OUTROS"
)

// Defines values for PersonalDocumentType.
const (
	PersonalDocumentTypeCNH                 PersonalDocumentType = "CNH"
	PersonalDocumentTypeNIF                 PersonalDocumentType = "NIF"
	PersonalDocumentTypeOUTROS              PersonalDocumentType = "OUTROS"
	PersonalDocumentTypeRG                  PersonalDocumentType = "RG"
	PersonalDocumentTypeRNE                 PersonalDocumentType = "RNE"
	PersonalDocumentTypeSEMOUTROSDOCUMENTOS PersonalDocumentType = "SEM_OUTROS_DOCUMENTOS"
)

// Defines values for PolicyDocumentType.
const (
	PolicyDocumentTypeAPOLICEFROTAAUTOMOVEL      PolicyDocumentType = "APOLICE_FROTA_AUTOMOVEL"
	PolicyDocumentTypeAPOLICEINDIVIDUAL          PolicyDocumentType = "APOLICE_INDIVIDUAL"
	PolicyDocumentTypeAPOLICEINDIVIDUALAUTOMOVEL PolicyDocumentType = "APOLICE_INDIVIDUAL_AUTOMOVEL"
	PolicyDocumentTypeBILHETE                    PolicyDocumentType = "BILHETE"
	PolicyDocumentTypeCERTIFICADO                PolicyDocumentType = "CERTIFICADO"
	PolicyDocumentTypeCERTIFICADOAUTOMOVEL       PolicyDocumentType = "CERTIFICADO_AUTOMOVEL"
)

// Defines values for PoliticalExposure.
const (
	PoliticalExposureNAOEXPOSTO                                   PoliticalExposure = "NAO_EXPOSTO"
	PoliticalExposurePESSOAPOLITICAMENTEEXPOSTAPPE                PoliticalExposure = "PESSOA_POLITICAMENTE_EXPOSTA_PPE"
	PoliticalExposurePESSOAPROXIMAAPESSOAPOLITICAMENTEEXPOSTAPPEE PoliticalExposure = "PESSOA_PROXIMA_A_PESSOA_POLITICAMENTE_EXPOSTA_PPEE"
	PoliticalExposureSEMINFORMACAO                                PoliticalExposure = "SEM_INFORMACAO"
)

// Defines values for ProcuratorsNatureBusiness.
const (
	ProcuratorsNatureBusinessNAOSEAPLICA        ProcuratorsNatureBusiness = "NAO_SE_APLICA"
	ProcuratorsNatureBusinessPROCURADOR         ProcuratorsNatureBusiness = "PROCURADOR"
	ProcuratorsNatureBusinessREPRESENTANTELEGAL ProcuratorsNatureBusiness = "REPRESENTANTE_LEGAL"
)

// Defines values for ProcuratorsNaturePersonal.
const (
	ProcuratorsNaturePersonalNAOSEAPLICA        ProcuratorsNaturePersonal = "NAO_SE_APLICA"
	ProcuratorsNaturePersonalPROCURADOR         ProcuratorsNaturePersonal = "PROCURADOR"
	ProcuratorsNaturePersonalREPRESENTANTELEGAL ProcuratorsNaturePersonal = "REPRESENTANTE_LEGAL"
)

// Defines values for ProductServiceType.
const (
	ProductServiceTypeMICROSSEGUROS                   ProductServiceType = "MICROSSEGUROS"
	ProductServiceTypePLANOSDEPREVIDENCIACOMPLEMENTAR ProductServiceType = "PLANOS_DE_PREVIDENCIA_COMPLEMENTAR"
	ProductServiceTypeSEGUROSDEDANOS                  ProductServiceType = "SEGUROS_DE_DANOS"
	ProductServiceTypeSEGUROSDEPESSOAS                ProductServiceType = "SEGUROS_DE_PESSOAS"
	ProductServiceTypeTITULOSDECAPITALIZACAO          ProductServiceType = "TITULOS_DE_CAPITALIZACAO"
)

// Defines values for QuoteAutoBeneficiaryIdentificationType.
const (
	QuoteAutoBeneficiaryIdentificationTypeCNPJ   QuoteAutoBeneficiaryIdentificationType = "CNPJ"
	QuoteAutoBeneficiaryIdentificationTypeCPF    QuoteAutoBeneficiaryIdentificationType = "CPF"
	QuoteAutoBeneficiaryIdentificationTypeOUTROS QuoteAutoBeneficiaryIdentificationType = "OUTROS"
)

// Defines values for QuoteAutoBeneficiaryMainDriverCivilStatus.
const (
	QuoteAutoBeneficiaryMainDriverCivilStatusCASADO                QuoteAutoBeneficiaryMainDriverCivilStatus = "CASADO"
	QuoteAutoBeneficiaryMainDriverCivilStatusDIVORCIADO            QuoteAutoBeneficiaryMainDriverCivilStatus = "DIVORCIADO"
	QuoteAutoBeneficiaryMainDriverCivilStatusOUTROS                QuoteAutoBeneficiaryMainDriverCivilStatus = "OUTROS"
	QuoteAutoBeneficiaryMainDriverCivilStatusSEPARADOJUDICIALMENTE QuoteAutoBeneficiaryMainDriverCivilStatus = "SEPARADO_JUDICIALMENTE"
	QuoteAutoBeneficiaryMainDriverCivilStatusSOLTEIRO              QuoteAutoBeneficiaryMainDriverCivilStatus = "SOLTEIRO"
	QuoteAutoBeneficiaryMainDriverCivilStatusUNIAOESTAVEL          QuoteAutoBeneficiaryMainDriverCivilStatus = "UNIAO_ESTAVEL"
	QuoteAutoBeneficiaryMainDriverCivilStatusVIUVO                 QuoteAutoBeneficiaryMainDriverCivilStatus = "VIUVO"
)

// Defines values for QuoteAutoBeneficiaryMainDriverGender.
const (
	QuoteAutoBeneficiaryMainDriverGenderFEMININO     QuoteAutoBeneficiaryMainDriverGender = "FEMININO"
	QuoteAutoBeneficiaryMainDriverGenderMASCULINO    QuoteAutoBeneficiaryMainDriverGender = "MASCULINO"
	QuoteAutoBeneficiaryMainDriverGenderNAODECLARADO QuoteAutoBeneficiaryMainDriverGender = "NAO_DECLARADO"
	QuoteAutoBeneficiaryMainDriverGenderOUTROS       QuoteAutoBeneficiaryMainDriverGender = "OUTROS"
)

// Defines values for QuoteAutoBeneficiaryMainDriverIdentificationType.
const (
	QuoteAutoBeneficiaryMainDriverIdentificationTypeCNPJ   QuoteAutoBeneficiaryMainDriverIdentificationType = "CNPJ"
	QuoteAutoBeneficiaryMainDriverIdentificationTypeCPF    QuoteAutoBeneficiaryMainDriverIdentificationType = "CPF"
	QuoteAutoBeneficiaryMainDriverIdentificationTypeOUTROS QuoteAutoBeneficiaryMainDriverIdentificationType = "OUTROS"
)

// Defines values for QuoteAutoBeneficiaryRelationshipMainDriver.
const (
	QuoteAutoBeneficiaryRelationshipMainDriverCONJUGECOMPANHEIROA QuoteAutoBeneficiaryRelationshipMainDriver = "CONJUGE_COMPANHEIRO_A"
	QuoteAutoBeneficiaryRelationshipMainDriverFILHOAENTEADOA      QuoteAutoBeneficiaryRelationshipMainDriver = "FILHO_A_ENTEADO_A"
	QuoteAutoBeneficiaryRelationshipMainDriverIRMAOIRMA           QuoteAutoBeneficiaryRelationshipMainDriver = "IRMAO_IRMA"
	QuoteAutoBeneficiaryRelationshipMainDriverNAOSEAPLICA         QuoteAutoBeneficiaryRelationshipMainDriver = "NAO_SE_APLICA"
	QuoteAutoBeneficiaryRelationshipMainDriverOUTROS              QuoteAutoBeneficiaryRelationshipMainDriver = "OUTROS"
	QuoteAutoBeneficiaryRelationshipMainDriverPAIMAE              QuoteAutoBeneficiaryRelationshipMainDriver = "PAI_MAE"
)

// Defines values for QuoteAutoInsuredObjectCommercialActivityType.
const (
	QuoteAutoInsuredObjectCommercialActivityTypeAMBULANCIA                                                                                          QuoteAutoInsuredObjectCommercialActivityType = "AMBULANCIA"
	QuoteAutoInsuredObjectCommercialActivityTypeAUTOESCOLAS                                                                                         QuoteAutoInsuredObjectCommercialActivityType = "AUTO_ESCOLAS"
	QuoteAutoInsuredObjectCommercialActivityTypeBOMBEIROS                                                                                           QuoteAutoInsuredObjectCommercialActivityType = "BOMBEIROS"
	QuoteAutoInsuredObjectCommercialActivityTypeCOLETORESDELIXO                                                                                     QuoteAutoInsuredObjectCommercialActivityType = "COLETORES_DE_LIXO"
	QuoteAutoInsuredObjectCommercialActivityTypeCOMERCIALATIVIDADEPROFISSIONALPARAREPRESENTACAOCOMERCIALVENDEDORESPROMOTORESEPRESTADORESDESERVICOS  QuoteAutoInsuredObjectCommercialActivityType = "COMERCIAL_ATIVIDADE_PROFISSIONAL_PARA_REPRESENTACAO_COMERCIAL_VENDEDORES_PROMOTORES_E_PRESTADORES_DE_SERVICOS"
	QuoteAutoInsuredObjectCommercialActivityTypeCOMPETICAOEVENTOS                                                                                   QuoteAutoInsuredObjectCommercialActivityType = "COMPETICAO_EVENTOS"
	QuoteAutoInsuredObjectCommercialActivityTypeDIFERENCIADOSEXTRAILERMOTORHOMEHOSPITAISVOLANTEVEICULOSCOMPLATAFORMAPARAREPAROSDEENERGIAELETRICAETC QuoteAutoInsuredObjectCommercialActivityType = "DIFERENCIADOS_EX_TRAILER_MOTORHOME_HOSPITAIS_VOLANTE_VEICULOS_COM_PLATAFORMA_PARA_REPAROS_DE_ENERGIA_ELETRICA_ETC"
	QuoteAutoInsuredObjectCommercialActivityTypeLOCADORAAVULSO                                                                                      QuoteAutoInsuredObjectCommercialActivityType = "LOCADORA_AVULSO"
	QuoteAutoInsuredObjectCommercialActivityTypeLOCADORACONTRATO                                                                                    QuoteAutoInsuredObjectCommercialActivityType = "LOCADORA_CONTRATO"
	QuoteAutoInsuredObjectCommercialActivityTypeLOTACAO                                                                                             QuoteAutoInsuredObjectCommercialActivityType = "LOTACAO"
	QuoteAutoInsuredObjectCommercialActivityTypeMOTORISTADEAPLICATIVOAPLICATIVODETRANSPORTE                                                         QuoteAutoInsuredObjectCommercialActivityType = "MOTORISTA_DE_APLICATIVO_APLICATIVO_DE_TRANSPORTE"
	QuoteAutoInsuredObjectCommercialActivityTypeMOTOTAXI                                                                                            QuoteAutoInsuredObjectCommercialActivityType = "MOTO_TAXI"
	QuoteAutoInsuredObjectCommercialActivityTypeOUTROS                                                                                              QuoteAutoInsuredObjectCommercialActivityType = "OUTROS"
	QuoteAutoInsuredObjectCommercialActivityTypePOLICIAMENTO                                                                                        QuoteAutoInsuredObjectCommercialActivityType = "POLICIAMENTO"
	QuoteAutoInsuredObjectCommercialActivityTypePRESTASERVICOPARATRANSPORTADORA                                                                     QuoteAutoInsuredObjectCommercialActivityType = "PRESTA_SERVICO_PARA_TRANSPORTADORA"
	QuoteAutoInsuredObjectCommercialActivityTypeTAXIPARTICULAR                                                                                      QuoteAutoInsuredObjectCommercialActivityType = "TAXI_PARTICULAR"
	QuoteAutoInsuredObjectCommercialActivityTypeTESTDRIVE                                                                                           QuoteAutoInsuredObjectCommercialActivityType = "TEST_DRIVE"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEDEMERCADORIA                                                                              QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_DE_MERCADORIA"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOEMPRESARIALCONTINUO                                                    QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_EMPRESARIAL_CONTINUO"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOMISTOFRETEPESSOAS                                                      QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_MISTO_FRETE_PESSOAS"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOTURISTICO                                                              QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_TURISTICO"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASURBANO                                                                           QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_URBANO"
	QuoteAutoInsuredObjectCommercialActivityTypeTRANSPORTEESCOLAR                                                                                   QuoteAutoInsuredObjectCommercialActivityType = "TRANSPORTE_ESCOLAR"
	QuoteAutoInsuredObjectCommercialActivityTypeVEICULOSOFICIAISORGAOPUBLICO                                                                        QuoteAutoInsuredObjectCommercialActivityType = "VEICULOS_OFICIAIS_ORGAO_PUBLICO"
	QuoteAutoInsuredObjectCommercialActivityTypeVIGILANCIA                                                                                          QuoteAutoInsuredObjectCommercialActivityType = "VIGILANCIA"
)

// Defines values for QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender.
const (
	QuoteAutoInsuredObjectDriverBetween18and25YearsOldGenderFEMININO           QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender = "FEMININO"
	QuoteAutoInsuredObjectDriverBetween18and25YearsOldGenderMASCULINO          QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender = "MASCULINO"
	QuoteAutoInsuredObjectDriverBetween18and25YearsOldGenderMASCULINOEFEMININO QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender = "MASCULINO_E_FEMININO"
	QuoteAutoInsuredObjectDriverBetween18and25YearsOldGenderPREFIRONAODECLARAR QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender = "PREFIRO_NAO_DECLARAR"
)

// Defines values for QuoteAutoInsuredObjectFrequentTrafficArea.
const (
	QuoteAutoInsuredObjectFrequentTrafficAreaAMERICADOSUL                QuoteAutoInsuredObjectFrequentTrafficArea = "AMERICA_DO_SUL"
	QuoteAutoInsuredObjectFrequentTrafficAreaDENTRODOPROPRIOESTADODASEDE QuoteAutoInsuredObjectFrequentTrafficArea = "DENTRO_DO_PROPRIO_ESTADO_DA_SEDE"
	QuoteAutoInsuredObjectFrequentTrafficAreaMERCOSUL                    QuoteAutoInsuredObjectFrequentTrafficArea = "MERCOSUL"
	QuoteAutoInsuredObjectFrequentTrafficAreaMUNICIPIOEARREDORESATEKM    QuoteAutoInsuredObjectFrequentTrafficArea = "MUNICIPIO_E_ARREDORES_ATE_KM"
	QuoteAutoInsuredObjectFrequentTrafficAreaNAOINFORMADO                QuoteAutoInsuredObjectFrequentTrafficArea = "NAO_INFORMADO"
	QuoteAutoInsuredObjectFrequentTrafficAreaREGIAOCENTROOESTE           QuoteAutoInsuredObjectFrequentTrafficArea = "REGIAO_CENTRO_OESTE"
	QuoteAutoInsuredObjectFrequentTrafficAreaREGIAONORDESTE              QuoteAutoInsuredObjectFrequentTrafficArea = "REGIAO_NORDESTE"
	QuoteAutoInsuredObjectFrequentTrafficAreaREGIAONORTE                 QuoteAutoInsuredObjectFrequentTrafficArea = "REGIAO_NORTE"
	QuoteAutoInsuredObjectFrequentTrafficAreaREGIAOSUDESTE               QuoteAutoInsuredObjectFrequentTrafficArea = "REGIAO_SUDESTE"
	QuoteAutoInsuredObjectFrequentTrafficAreaREGIAOSUL                   QuoteAutoInsuredObjectFrequentTrafficArea = "REGIAO_SUL"
)

// Defines values for QuoteAutoInsuredObjectFuel.
const (
	QuoteAutoInsuredObjectFuelALCOOLETANOL QuoteAutoInsuredObjectFuel = "ALCOOL_ETANOL"
	QuoteAutoInsuredObjectFuelDIESEL       QuoteAutoInsuredObjectFuel = "DIESEL"
	QuoteAutoInsuredObjectFuelELETRICO     QuoteAutoInsuredObjectFuel = "ELETRICO"
	QuoteAutoInsuredObjectFuelFLEX         QuoteAutoInsuredObjectFuel = "FLEX"
	QuoteAutoInsuredObjectFuelFLEXEGNV     QuoteAutoInsuredObjectFuel = "FLEX_E_GNV"
	QuoteAutoInsuredObjectFuelGASGNV       QuoteAutoInsuredObjectFuel = "GAS_GNV"
	QuoteAutoInsuredObjectFuelGASOLINA     QuoteAutoInsuredObjectFuel = "GASOLINA"
	QuoteAutoInsuredObjectFuelHIBRIDO      QuoteAutoInsuredObjectFuel = "HIBRIDO"
)

// Defines values for QuoteAutoInsuredObjectLoadsCarriedinsured.
const (
	QuoteAutoInsuredObjectLoadsCarriedinsuredAUTOMOVEIS                QuoteAutoInsuredObjectLoadsCarriedinsured = "AUTOMOVEIS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredAUTOPECAS                 QuoteAutoInsuredObjectLoadsCarriedinsured = "AUTO_PECAS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredBEBIDAS                   QuoteAutoInsuredObjectLoadsCarriedinsured = "BEBIDAS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredBRINQUEDOS                QuoteAutoInsuredObjectLoadsCarriedinsured = "BRINQUEDOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCALCADOS                  QuoteAutoInsuredObjectLoadsCarriedinsured = "CALCADOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCARGAMISTA                QuoteAutoInsuredObjectLoadsCarriedinsured = "CARGA_MISTA"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCARGAVIVA                 QuoteAutoInsuredObjectLoadsCarriedinsured = "CARGA_VIVA"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCIGARROS                  QuoteAutoInsuredObjectLoadsCarriedinsured = "CIGARROS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCOMBUSTIVEISOUINFLAMAVEIS QuoteAutoInsuredObjectLoadsCarriedinsured = "COMBUSTIVEIS_OU_INFLAMAVEIS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredCONFECCOES                QuoteAutoInsuredObjectLoadsCarriedinsured = "CONFECCOES"
	QuoteAutoInsuredObjectLoadsCarriedinsuredELETRODOMESTICOS          QuoteAutoInsuredObjectLoadsCarriedinsured = "ELETRODOMESTICOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredGASES                     QuoteAutoInsuredObjectLoadsCarriedinsured = "GASES"
	QuoteAutoInsuredObjectLoadsCarriedinsuredGENEROALIMENTICIO         QuoteAutoInsuredObjectLoadsCarriedinsured = "GENERO_ALIMENTICIO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredHORTIFRUTIGRANJEIROS      QuoteAutoInsuredObjectLoadsCarriedinsured = "HORTIFRUTI_GRANJEIROS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredLATICIOS                  QuoteAutoInsuredObjectLoadsCarriedinsured = "LATICIOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredLIXO                      QuoteAutoInsuredObjectLoadsCarriedinsured = "LIXO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredMADEIRA                   QuoteAutoInsuredObjectLoadsCarriedinsured = "MADEIRA"
	QuoteAutoInsuredObjectLoadsCarriedinsuredMATERIALDECONSTRUCAO      QuoteAutoInsuredObjectLoadsCarriedinsured = "MATERIAL_DE_CONSTRUCAO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredMEDICAMENTOS              QuoteAutoInsuredObjectLoadsCarriedinsured = "MEDICAMENTOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredMOVEIS                    QuoteAutoInsuredObjectLoadsCarriedinsured = "MOVEIS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredMUDANCAS                  QuoteAutoInsuredObjectLoadsCarriedinsured = "MUDANCAS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredNAOINFORMADO              QuoteAutoInsuredObjectLoadsCarriedinsured = "NAO_INFORMADO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredOUTRAS                    QuoteAutoInsuredObjectLoadsCarriedinsured = "OUTRAS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredPAPEIS                    QuoteAutoInsuredObjectLoadsCarriedinsured = "PAPEIS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredPLASTICOS                 QuoteAutoInsuredObjectLoadsCarriedinsured = "PLASTICOS"
	QuoteAutoInsuredObjectLoadsCarriedinsuredPNEUOUCAMERADEAR          QuoteAutoInsuredObjectLoadsCarriedinsured = "PNEU_OU_CAMERA_DE_AR"
	QuoteAutoInsuredObjectLoadsCarriedinsuredPRODUTOPERICIVEL          QuoteAutoInsuredObjectLoadsCarriedinsured = "PRODUTO_PERICIVEL"
	QuoteAutoInsuredObjectLoadsCarriedinsuredPRODUTOQUIMICO            QuoteAutoInsuredObjectLoadsCarriedinsured = "PRODUTO_QUIMICO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredSUCO                      QuoteAutoInsuredObjectLoadsCarriedinsured = "SUCO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredTECIDO                    QuoteAutoInsuredObjectLoadsCarriedinsured = "TECIDO"
	QuoteAutoInsuredObjectLoadsCarriedinsuredVALORES                   QuoteAutoInsuredObjectLoadsCarriedinsured = "VALORES"
	QuoteAutoInsuredObjectLoadsCarriedinsuredVIDROS                    QuoteAutoInsuredObjectLoadsCarriedinsured = "VIDROS"
)

// Defines values for QuoteAutoInsuredObjectModality.
const (
	QuoteAutoInsuredObjectModalityCRITERIODIVERSO            QuoteAutoInsuredObjectModality = "CRITERIO_DIVERSO"
	QuoteAutoInsuredObjectModalityOUTROS                     QuoteAutoInsuredObjectModality = "OUTROS"
	QuoteAutoInsuredObjectModalityVALORDEMERCADOREFERENCIADO QuoteAutoInsuredObjectModality = "VALOR_DE_MERCADO_REFERENCIADO"
	QuoteAutoInsuredObjectModalityVALORDETERMINADO           QuoteAutoInsuredObjectModality = "VALOR_DETERMINADO"
)

// Defines values for QuoteAutoInsuredObjectRiskManagementSystem.
const (
	QuoteAutoInsuredObjectRiskManagementSystemCADASTRODEMOTORISTAS QuoteAutoInsuredObjectRiskManagementSystem = "CADASTRO_DE_MOTORISTAS"
	QuoteAutoInsuredObjectRiskManagementSystemESCOLTADECARGAS      QuoteAutoInsuredObjectRiskManagementSystem = "ESCOLTA_DE_CARGAS"
	QuoteAutoInsuredObjectRiskManagementSystemNAO                  QuoteAutoInsuredObjectRiskManagementSystem = "NAO"
	QuoteAutoInsuredObjectRiskManagementSystemNAOINFORMADO         QuoteAutoInsuredObjectRiskManagementSystem = "NAO_INFORMADO"
	QuoteAutoInsuredObjectRiskManagementSystemOUTROS               QuoteAutoInsuredObjectRiskManagementSystem = "OUTROS"
)

// Defines values for QuoteAutoInsuredObjectTableUsed.
const (
	QuoteAutoInsuredObjectTableUsedFIPE          QuoteAutoInsuredObjectTableUsed = "FIPE"
	QuoteAutoInsuredObjectTableUsedJORNALDOCARRO QuoteAutoInsuredObjectTableUsed = "JORNAL_DO_CARRO"
	QuoteAutoInsuredObjectTableUsedMOLICAR       QuoteAutoInsuredObjectTableUsed = "MOLICAR"
	QuoteAutoInsuredObjectTableUsedOUTRAS        QuoteAutoInsuredObjectTableUsed = "OUTRAS"
	QuoteAutoInsuredObjectTableUsedVD            QuoteAutoInsuredObjectTableUsed = "VD"
)

// Defines values for QuoteAutoInsuredObjectTaxType.
const (
	QuoteAutoInsuredObjectTaxTypeAMBOS QuoteAutoInsuredObjectTaxType = "AMBOS"
	QuoteAutoInsuredObjectTaxTypeICMS  QuoteAutoInsuredObjectTaxType = "ICMS"
	QuoteAutoInsuredObjectTaxTypeIPI   QuoteAutoInsuredObjectTaxType = "IPI"
)

// Defines values for QuoteAutoInsuredObjectVehicleUse.
const (
	QuoteAutoInsuredObjectVehicleUseEXERCICIODOTRABALHO QuoteAutoInsuredObjectVehicleUse = "EXERCICIO_DO_TRABALHO"
	QuoteAutoInsuredObjectVehicleUseLAZER               QuoteAutoInsuredObjectVehicleUse = "LAZER"
	QuoteAutoInsuredObjectVehicleUseLOCOMOCAODIARIA     QuoteAutoInsuredObjectVehicleUse = "LOCOMOCAO_DIARIA"
)

// Defines values for QuoteAutoQuoteResultCoverageCode.
const (
	QuoteAutoQuoteResultCoverageCodeACESSORIOSEEQUIPAMENTOS                        QuoteAutoQuoteResultCoverageCode = "ACESSORIOS_E_EQUIPAMENTOS"
	QuoteAutoQuoteResultCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPCONDUTOR       QuoteAutoQuoteResultCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_CONDUTOR"
	QuoteAutoQuoteResultCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPVEICULO        QuoteAutoQuoteResultCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_VEICULO"
	QuoteAutoQuoteResultCoverageCodeCARRORESERVA                                   QuoteAutoQuoteResultCoverageCode = "CARRO_RESERVA"
	QuoteAutoQuoteResultCoverageCodeCASCOALAGAMENTO                                QuoteAutoQuoteResultCoverageCode = "CASCO_ALAGAMENTO"
	QuoteAutoQuoteResultCoverageCodeCASCOCOLISAOINDENIZACAOINTEGRAL                QuoteAutoQuoteResultCoverageCode = "CASCO_COLISAO_INDENIZACAO_INTEGRAL"
	QuoteAutoQuoteResultCoverageCodeCASCOCOLISAOINDENIZACAOPARCIAL                 QuoteAutoQuoteResultCoverageCode = "CASCO_COLISAO_INDENIZACAO_PARCIAL"
	QuoteAutoQuoteResultCoverageCodeCASCOCOMPREENSIVA                              QuoteAutoQuoteResultCoverageCode = "CASCO_COMPREENSIVA"
	QuoteAutoQuoteResultCoverageCodeCASCOINCENDIO                                  QuoteAutoQuoteResultCoverageCode = "CASCO_INCENDIO"
	QuoteAutoQuoteResultCoverageCodeCASCOINCENDIOROUBOEFURTO                       QuoteAutoQuoteResultCoverageCode = "CASCO_INCENDIO_ROUBO_E_FURTO"
	QuoteAutoQuoteResultCoverageCodeCASCOROUBOEFURTO                               QuoteAutoQuoteResultCoverageCode = "CASCO_ROUBO_E_FURTO"
	QuoteAutoQuoteResultCoverageCodeDIARIAPORINDISPONIBILIDADE                     QuoteAutoQuoteResultCoverageCode = "DIARIA_POR_INDISPONIBILIDADE"
	QuoteAutoQuoteResultCoverageCodeLFRLANTERNASFAROISERETROVISORES                QuoteAutoQuoteResultCoverageCode = "LFR_LANTERNAS_FAROIS_E_RETROVISORES"
	QuoteAutoQuoteResultCoverageCodeOUTRAS                                         QuoteAutoQuoteResultCoverageCode = "OUTRAS"
	QuoteAutoQuoteResultCoverageCodePEQUENOSREPAROS                                QuoteAutoQuoteResultCoverageCode = "PEQUENOS_REPAROS"
	QuoteAutoQuoteResultCoverageCodeRESPONSABILIDADECIVILCARTAVERDE                QuoteAutoQuoteResultCoverageCode = "RESPONSABILIDADE_CIVIL_CARTA_VERDE"
	QuoteAutoQuoteResultCoverageCodeRESPONSABILIDADECIVILFACULTATIVADEVEICULOSRCFV QuoteAutoQuoteResultCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DE_VEICULOS_RCFV"
	QuoteAutoQuoteResultCoverageCodeRESPONSABILIDADECIVILFACULTATIVADOCONDUTORRCFC QuoteAutoQuoteResultCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DO_CONDUTOR_RCFC"
	QuoteAutoQuoteResultCoverageCodeVIDROS                                         QuoteAutoQuoteResultCoverageCode = "VIDROS"
)

// Defines values for QuoteAutoQuoteResultCoverageFullIndemnity.
const (
	QuoteAutoQuoteResultCoverageFullIndemnityOUTROS     QuoteAutoQuoteResultCoverageFullIndemnity = "OUTROS"
	QuoteAutoQuoteResultCoverageFullIndemnityPERCENTUAL QuoteAutoQuoteResultCoverageFullIndemnity = "PERCENTUAL"
	QuoteAutoQuoteResultCoverageFullIndemnityVALOR      QuoteAutoQuoteResultCoverageFullIndemnity = "VALOR"
)

// Defines values for QuoteAutoQuoteResultCoverageGracePeriodCountingMethod.
const (
	QuoteAutoQuoteResultCoverageGracePeriodCountingMethodDIASCORRIDOS QuoteAutoQuoteResultCoverageGracePeriodCountingMethod = "DIAS_CORRIDOS"
	QuoteAutoQuoteResultCoverageGracePeriodCountingMethodDIASUTEIS    QuoteAutoQuoteResultCoverageGracePeriodCountingMethod = "DIAS_UTEIS"
)

// Defines values for QuoteAutoQuoteResultCoverageGracePeriodicity.
const (
	QuoteAutoQuoteResultCoverageGracePeriodicityANO QuoteAutoQuoteResultCoverageGracePeriodicity = "ANO"
	QuoteAutoQuoteResultCoverageGracePeriodicityDIA QuoteAutoQuoteResultCoverageGracePeriodicity = "DIA"
	QuoteAutoQuoteResultCoverageGracePeriodicityMES QuoteAutoQuoteResultCoverageGracePeriodicity = "MES"
)

// Defines values for QuoteAutoResultDeductiblePeriodCountingMethod.
const (
	QuoteAutoResultDeductiblePeriodCountingMethodDIASCORRIDOS QuoteAutoResultDeductiblePeriodCountingMethod = "DIAS_CORRIDOS"
	QuoteAutoResultDeductiblePeriodCountingMethodDIASUTEIS    QuoteAutoResultDeductiblePeriodCountingMethod = "DIAS_UTEIS"
)

// Defines values for QuoteAutoResultDeductiblePeriodicity.
const (
	QuoteAutoResultDeductiblePeriodicityANO QuoteAutoResultDeductiblePeriodicity = "ANO"
	QuoteAutoResultDeductiblePeriodicityDIA QuoteAutoResultDeductiblePeriodicity = "DIA"
	QuoteAutoResultDeductiblePeriodicityMES QuoteAutoResultDeductiblePeriodicity = "MES"
)

// Defines values for QuoteAutoResultDeductibleType.
const (
	QuoteAutoResultDeductibleTypeDEDUTIVEL QuoteAutoResultDeductibleType = "DEDUTIVEL"
	QuoteAutoResultDeductibleTypeMAJORADA  QuoteAutoResultDeductibleType = "MAJORADA"
	QuoteAutoResultDeductibleTypeNORMAL    QuoteAutoResultDeductibleType = "NORMAL"
	QuoteAutoResultDeductibleTypeOUTROS    QuoteAutoResultDeductibleType = "OUTROS"
	QuoteAutoResultDeductibleTypeREDUZIDA  QuoteAutoResultDeductibleType = "REDUZIDA"
)

// Defines values for QuoteAutoResultInsuredObjectCommercialActivityType.
const (
	QuoteAutoResultInsuredObjectCommercialActivityTypeAMBULANCIA                                                                                          QuoteAutoResultInsuredObjectCommercialActivityType = "AMBULANCIA"
	QuoteAutoResultInsuredObjectCommercialActivityTypeAUTOESCOLAS                                                                                         QuoteAutoResultInsuredObjectCommercialActivityType = "AUTO_ESCOLAS"
	QuoteAutoResultInsuredObjectCommercialActivityTypeBOMBEIROS                                                                                           QuoteAutoResultInsuredObjectCommercialActivityType = "BOMBEIROS"
	QuoteAutoResultInsuredObjectCommercialActivityTypeCOLETORESDELIXO                                                                                     QuoteAutoResultInsuredObjectCommercialActivityType = "COLETORES_DE_LIXO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeCOMERCIALATIVIDADEPROFISSIONALPARAREPRESENTACAOCOMERCIALVENDEDORESPROMOTORESEPRESTADORESDESERVICOS  QuoteAutoResultInsuredObjectCommercialActivityType = "COMERCIAL_ATIVIDADE_PROFISSIONAL_PARA_REPRESENTACAO_COMERCIAL_VENDEDORES_PROMOTORES_E_PRESTADORES_DE_SERVICOS"
	QuoteAutoResultInsuredObjectCommercialActivityTypeCOMPETICAOEVENTOS                                                                                   QuoteAutoResultInsuredObjectCommercialActivityType = "COMPETICAO_EVENTOS"
	QuoteAutoResultInsuredObjectCommercialActivityTypeDIFERENCIADOSEXTRAILERMOTORHOMEHOSPITAISVOLANTEVEICULOSCOMPLATAFORMAPARAREPAROSDEENERGIAELETRICAETC QuoteAutoResultInsuredObjectCommercialActivityType = "DIFERENCIADOS_EX_TRAILER_MOTORHOME_HOSPITAIS_VOLANTE_VEICULOS_COM_PLATAFORMA_PARA_REPAROS_DE_ENERGIA_ELETRICA_ETC"
	QuoteAutoResultInsuredObjectCommercialActivityTypeLOCADORAAVULSO                                                                                      QuoteAutoResultInsuredObjectCommercialActivityType = "LOCADORA_AVULSO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeLOCADORACONTRATO                                                                                    QuoteAutoResultInsuredObjectCommercialActivityType = "LOCADORA_CONTRATO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeLOTACAO                                                                                             QuoteAutoResultInsuredObjectCommercialActivityType = "LOTACAO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeMOTORISTADEAPLICATIVOAPLICATIVODETRANSPORTE                                                         QuoteAutoResultInsuredObjectCommercialActivityType = "MOTORISTA_DE_APLICATIVO_APLICATIVO_DE_TRANSPORTE"
	QuoteAutoResultInsuredObjectCommercialActivityTypeMOTOTAXI                                                                                            QuoteAutoResultInsuredObjectCommercialActivityType = "MOTO_TAXI"
	QuoteAutoResultInsuredObjectCommercialActivityTypeOUTROS                                                                                              QuoteAutoResultInsuredObjectCommercialActivityType = "OUTROS"
	QuoteAutoResultInsuredObjectCommercialActivityTypePOLICIAMENTO                                                                                        QuoteAutoResultInsuredObjectCommercialActivityType = "POLICIAMENTO"
	QuoteAutoResultInsuredObjectCommercialActivityTypePRESTASERVICOPARATRANSPORTADORA                                                                     QuoteAutoResultInsuredObjectCommercialActivityType = "PRESTA_SERVICO_PARA_TRANSPORTADORA"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTAXIPARTICULAR                                                                                      QuoteAutoResultInsuredObjectCommercialActivityType = "TAXI_PARTICULAR"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTESTDRIVE                                                                                           QuoteAutoResultInsuredObjectCommercialActivityType = "TEST_DRIVE"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEDEMERCADORIA                                                                              QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_DE_MERCADORIA"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOEMPRESARIALCONTINUO                                                    QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_EMPRESARIAL_CONTINUO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOMISTOFRETEPESSOAS                                                      QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_MISTO_FRETE_PESSOAS"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASFRETAMENTOTURISTICO                                                              QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_FRETAMENTO_TURISTICO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEDEPESSOASURBANO                                                                           QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_DE_PESSOAS_URBANO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeTRANSPORTEESCOLAR                                                                                   QuoteAutoResultInsuredObjectCommercialActivityType = "TRANSPORTE_ESCOLAR"
	QuoteAutoResultInsuredObjectCommercialActivityTypeVEICULOSOFICIAISORGAOPUBLICO                                                                        QuoteAutoResultInsuredObjectCommercialActivityType = "VEICULOS_OFICIAIS_ORGAO_PUBLICO"
	QuoteAutoResultInsuredObjectCommercialActivityTypeVIGILANCIA                                                                                          QuoteAutoResultInsuredObjectCommercialActivityType = "VIGILANCIA"
)

// Defines values for QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender.
const (
	QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGenderFEMININO           QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender = "FEMININO"
	QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGenderMASCULINO          QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender = "MASCULINO"
	QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGenderMASCULINOEFEMININO QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender = "MASCULINO_E_FEMININO"
	QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGenderPREFIRONAODECLARAR QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender = "PREFIRO_NAO_DECLARAR"
)

// Defines values for QuoteAutoResultInsuredObjectFrequentTrafficArea.
const (
	QuoteAutoResultInsuredObjectFrequentTrafficAreaAMERICADOSUL                QuoteAutoResultInsuredObjectFrequentTrafficArea = "AMERICA_DO_SUL"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaDENTRODOPROPRIOESTADODASEDE QuoteAutoResultInsuredObjectFrequentTrafficArea = "DENTRO_DO_PROPRIO_ESTADO_DA_SEDE"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaMERCOSUL                    QuoteAutoResultInsuredObjectFrequentTrafficArea = "MERCOSUL"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaMUNICIPIOEARREDORESATEKM    QuoteAutoResultInsuredObjectFrequentTrafficArea = "MUNICIPIO_E_ARREDORES_ATE_KM"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaNAOINFORMADO                QuoteAutoResultInsuredObjectFrequentTrafficArea = "NAO_INFORMADO"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaREGIAOCENTROOESTE           QuoteAutoResultInsuredObjectFrequentTrafficArea = "REGIAO_CENTRO_OESTE"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaREGIAONORDESTE              QuoteAutoResultInsuredObjectFrequentTrafficArea = "REGIAO_NORDESTE"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaREGIAONORTE                 QuoteAutoResultInsuredObjectFrequentTrafficArea = "REGIAO_NORTE"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaREGIAOSUDESTE               QuoteAutoResultInsuredObjectFrequentTrafficArea = "REGIAO_SUDESTE"
	QuoteAutoResultInsuredObjectFrequentTrafficAreaREGIAOSUL                   QuoteAutoResultInsuredObjectFrequentTrafficArea = "REGIAO_SUL"
)

// Defines values for QuoteAutoResultInsuredObjectFuel.
const (
	QuoteAutoResultInsuredObjectFuelALCOOLETANOL QuoteAutoResultInsuredObjectFuel = "ALCOOL_ETANOL"
	QuoteAutoResultInsuredObjectFuelDIESEL       QuoteAutoResultInsuredObjectFuel = "DIESEL"
	QuoteAutoResultInsuredObjectFuelELETRICO     QuoteAutoResultInsuredObjectFuel = "ELETRICO"
	QuoteAutoResultInsuredObjectFuelFLEX         QuoteAutoResultInsuredObjectFuel = "FLEX"
	QuoteAutoResultInsuredObjectFuelFLEXEGNV     QuoteAutoResultInsuredObjectFuel = "FLEX_E_GNV"
	QuoteAutoResultInsuredObjectFuelGASGNV       QuoteAutoResultInsuredObjectFuel = "GAS_GNV"
	QuoteAutoResultInsuredObjectFuelGASOLINA     QuoteAutoResultInsuredObjectFuel = "GASOLINA"
	QuoteAutoResultInsuredObjectFuelHIBRIDO      QuoteAutoResultInsuredObjectFuel = "HIBRIDO"
)

// Defines values for QuoteAutoResultInsuredObjectLicensePlateType.
const (
	QuoteAutoResultInsuredObjectLicensePlateTypeALAGAMENTOENCHENTE QuoteAutoResultInsuredObjectLicensePlateType = "ALAGAMENTO_ENCHENTE"
	QuoteAutoResultInsuredObjectLicensePlateTypeCOLISAO            QuoteAutoResultInsuredObjectLicensePlateType = "COLISAO"
	QuoteAutoResultInsuredObjectLicensePlateTypeFURTO              QuoteAutoResultInsuredObjectLicensePlateType = "FURTO"
	QuoteAutoResultInsuredObjectLicensePlateTypeINCENDIO           QuoteAutoResultInsuredObjectLicensePlateType = "INCENDIO"
	QuoteAutoResultInsuredObjectLicensePlateTypeINUNDACOES         QuoteAutoResultInsuredObjectLicensePlateType = "INUNDACOES"
	QuoteAutoResultInsuredObjectLicensePlateTypeROUBO              QuoteAutoResultInsuredObjectLicensePlateType = "ROUBO"
)

// Defines values for QuoteAutoResultInsuredObjectLoadsCarriedinsured.
const (
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredAUTOMOVEIS                QuoteAutoResultInsuredObjectLoadsCarriedinsured = "AUTOMOVEIS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredAUTOPECAS                 QuoteAutoResultInsuredObjectLoadsCarriedinsured = "AUTO_PECAS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredBEBIDAS                   QuoteAutoResultInsuredObjectLoadsCarriedinsured = "BEBIDAS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredBRINQUEDOS                QuoteAutoResultInsuredObjectLoadsCarriedinsured = "BRINQUEDOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCALCADOS                  QuoteAutoResultInsuredObjectLoadsCarriedinsured = "CALCADOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCARGAMISTA                QuoteAutoResultInsuredObjectLoadsCarriedinsured = "CARGA_MISTA"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCARGAVIVA                 QuoteAutoResultInsuredObjectLoadsCarriedinsured = "CARGA_VIVA"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCIGARROS                  QuoteAutoResultInsuredObjectLoadsCarriedinsured = "CIGARROS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCOMBUSTIVEISOUINFLAMAVEIS QuoteAutoResultInsuredObjectLoadsCarriedinsured = "COMBUSTIVEIS_OU_INFLAMAVEIS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredCONFECCOES                QuoteAutoResultInsuredObjectLoadsCarriedinsured = "CONFECCOES"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredELETRODOMESTICOS          QuoteAutoResultInsuredObjectLoadsCarriedinsured = "ELETRODOMESTICOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredGASES                     QuoteAutoResultInsuredObjectLoadsCarriedinsured = "GASES"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredGENEROALIMENTICIO         QuoteAutoResultInsuredObjectLoadsCarriedinsured = "GENERO_ALIMENTICIO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredHORTIFRUTIGRANJEIROS      QuoteAutoResultInsuredObjectLoadsCarriedinsured = "HORTIFRUTI_GRANJEIROS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredLATICIOS                  QuoteAutoResultInsuredObjectLoadsCarriedinsured = "LATICIOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredLIXO                      QuoteAutoResultInsuredObjectLoadsCarriedinsured = "LIXO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredMADEIRA                   QuoteAutoResultInsuredObjectLoadsCarriedinsured = "MADEIRA"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredMATERIALDECONSTRUCAO      QuoteAutoResultInsuredObjectLoadsCarriedinsured = "MATERIAL_DE_CONSTRUCAO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredMEDICAMENTOS              QuoteAutoResultInsuredObjectLoadsCarriedinsured = "MEDICAMENTOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredMOVEIS                    QuoteAutoResultInsuredObjectLoadsCarriedinsured = "MOVEIS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredMUDANCAS                  QuoteAutoResultInsuredObjectLoadsCarriedinsured = "MUDANCAS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredNAOINFORMADO              QuoteAutoResultInsuredObjectLoadsCarriedinsured = "NAO_INFORMADO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredOUTRAS                    QuoteAutoResultInsuredObjectLoadsCarriedinsured = "OUTRAS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredPAPEIS                    QuoteAutoResultInsuredObjectLoadsCarriedinsured = "PAPEIS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredPLASTICOS                 QuoteAutoResultInsuredObjectLoadsCarriedinsured = "PLASTICOS"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredPNEUOUCAMERADEAR          QuoteAutoResultInsuredObjectLoadsCarriedinsured = "PNEU_OU_CAMERA_DE_AR"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredPRODUTOPERICIVEL          QuoteAutoResultInsuredObjectLoadsCarriedinsured = "PRODUTO_PERICIVEL"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredPRODUTOQUIMICO            QuoteAutoResultInsuredObjectLoadsCarriedinsured = "PRODUTO_QUIMICO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredSUCO                      QuoteAutoResultInsuredObjectLoadsCarriedinsured = "SUCO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredTECIDO                    QuoteAutoResultInsuredObjectLoadsCarriedinsured = "TECIDO"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredVALORES                   QuoteAutoResultInsuredObjectLoadsCarriedinsured = "VALORES"
	QuoteAutoResultInsuredObjectLoadsCarriedinsuredVIDROS                    QuoteAutoResultInsuredObjectLoadsCarriedinsured = "VIDROS"
)

// Defines values for QuoteAutoResultInsuredObjectModality.
const (
	QuoteAutoResultInsuredObjectModalityCRITERIODIVERSO            QuoteAutoResultInsuredObjectModality = "CRITERIO_DIVERSO"
	QuoteAutoResultInsuredObjectModalityOUTROS                     QuoteAutoResultInsuredObjectModality = "OUTROS"
	QuoteAutoResultInsuredObjectModalityVALORDEMERCADOREFERENCIADO QuoteAutoResultInsuredObjectModality = "VALOR_DE_MERCADO_REFERENCIADO"
	QuoteAutoResultInsuredObjectModalityVALORDETERMINADO           QuoteAutoResultInsuredObjectModality = "VALOR_DETERMINADO"
)

// Defines values for QuoteAutoResultInsuredObjectRiskManagementSystem.
const (
	QuoteAutoResultInsuredObjectRiskManagementSystemCADASTRODEMOTORISTAS QuoteAutoResultInsuredObjectRiskManagementSystem = "CADASTRO_DE_MOTORISTAS"
	QuoteAutoResultInsuredObjectRiskManagementSystemESCOLTADECARGAS      QuoteAutoResultInsuredObjectRiskManagementSystem = "ESCOLTA_DE_CARGAS"
	QuoteAutoResultInsuredObjectRiskManagementSystemNAO                  QuoteAutoResultInsuredObjectRiskManagementSystem = "NAO"
	QuoteAutoResultInsuredObjectRiskManagementSystemNAOINFORMADO         QuoteAutoResultInsuredObjectRiskManagementSystem = "NAO_INFORMADO"
	QuoteAutoResultInsuredObjectRiskManagementSystemOUTROS               QuoteAutoResultInsuredObjectRiskManagementSystem = "OUTROS"
)

// Defines values for QuoteAutoResultInsuredObjectTableUsed.
const (
	QuoteAutoResultInsuredObjectTableUsedFIPE          QuoteAutoResultInsuredObjectTableUsed = "FIPE"
	QuoteAutoResultInsuredObjectTableUsedJORNALDOCARRO QuoteAutoResultInsuredObjectTableUsed = "JORNAL_DO_CARRO"
	QuoteAutoResultInsuredObjectTableUsedMOLICAR       QuoteAutoResultInsuredObjectTableUsed = "MOLICAR"
	QuoteAutoResultInsuredObjectTableUsedOUTRAS        QuoteAutoResultInsuredObjectTableUsed = "OUTRAS"
	QuoteAutoResultInsuredObjectTableUsedVD            QuoteAutoResultInsuredObjectTableUsed = "VD"
)

// Defines values for QuoteAutoResultInsuredObjectTariff.
const (
	QuoteAutoResultInsuredObjectTariffMOTOCICLETANACIONALEIMPORTADO    QuoteAutoResultInsuredObjectTariff = "MOTOCICLETA_NACIONAL_E_IMPORTADO"
	QuoteAutoResultInsuredObjectTariffONIBUSNACIONALEIMPORTADO         QuoteAutoResultInsuredObjectTariff = "ONIBUS_NACIONAL_E_IMPORTADO"
	QuoteAutoResultInsuredObjectTariffPASSEIOIMPORTADO                 QuoteAutoResultInsuredObjectTariff = "PASSEIO_IMPORTADO"
	QuoteAutoResultInsuredObjectTariffPASSEIONACIONAL                  QuoteAutoResultInsuredObjectTariff = "PASSEIO_NACIONAL"
	QuoteAutoResultInsuredObjectTariffPICKUPNACIONALEIMPORTADO         QuoteAutoResultInsuredObjectTariff = "PICK_UP_NACIONAL_E_IMPORTADO"
	QuoteAutoResultInsuredObjectTariffUTILITARIONACIONALEIMPORTADO     QuoteAutoResultInsuredObjectTariff = "UTILITARIO_NACIONAL_E_IMPORTADO"
	QuoteAutoResultInsuredObjectTariffVEICULODECARGANACIONALEIMPORTADO QuoteAutoResultInsuredObjectTariff = "VEICULO_DE_CARGA_NACIONAL_E_IMPORTADO"
)

// Defines values for QuoteAutoResultInsuredObjectTaxType.
const (
	QuoteAutoResultInsuredObjectTaxTypeAMBOS QuoteAutoResultInsuredObjectTaxType = "AMBOS"
	QuoteAutoResultInsuredObjectTaxTypeICMS  QuoteAutoResultInsuredObjectTaxType = "ICMS"
	QuoteAutoResultInsuredObjectTaxTypeIPI   QuoteAutoResultInsuredObjectTaxType = "IPI"
)

// Defines values for QuoteAutoResultInsuredObjectVehicleUse.
const (
	QuoteAutoResultInsuredObjectVehicleUseEXERCICIODOTRABALHO QuoteAutoResultInsuredObjectVehicleUse = "EXERCICIO_DO_TRABALHO"
	QuoteAutoResultInsuredObjectVehicleUseLAZER               QuoteAutoResultInsuredObjectVehicleUse = "LAZER"
	QuoteAutoResultInsuredObjectVehicleUseLOCOMOCAODIARIA     QuoteAutoResultInsuredObjectVehicleUse = "LOCOMOCAO_DIARIA"
)

// Defines values for QuoteAutoResultInsuredObjectCoverageCode.
const (
	QuoteAutoResultInsuredObjectCoverageCodeACESSORIOSEEQUIPAMENTOS                        QuoteAutoResultInsuredObjectCoverageCode = "ACESSORIOS_E_EQUIPAMENTOS"
	QuoteAutoResultInsuredObjectCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPCONDUTOR       QuoteAutoResultInsuredObjectCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_CONDUTOR"
	QuoteAutoResultInsuredObjectCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPVEICULO        QuoteAutoResultInsuredObjectCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_VEICULO"
	QuoteAutoResultInsuredObjectCoverageCodeCARRORESERVA                                   QuoteAutoResultInsuredObjectCoverageCode = "CARRO_RESERVA"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOALAGAMENTO                                QuoteAutoResultInsuredObjectCoverageCode = "CASCO_ALAGAMENTO"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOCOLISAOINDENIZACAOINTEGRAL                QuoteAutoResultInsuredObjectCoverageCode = "CASCO_COLISAO_INDENIZACAO_INTEGRAL"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOCOLISAOINDENIZACAOPARCIAL                 QuoteAutoResultInsuredObjectCoverageCode = "CASCO_COLISAO_INDENIZACAO_PARCIAL"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOCOMPREENSIVA                              QuoteAutoResultInsuredObjectCoverageCode = "CASCO_COMPREENSIVA"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOINCENDIO                                  QuoteAutoResultInsuredObjectCoverageCode = "CASCO_INCENDIO"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOINCENDIOROUBOEFURTO                       QuoteAutoResultInsuredObjectCoverageCode = "CASCO_INCENDIO_ROUBO_E_FURTO"
	QuoteAutoResultInsuredObjectCoverageCodeCASCOROUBOEFURTO                               QuoteAutoResultInsuredObjectCoverageCode = "CASCO_ROUBO_E_FURTO"
	QuoteAutoResultInsuredObjectCoverageCodeDIARIAPORINDISPONIBILIDADE                     QuoteAutoResultInsuredObjectCoverageCode = "DIARIA_POR_INDISPONIBILIDADE"
	QuoteAutoResultInsuredObjectCoverageCodeLFRLANTERNASFAROISERETROVISORES                QuoteAutoResultInsuredObjectCoverageCode = "LFR_LANTERNAS_FAROIS_E_RETROVISORES"
	QuoteAutoResultInsuredObjectCoverageCodeOUTRAS                                         QuoteAutoResultInsuredObjectCoverageCode = "OUTRAS"
	QuoteAutoResultInsuredObjectCoverageCodePEQUENOSREPAROS                                QuoteAutoResultInsuredObjectCoverageCode = "PEQUENOS_REPAROS"
	QuoteAutoResultInsuredObjectCoverageCodeRESPONSABILIDADECIVILCARTAVERDE                QuoteAutoResultInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_CARTA_VERDE"
	QuoteAutoResultInsuredObjectCoverageCodeRESPONSABILIDADECIVILFACULTATIVADEVEICULOSRCFV QuoteAutoResultInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DE_VEICULOS_RCFV"
	QuoteAutoResultInsuredObjectCoverageCodeRESPONSABILIDADECIVILFACULTATIVADOCONDUTORRCFC QuoteAutoResultInsuredObjectCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DO_CONDUTOR_RCFC"
	QuoteAutoResultInsuredObjectCoverageCodeVIDROS                                         QuoteAutoResultInsuredObjectCoverageCode = "VIDROS"
)

// Defines values for QuoteAutoResultInsuredObjectCoverageCompensationType.
const (
	QuoteAutoResultInsuredObjectCoverageCompensationTypeINTEGRAL QuoteAutoResultInsuredObjectCoverageCompensationType = "INTEGRAL"
	QuoteAutoResultInsuredObjectCoverageCompensationTypeOUTROS   QuoteAutoResultInsuredObjectCoverageCompensationType = "OUTROS"
	QuoteAutoResultInsuredObjectCoverageCompensationTypePARCIAL  QuoteAutoResultInsuredObjectCoverageCompensationType = "PARCIAL"
)

// Defines values for QuoteAutoRiskLocationHousingGateType.
const (
	QuoteAutoRiskLocationHousingGateTypePORTAOAUTOMATICO QuoteAutoRiskLocationHousingGateType = "PORTAO_AUTOMATICO"
	QuoteAutoRiskLocationHousingGateTypePORTAOMANUAL     QuoteAutoRiskLocationHousingGateType = "PORTAO_MANUAL"
)

// Defines values for QuoteAutoRiskLocationHousingType.
const (
	QuoteAutoRiskLocationHousingTypeAPARTAMENTOOUFLAT                QuoteAutoRiskLocationHousingType = "APARTAMENTO_OU_FLAT"
	QuoteAutoRiskLocationHousingTypeCASAOUSOBRADO                    QuoteAutoRiskLocationHousingType = "CASA_OU_SOBRADO"
	QuoteAutoRiskLocationHousingTypeCASAOUSOBRADOEMCONDOMINIOFECHADO QuoteAutoRiskLocationHousingType = "CASA_OU_SOBRADO_EM_CONDOMINIO_FECHADO"
	QuoteAutoRiskLocationHousingTypeCHACARAFAZENDAOUSITIO            QuoteAutoRiskLocationHousingType = "CHACARA_FAZENDA_OU_SITIO"
)

// Defines values for QuoteDataAutoInsuranceType.
const (
	QuoteDataAutoInsuranceTypeNOVO      QuoteDataAutoInsuranceType = "NOVO"
	QuoteDataAutoInsuranceTypeRENOVACAO QuoteDataAutoInsuranceType = "RENOVACAO"
)

// Defines values for QuoteDataAutoTermType.
const (
	QuoteDataAutoTermTypeANUAL                  QuoteDataAutoTermType = "ANUAL"
	QuoteDataAutoTermTypeANUALINTERMITENTE      QuoteDataAutoTermType = "ANUAL_INTERMITENTE"
	QuoteDataAutoTermTypeDIARIO                 QuoteDataAutoTermType = "DIARIO"
	QuoteDataAutoTermTypeDIARIOINTERMITENTE     QuoteDataAutoTermType = "DIARIO_INTERMITENTE"
	QuoteDataAutoTermTypeMENSAL                 QuoteDataAutoTermType = "MENSAL"
	QuoteDataAutoTermTypeMENSALINTERMITENTE     QuoteDataAutoTermType = "MENSAL_INTERMITENTE"
	QuoteDataAutoTermTypeOUTROS                 QuoteDataAutoTermType = "OUTROS"
	QuoteDataAutoTermTypePLURIANUAL             QuoteDataAutoTermType = "PLURIANUAL"
	QuoteDataAutoTermTypePLURIANUALINTERMITENTE QuoteDataAutoTermType = "PLURIANUAL_INTERMITENTE"
	QuoteDataAutoTermTypeSEMESTRAL              QuoteDataAutoTermType = "SEMESTRAL"
	QuoteDataAutoTermTypeSEMESTRALINTERMITENTE  QuoteDataAutoTermType = "SEMESTRAL_INTERMITENTE"
)

// Defines values for QuoteResultAssistanceService.
const (
	QuoteResultAssistanceServiceACIONAMENTOEOUAGENDAMENTODELEVAETRAZ                    QuoteResultAssistanceService = "ACIONAMENTO_E_OU_AGENDAMENTO_DE_LEVA_E_TRAZ"
	QuoteResultAssistanceServiceAMPARODECRIANCAS                                        QuoteResultAssistanceService = "AMPARO_DE_CRIANCAS"
	QuoteResultAssistanceServiceAPLICACAODEVACINASEMDOMICILIO                           QuoteResultAssistanceService = "APLICACAO_DE_VACINAS_EM_DOMICILIO"
	QuoteResultAssistanceServiceAQUECEDORES                                             QuoteResultAssistanceService = "AQUECEDORES"
	QuoteResultAssistanceServiceASSISTENCIAAELETRODOMESTICOS                            QuoteResultAssistanceService = "ASSISTENCIA_A_ELETRODOMESTICOS"
	QuoteResultAssistanceServiceASSISTENCIAAUTOEOUMOTO                                  QuoteResultAssistanceService = "ASSISTENCIA_AUTO_E_OU_MOTO"
	QuoteResultAssistanceServiceASSISTENCIABIKE                                         QuoteResultAssistanceService = "ASSISTENCIA_BIKE"
	QuoteResultAssistanceServiceASSISTENCIAEMVIAGEM                                     QuoteResultAssistanceService = "ASSISTENCIA_EM_VIAGEM"
	QuoteResultAssistanceServiceASSISTENCIAESCOLAR                                      QuoteResultAssistanceService = "ASSISTENCIA_ESCOLAR"
	QuoteResultAssistanceServiceASSISTENCIAFUNERAL                                      QuoteResultAssistanceService = "ASSISTENCIA_FUNERAL"
	QuoteResultAssistanceServiceASSISTENCIAFUNERALPET                                   QuoteResultAssistanceService = "ASSISTENCIA_FUNERAL_PET"
	QuoteResultAssistanceServiceASSISTENCIAINFORMATICA                                  QuoteResultAssistanceService = "ASSISTENCIA_INFORMATICA"
	QuoteResultAssistanceServiceASSISTENCIANUTRICIONAL                                  QuoteResultAssistanceService = "ASSISTENCIA_NUTRICIONAL"
	QuoteResultAssistanceServiceASSISTENCIAPET                                          QuoteResultAssistanceService = "ASSISTENCIA_PET"
	QuoteResultAssistanceServiceASSISTENCIARESIDENCIAL                                  QuoteResultAssistanceService = "ASSISTENCIA_RESIDENCIAL"
	QuoteResultAssistanceServiceASSISTENCIASSAUDEEBEMESTAR                              QuoteResultAssistanceService = "ASSISTENCIAS_SAUDE_E_BEM_ESTAR"
	QuoteResultAssistanceServiceASSISTENCIASUSTENTAVEL                                  QuoteResultAssistanceService = "ASSISTENCIA_SUSTENTAVEL"
	QuoteResultAssistanceServiceASSISTENCIAVETERINARIAEMERGENCIAL                       QuoteResultAssistanceService = "ASSISTENCIA_VETERINARIA_EMERGENCIAL"
	QuoteResultAssistanceServiceBABYSITTER                                              QuoteResultAssistanceService = "BABY_SITTER"
	QuoteResultAssistanceServiceCACAMBA                                                 QuoteResultAssistanceService = "CACAMBA"
	QuoteResultAssistanceServiceCARRORESERVA                                            QuoteResultAssistanceService = "CARRO_RESERVA"
	QuoteResultAssistanceServiceCESTABASICA                                             QuoteResultAssistanceService = "CESTA_BASICA"
	QuoteResultAssistanceServiceCESTADEALIMENTOS                                        QuoteResultAssistanceService = "CESTA_DE_ALIMENTOS"
	QuoteResultAssistanceServiceCESTANATALIDADE                                         QuoteResultAssistanceService = "CESTA_NATALIDADE"
	QuoteResultAssistanceServiceCHAVEIRO                                                QuoteResultAssistanceService = "CHAVEIRO"
	QuoteResultAssistanceServiceCHECKUP                                                 QuoteResultAssistanceService = "CHECK_UP"
	QuoteResultAssistanceServiceCOBERTURAPROVISORIADETELHADO                            QuoteResultAssistanceService = "COBERTURA_PROVISORIA_DE_TELHADO"
	QuoteResultAssistanceServiceCONCIERGE                                               QuoteResultAssistanceService = "CONCIERGE"
	QuoteResultAssistanceServiceCONSERTODEARCONDICIONADO                                QuoteResultAssistanceService = "CONSERTO_DE_AR_CONDICIONADO"
	QuoteResultAssistanceServiceCONSERTODEELETRODOMESTICOSLINHABRANCA                   QuoteResultAssistanceService = "CONSERTO_DE_ELETRODOMESTICOS_LINHA_BRANCA"
	QuoteResultAssistanceServiceCONSERTODEELETROELETRONICOLINHAMARROM                   QuoteResultAssistanceService = "CONSERTO_DE_ELETROELETRONICO_LINHA_MARROM"
	QuoteResultAssistanceServiceCONSERTODEPORTAONDULADA                                 QuoteResultAssistanceService = "CONSERTO_DE_PORTA_ONDULADA"
	QuoteResultAssistanceServiceCONSULTASVETERINARIAS                                   QuoteResultAssistanceService = "CONSULTAS_VETERINARIAS"
	QuoteResultAssistanceServiceCONSULTORIAORCAMENTARIA                                 QuoteResultAssistanceService = "CONSULTORIA_ORCAMENTARIA"
	QuoteResultAssistanceServiceCONVENIENCIAEMVIAGEM                                    QuoteResultAssistanceService = "CONVENIENCIA_EM_VIAGEM"
	QuoteResultAssistanceServiceDEDETIZACAO                                             QuoteResultAssistanceService = "DEDETIZACAO"
	QuoteResultAssistanceServiceDESATOLAMENTO                                           QuoteResultAssistanceService = "DESATOLAMENTO"
	QuoteResultAssistanceServiceDESCARTERESPONSAVEL                                     QuoteResultAssistanceService = "DESCARTE_RESPONSAVEL"
	QuoteResultAssistanceServiceDESCONTOSEMCONSULTASEEXAMES                             QuoteResultAssistanceService = "DESCONTOS_EM_CONSULTAS_E_EXAMES"
	QuoteResultAssistanceServiceDESCONTOSEMMEDICAMENTOS                                 QuoteResultAssistanceService = "DESCONTOS_EM_MEDICAMENTOS"
	QuoteResultAssistanceServiceDESENTUPIMENTO                                          QuoteResultAssistanceService = "DESENTUPIMENTO"
	QuoteResultAssistanceServiceDESINSETIZACAOEDESRATIZACAO                             QuoteResultAssistanceService = "DESINSETIZACAO_E_DESRATIZACAO"
	QuoteResultAssistanceServiceDESPACHANTE                                             QuoteResultAssistanceService = "DESPACHANTE"
	QuoteResultAssistanceServiceDESPESASFARMACEUTICAS                                   QuoteResultAssistanceService = "DESPESAS_FARMACEUTICAS"
	QuoteResultAssistanceServiceDESPESASMEDICASCIRURGICASEDEHOSPITALIZACAO              QuoteResultAssistanceService = "DESPESAS_MEDICAS_CIRURGICAS_E_DE_HOSPITALIZACAO"
	QuoteResultAssistanceServiceDESPESASODONTOLOGICAS                                   QuoteResultAssistanceService = "DESPESAS_ODONTOLOGICAS"
	QuoteResultAssistanceServiceELETRICISTA                                             QuoteResultAssistanceService = "ELETRICISTA"
	QuoteResultAssistanceServiceEMERGENCIAS                                             QuoteResultAssistanceService = "EMERGENCIAS"
	QuoteResultAssistanceServiceENCANADOR                                               QuoteResultAssistanceService = "ENCANADOR"
	QuoteResultAssistanceServiceENVIODEACOMPANHANTEEMCASODEACIDENTE                     QuoteResultAssistanceService = "ENVIO_DE_ACOMPANHANTE_EM_CASO_DE_ACIDENTE"
	QuoteResultAssistanceServiceENVIODEFAMILIARPARAACOMPANHAMENTODEMENORESDECATORZEANOS QuoteResultAssistanceService = "ENVIO_DE_FAMILIAR_PARA_ACOMPANHAMENTO_DE_MENORES_DE_CATORZE_ANOS"
	QuoteResultAssistanceServiceENVIODERACAO                                            QuoteResultAssistanceService = "ENVIO_DE_RACAO"
	QuoteResultAssistanceServiceESCRITORIOVIRTUAL                                       QuoteResultAssistanceService = "ESCRITORIO_VIRTUAL"
	QuoteResultAssistanceServiceGUARDADEANIMAIS                                         QuoteResultAssistanceService = "GUARDA_DE_ANIMAIS"
	QuoteResultAssistanceServiceGUARDADOVEICULO                                         QuoteResultAssistanceService = "GUARDA_DO_VEICULO"
	QuoteResultAssistanceServiceGUINCHO                                                 QuoteResultAssistanceService = "GUINCHO"
	QuoteResultAssistanceServiceHELPDESK                                                QuoteResultAssistanceService = "HELP_DESK"
	QuoteResultAssistanceServiceHIDRAULICA                                              QuoteResultAssistanceService = "HIDRAULICA"
	QuoteResultAssistanceServiceHOSPEDAGEM                                              QuoteResultAssistanceService = "HOSPEDAGEM"
	QuoteResultAssistanceServiceHOSPEDAGEMDEANIMAIS                                     QuoteResultAssistanceService = "HOSPEDAGEM_DE_ANIMAIS"
	QuoteResultAssistanceServiceINDICACAODEBANHOETOSA                                   QuoteResultAssistanceService = "INDICACAO_DE_BANHO_E_TOSA"
	QuoteResultAssistanceServiceINDICACAODEPROFISSIONAIS                                QuoteResultAssistanceService = "INDICACAO_DE_PROFISSIONAIS"
	QuoteResultAssistanceServiceINFORMACAOSOBRERACASDECAES                              QuoteResultAssistanceService = "INFORMACAO_SOBRE_RACAS_DE_CAES"
	QuoteResultAssistanceServiceINFORMACAOSOBREVENDADEFILHOTES                          QuoteResultAssistanceService = "INFORMACAO_SOBRE_VENDA_DE_FILHOTES"
	QuoteResultAssistanceServiceINFORMACOESSOBREVACINAS                                 QuoteResultAssistanceService = "INFORMACOES_SOBRE_VACINAS"
	QuoteResultAssistanceServiceINFORMACOESVETERINARIASUTEIS                            QuoteResultAssistanceService = "INFORMACOES_VETERINARIAS_UTEIS"
	QuoteResultAssistanceServiceINSTALACAODECHUVEIROELETRICOEOUTROCADERESISTENCIA       QuoteResultAssistanceService = "INSTALACAO_DE_CHUVEIRO_ELETRICO_E_OU_TROCA_DE_RESISTENCIA"
	QuoteResultAssistanceServiceINSTALACAODESUPORTETVATESETENTA                         QuoteResultAssistanceService = "INSTALACAO_DE_SUPORTE_TV_ATE_SETENTA"
	QuoteResultAssistanceServiceINSTALACAORESIDENCIA                                    QuoteResultAssistanceService = "INSTALACAO_RESIDENCIA"
	QuoteResultAssistanceServiceLIMPEZA                                                 QuoteResultAssistanceService = "LIMPEZA"
	QuoteResultAssistanceServiceLIMPEZADEARCONDICIONADO                                 QuoteResultAssistanceService = "LIMPEZA_DE_AR_CONDICIONADO"
	QuoteResultAssistanceServiceLIMPEZADECAIXADAGUA                                     QuoteResultAssistanceService = "LIMPEZA_DE_CAIXA_D_AGUA"
	QuoteResultAssistanceServiceLIMPEZADECALHAS                                         QuoteResultAssistanceService = "LIMPEZA_DE_CALHAS"
	QuoteResultAssistanceServiceLIMPEZADERALOSESIFOES                                   QuoteResultAssistanceService = "LIMPEZA_DE_RALOS_E_SIFOES"
	QuoteResultAssistanceServiceLOCACAODEELETRODOMESTICOS                               QuoteResultAssistanceService = "LOCACAO_DE_ELETRODOMESTICOS"
	QuoteResultAssistanceServiceLOCACAODEVEICULOS                                       QuoteResultAssistanceService = "LOCACAO_DE_VEICULOS"
	QuoteResultAssistanceServiceLOCALIZACAODEBAGAGEM                                    QuoteResultAssistanceService = "LOCALIZACAO_DE_BAGAGEM"
	QuoteResultAssistanceServiceMANUTENCAO                                              QuoteResultAssistanceService = "MANUTENCAO"
	QuoteResultAssistanceServiceMARTELINHOEREPARORAPIDO                                 QuoteResultAssistanceService = "MARTELINHO_E_REPARO_RAPIDO"
	QuoteResultAssistanceServiceMECANICO                                                QuoteResultAssistanceService = "MECANICO"
	QuoteResultAssistanceServiceMEIODETRANSPORTE                                        QuoteResultAssistanceService = "MEIO_DE_TRANSPORTE"
	QuoteResultAssistanceServiceMONITORACAOMEDICA                                       QuoteResultAssistanceService = "MONITORACAO_MEDICA"
	QuoteResultAssistanceServiceMOTO                                                    QuoteResultAssistanceService = "MOTO"
	QuoteResultAssistanceServiceMOTORISTAAMIGO                                          QuoteResultAssistanceService = "MOTORISTA_AMIGO"
	QuoteResultAssistanceServiceMOTORISTASUBSTITUTO                                     QuoteResultAssistanceService = "MOTORISTA_SUBSTITUTO"
	QuoteResultAssistanceServiceMTAMEIODETRANSPORTEALTERNATIVO                          QuoteResultAssistanceService = "MTA_MEIO_DE_TRANSPORTE_ALTERNATIVO"
	QuoteResultAssistanceServiceMUDANCAEGUARDADEMOVEIS                                  QuoteResultAssistanceService = "MUDANCA_E_GUARDA_DE_MOVEIS"
	QuoteResultAssistanceServiceORGANIZACAO                                             QuoteResultAssistanceService = "ORGANIZACAO"
	QuoteResultAssistanceServiceORIENTACAOEMCASODEPERDADEDOCUMENTOS                     QuoteResultAssistanceService = "ORIENTACAO_EM_CASO_DE_PERDA_DE_DOCUMENTOS"
	QuoteResultAssistanceServiceORIENTACAOMEDICA                                        QuoteResultAssistanceService = "ORIENTACAO_MEDICA"
	QuoteResultAssistanceServiceORIENTACAOPSICOLOGICA                                   QuoteResultAssistanceService = "ORIENTACAO_PSICOLOGICA"
	QuoteResultAssistanceServiceOUTROS                                                  QuoteResultAssistanceService = "OUTROS"
	QuoteResultAssistanceServicePERSONALFITNESS                                         QuoteResultAssistanceService = "PERSONAL_FITNESS"
	QuoteResultAssistanceServiceREBOQUE                                                 QuoteResultAssistanceService = "REBOQUE"
	QuoteResultAssistanceServiceREBOQUEBIKE                                             QuoteResultAssistanceService = "REBOQUE_BIKE"
	QuoteResultAssistanceServiceRECUPERACAODOVEICULO                                    QuoteResultAssistanceService = "RECUPERACAO_DO_VEICULO"
	QuoteResultAssistanceServiceREGRESSOANTECIPADOEMCASODEFALECIMENTODEPARENTES         QuoteResultAssistanceService = "REGRESSO_ANTECIPADO_EM_CASO_DE_FALECIMENTO_DE_PARENTES"
	QuoteResultAssistanceServiceREGRESSODOUSUARIOAPOSALTAHOSPITALAR                     QuoteResultAssistanceService = "REGRESSO_DO_USUARIO_APOS_ALTA_HOSPITALAR"
	QuoteResultAssistanceServiceREINSTALACAOEREPARODOVENTILADORDETETO                   QuoteResultAssistanceService = "REINSTALACAO_E_REPARO_DO_VENTILADOR_DE_TETO"
	QuoteResultAssistanceServiceREMANEJAMENTODEMOVEIS                                   QuoteResultAssistanceService = "REMANEJAMENTO_DE_MOVEIS"
	QuoteResultAssistanceServiceREMOCAOHOSPITALAR                                       QuoteResultAssistanceService = "REMOCAO_HOSPITALAR"
	QuoteResultAssistanceServiceREMOCAOMEDICA                                           QuoteResultAssistanceService = "REMOCAO_MEDICA"
	QuoteResultAssistanceServiceREMOCAOMEDICAINTERHOSPITALAR                            QuoteResultAssistanceService = "REMOCAO_MEDICA_INTER_HOSPITALAR"
	QuoteResultAssistanceServiceREPARACAOAUTOMOTIVA                                     QuoteResultAssistanceService = "REPARACAO_AUTOMOTIVA"
	QuoteResultAssistanceServiceREPARODETELEFONIA                                       QuoteResultAssistanceService = "REPARO_DE_TELEFONIA"
	QuoteResultAssistanceServiceREPAROEMPORTOESAUTOMATICOS                              QuoteResultAssistanceService = "REPARO_EM_PORTOES_AUTOMATICOS"
	QuoteResultAssistanceServiceREPAROFIXACAODEANTENAS                                  QuoteResultAssistanceService = "REPARO_FIXACAO_DE_ANTENAS"
	QuoteResultAssistanceServiceREPAROSELETRICOS                                        QuoteResultAssistanceService = "REPAROS_ELETRICOS"
	QuoteResultAssistanceServiceRETORNOANTECIPADOAODOMICILIO                            QuoteResultAssistanceService = "RETORNO_ANTECIPADO_AO_DOMICILIO"
	QuoteResultAssistanceServiceREVERSAODEFOGAO                                         QuoteResultAssistanceService = "REVERSAO_DE_FOGAO"
	QuoteResultAssistanceServiceREVISAODEINSTALACAOELETRICA                             QuoteResultAssistanceService = "REVISAO_DE_INSTALACAO_ELETRICA"
	QuoteResultAssistanceServiceSEGUNDAOPINIAOMEDICAINTERNACIONAL                       QuoteResultAssistanceService = "SEGUNDA_OPINIAO_MEDICA_INTERNACIONAL"
	QuoteResultAssistanceServiceSEGURANCA                                               QuoteResultAssistanceService = "SEGURANCA"
	QuoteResultAssistanceServiceSERRALHEIRO                                             QuoteResultAssistanceService = "SERRALHEIRO"
	QuoteResultAssistanceServiceSERVICODEINDICACAOMEDICA                                QuoteResultAssistanceService = "SERVICO_DE_INDICACAO_MEDICA"
	QuoteResultAssistanceServiceSERVICODELIMPEZA                                        QuoteResultAssistanceService = "SERVICO_DE_LIMPEZA"
	QuoteResultAssistanceServiceSERVICOSAUTO                                            QuoteResultAssistanceService = "SERVICOS_AUTO"
	QuoteResultAssistanceServiceSERVICOSESPECIAISFIXACAODEOBJETOS                       QuoteResultAssistanceService = "SERVICOS_ESPECIAIS_FIXACAO_DE_OBJETOS"
	QuoteResultAssistanceServiceSERVICOSGERAIS                                          QuoteResultAssistanceService = "SERVICOS_GERAIS"
	QuoteResultAssistanceServiceSUBSTITUICAODEPNEUS                                     QuoteResultAssistanceService = "SUBSTITUICAO_DE_PNEUS"
	QuoteResultAssistanceServiceSUBSTITUICAODETELHAS                                    QuoteResultAssistanceService = "SUBSTITUICAO_DE_TELHAS"
	QuoteResultAssistanceServiceTAXI                                                    QuoteResultAssistanceService = "TAXI"
	QuoteResultAssistanceServiceTELEMEDICINA                                            QuoteResultAssistanceService = "TELEMEDICINA"
	QuoteResultAssistanceServiceTRANSMISSAODEMENSAGENSURGENTES                          QuoteResultAssistanceService = "TRANSMISSAO_DE_MENSAGENS_URGENTES"
	QuoteResultAssistanceServiceTRANSPORTEEENVIODEFAMILIAR                              QuoteResultAssistanceService = "TRANSPORTE_E_ENVIO_DE_FAMILIAR"
	QuoteResultAssistanceServiceTRANSPORTEEGUARDAMOVEIS                                 QuoteResultAssistanceService = "TRANSPORTE_E_GUARDA_MOVEIS"
	QuoteResultAssistanceServiceTRANSPORTEESCOLARPESSOAS                                QuoteResultAssistanceService = "TRANSPORTE_ESCOLAR_PESSOAS"
	QuoteResultAssistanceServiceTRANSPORTEVETERINARIOEMERGENCIAL                        QuoteResultAssistanceService = "TRANSPORTE_VETERINARIO_EMERGENCIAL"
	QuoteResultAssistanceServiceTRASLADODECORPO                                         QuoteResultAssistanceService = "TRASLADO_DE_CORPO"
	QuoteResultAssistanceServiceTROCADEBATERIA                                          QuoteResultAssistanceService = "TROCA_DE_BATERIA"
	QuoteResultAssistanceServiceTROCADEPNEUS                                            QuoteResultAssistanceService = "TROCA_DE_PNEUS"
	QuoteResultAssistanceServiceVERIFICACAODEPOSSIVEISVAZAMENTOS                        QuoteResultAssistanceService = "VERIFICACAO_DE_POSSIVEIS_VAZAMENTOS"
	QuoteResultAssistanceServiceVIDROSEACESSORIOS                                       QuoteResultAssistanceService = "VIDROS_E_ACESSORIOS"
	QuoteResultAssistanceServiceVIGILANCIAESEGURANCA                                    QuoteResultAssistanceService = "VIGILANCIA_E_SEGURANCA"
)

// Defines values for QuoteResultAssistanceType.
const (
	QuoteResultAssistanceTypeASSISTENCIAAUTO         QuoteResultAssistanceType = "ASSISTENCIA_AUTO"
	QuoteResultAssistanceTypeASSISTENCIARE           QuoteResultAssistanceType = "ASSISTENCIA_RE"
	QuoteResultAssistanceTypeASSISTENCIAVIDA         QuoteResultAssistanceType = "ASSISTENCIA_VIDA"
	QuoteResultAssistanceTypeBENEFICIOS              QuoteResultAssistanceType = "BENEFICIOS"
	QuoteResultAssistanceTypeDESPACHANTE             QuoteResultAssistanceType = "DESPACHANTE"
	QuoteResultAssistanceTypeLOCACAODEVEICULOS       QuoteResultAssistanceType = "LOCACAO_DE_VEICULOS"
	QuoteResultAssistanceTypeOUTROS                  QuoteResultAssistanceType = "OUTROS"
	QuoteResultAssistanceTypeREPAROSAUTOMOTIVOS      QuoteResultAssistanceType = "REPAROS_AUTOMOTIVOS"
	QuoteResultAssistanceTypeREPAROSEMERGENCIAIS     QuoteResultAssistanceType = "REPAROS_EMERGENCIAIS"
	QuoteResultAssistanceTypeSERVICODEMANUTENCAO     QuoteResultAssistanceType = "SERVICO_DE_MANUTENCAO"
	QuoteResultAssistanceTypeSERVICOEMCASODESINISTRO QuoteResultAssistanceType = "SERVICO_EM_CASO_DE_SINISTRO"
	QuoteResultAssistanceTypeTRANSPORTEDOEMERGENCIAL QuoteResultAssistanceType = "TRANSPORTE_DO_EMERGENCIAL"
)

// Defines values for QuoteResultPaymentPaymentType.
const (
	QuoteResultPaymentPaymentTypeBOLETO            QuoteResultPaymentPaymentType = "BOLETO"
	QuoteResultPaymentPaymentTypeCARTAO            QuoteResultPaymentPaymentType = "CARTAO"
	QuoteResultPaymentPaymentTypeCHEQUE            QuoteResultPaymentPaymentType = "CHEQUE"
	QuoteResultPaymentPaymentTypeDESCONTOEMFOLHA   QuoteResultPaymentPaymentType = "DESCONTO_EM_FOLHA"
	QuoteResultPaymentPaymentTypeDINHEIROEMESPECIE QuoteResultPaymentPaymentType = "DINHEIRO_EM_ESPECIE"
	QuoteResultPaymentPaymentTypeDOC               QuoteResultPaymentPaymentType = "DOC"
	QuoteResultPaymentPaymentTypeOUTROS            QuoteResultPaymentPaymentType = "OUTROS"
	QuoteResultPaymentPaymentTypePIX               QuoteResultPaymentPaymentType = "PIX"
	QuoteResultPaymentPaymentTypeTED               QuoteResultPaymentPaymentType = "TED"
	QuoteResultPaymentPaymentTypeTEF               QuoteResultPaymentPaymentType = "TEF"
)

// Defines values for QuoteResultPremiumCoverageCode.
const (
	QuoteResultPremiumCoverageCodeACESSORIOSEEQUIPAMENTOS                        QuoteResultPremiumCoverageCode = "ACESSORIOS_E_EQUIPAMENTOS"
	QuoteResultPremiumCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPCONDUTOR       QuoteResultPremiumCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_CONDUTOR"
	QuoteResultPremiumCoverageCodeACIDENTEPESSOAISDEPASSAGEIROSAPPVEICULO        QuoteResultPremiumCoverageCode = "ACIDENTE_PESSOAIS_DE_PASSAGEIROS_APP_VEICULO"
	QuoteResultPremiumCoverageCodeCARRORESERVA                                   QuoteResultPremiumCoverageCode = "CARRO_RESERVA"
	QuoteResultPremiumCoverageCodeCASCOALAGAMENTO                                QuoteResultPremiumCoverageCode = "CASCO_ALAGAMENTO"
	QuoteResultPremiumCoverageCodeCASCOCOLISAOINDENIZACAOINTEGRAL                QuoteResultPremiumCoverageCode = "CASCO_COLISAO_INDENIZACAO_INTEGRAL"
	QuoteResultPremiumCoverageCodeCASCOCOLISAOINDENIZACAOPARCIAL                 QuoteResultPremiumCoverageCode = "CASCO_COLISAO_INDENIZACAO_PARCIAL"
	QuoteResultPremiumCoverageCodeCASCOCOMPREENSIVA                              QuoteResultPremiumCoverageCode = "CASCO_COMPREENSIVA"
	QuoteResultPremiumCoverageCodeCASCOINCENDIO                                  QuoteResultPremiumCoverageCode = "CASCO_INCENDIO"
	QuoteResultPremiumCoverageCodeCASCOINCENDIOROUBOEFURTO                       QuoteResultPremiumCoverageCode = "CASCO_INCENDIO_ROUBO_E_FURTO"
	QuoteResultPremiumCoverageCodeCASCOROUBOEFURTO                               QuoteResultPremiumCoverageCode = "CASCO_ROUBO_E_FURTO"
	QuoteResultPremiumCoverageCodeDIARIAPORINDISPONIBILIDADE                     QuoteResultPremiumCoverageCode = "DIARIA_POR_INDISPONIBILIDADE"
	QuoteResultPremiumCoverageCodeLFRLANTERNASFAROISERETROVISORES                QuoteResultPremiumCoverageCode = "LFR_LANTERNAS_FAROIS_E_RETROVISORES"
	QuoteResultPremiumCoverageCodeOUTRAS                                         QuoteResultPremiumCoverageCode = "OUTRAS"
	QuoteResultPremiumCoverageCodePEQUENOSREPAROS                                QuoteResultPremiumCoverageCode = "PEQUENOS_REPAROS"
	QuoteResultPremiumCoverageCodeRESPONSABILIDADECIVILCARTAVERDE                QuoteResultPremiumCoverageCode = "RESPONSABILIDADE_CIVIL_CARTA_VERDE"
	QuoteResultPremiumCoverageCodeRESPONSABILIDADECIVILFACULTATIVADEVEICULOSRCFV QuoteResultPremiumCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DE_VEICULOS_RCFV"
	QuoteResultPremiumCoverageCodeRESPONSABILIDADECIVILFACULTATIVADOCONDUTORRCFC QuoteResultPremiumCoverageCode = "RESPONSABILIDADE_CIVIL_FACULTATIVA_DO_CONDUTOR_RCFC"
	QuoteResultPremiumCoverageCodeVIDROS                                         QuoteResultPremiumCoverageCode = "VIDROS"
)

// Defines values for QuoteStatus.
const (
	QuoteStatusACKN QuoteStatus = "ACKN"
	QuoteStatusACPT QuoteStatus = "ACPT"
	QuoteStatusCANC QuoteStatus = "CANC"
	QuoteStatusEVAL QuoteStatus = "EVAL"
	QuoteStatusRCVD QuoteStatus = "RCVD"
	QuoteStatusRJCT QuoteStatus = "RJCT"
)

// Defines values for ReadjustmentIndex.
const (
	ReadjustmentIndexIGPM                                     ReadjustmentIndex = "IGPM"
	ReadjustmentIndexINCC                                     ReadjustmentIndex = "INCC"
	ReadjustmentIndexINDICEREMUNERACAOBASICADEPOSITOSPOUPANCA ReadjustmentIndex = "INDICE_REMUNERACAO_BASICA_DEPOSITOS_POUPANCA"
	ReadjustmentIndexINPC                                     ReadjustmentIndex = "INPC"
	ReadjustmentIndexIPCA                                     ReadjustmentIndex = "IPCA"
	ReadjustmentIndexOUTROS                                   ReadjustmentIndex = "OUTROS"
)

// Defines values for ResourceStatus.
const (
	ResourceStatusAVAILABLE              ResourceStatus = "AVAILABLE"
	ResourceStatusPENDINGAUTHORISATION   ResourceStatus = "PENDING_AUTHORISATION"
	ResourceStatusTEMPORARILYUNAVAILABLE ResourceStatus = "TEMPORARILY_UNAVAILABLE"
	ResourceStatusUNAVAILABLE            ResourceStatus = "UNAVAILABLE"
)

// Defines values for ResourceType.
const (
	ResourceTypeCAPITALIZATIONTITLES                        ResourceType = "CAPITALIZATION_TITLES"
	ResourceTypeCAPITALIZATIONTITLEWITHDRAWAL               ResourceType = "CAPITALIZATION_TITLE_WITHDRAWAL"
	ResourceTypeCLAIMNOTIFICATION                           ResourceType = "CLAIM_NOTIFICATION"
	ResourceTypeCONTRACTLIFEPENSION                         ResourceType = "CONTRACT_LIFE_PENSION"
	ResourceTypeCONTRACTPENSIONPLAN                         ResourceType = "CONTRACT_PENSION_PLAN"
	ResourceTypeCUSTOMERSBUSINESSADDITIONALINFO             ResourceType = "CUSTOMERS_BUSINESS_ADDITIONALINFO"
	ResourceTypeCUSTOMERSBUSINESSIDENTIFICATIONS            ResourceType = "CUSTOMERS_BUSINESS_IDENTIFICATIONS"
	ResourceTypeCUSTOMERSBUSINESSQUALIFICATION              ResourceType = "CUSTOMERS_BUSINESS_QUALIFICATION"
	ResourceTypeCUSTOMERSPERSONALADDITIONALINFO             ResourceType = "CUSTOMERS_PERSONAL_ADDITIONALINFO"
	ResourceTypeCUSTOMERSPERSONALIDENTIFICATIONS            ResourceType = "CUSTOMERS_PERSONAL_IDENTIFICATIONS"
	ResourceTypeCUSTOMERSPERSONALQUALIFICATION              ResourceType = "CUSTOMERS_PERSONAL_QUALIFICATION"
	ResourceTypeDAMAGESANDPEOPLEACCEPTANCEANDBRANCHESABROAD ResourceType = "DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD"
	ResourceTypeDAMAGESANDPEOPLEAUTO                        ResourceType = "DAMAGES_AND_PEOPLE_AUTO"
	ResourceTypeDAMAGESANDPEOPLEFINANCIALRISKS              ResourceType = "DAMAGES_AND_PEOPLE_FINANCIAL_RISKS"
	ResourceTypeDAMAGESANDPEOPLEHOUSING                     ResourceType = "DAMAGES_AND_PEOPLE_HOUSING"
	ResourceTypeDAMAGESANDPEOPLEPATRIMONIAL                 ResourceType = "DAMAGES_AND_PEOPLE_PATRIMONIAL"
	ResourceTypeDAMAGESANDPEOPLEPERSON                      ResourceType = "DAMAGES_AND_PEOPLE_PERSON"
	ResourceTypeDAMAGESANDPEOPLERESPONSIBILITY              ResourceType = "DAMAGES_AND_PEOPLE_RESPONSIBILITY"
	ResourceTypeDAMAGESANDPEOPLERURAL                       ResourceType = "DAMAGES_AND_PEOPLE_RURAL"
	ResourceTypeDAMAGESANDPEOPLETRANSPORT                   ResourceType = "DAMAGES_AND_PEOPLE_TRANSPORT"
	ResourceTypeENDORSEMENT                                 ResourceType = "ENDORSEMENT"
	ResourceTypeFINANCIALASSISTANCE                         ResourceType = "FINANCIAL_ASSISTANCE"
	ResourceTypeLIFEPENSION                                 ResourceType = "LIFE_PENSION"
	ResourceTypePENSIONPLAN                                 ResourceType = "PENSION_PLAN"
	ResourceTypePENSIONWITHDRAWAL                           ResourceType = "PENSION_WITHDRAWAL"
	ResourceTypeQUOTEACCEPTANCEANDBRANCHESABROAD            ResourceType = "QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD"
	ResourceTypeQUOTEAUTO                                   ResourceType = "QUOTE_AUTO"
	ResourceTypeQUOTECAPITALIZATIONTITLE                    ResourceType = "QUOTE_CAPITALIZATION_TITLE"
	ResourceTypeQUOTEFINANCIALRISK                          ResourceType = "QUOTE_FINANCIAL_RISK"
	ResourceTypeQUOTEHOUSING                                ResourceType = "QUOTE_HOUSING"
	ResourceTypeQUOTEPATRIMONIAL                            ResourceType = "QUOTE_PATRIMONIAL"
	ResourceTypeQUOTEPERSON                                 ResourceType = "QUOTE_PERSON"
	ResourceTypeQUOTERESPONSIBILITY                         ResourceType = "QUOTE_RESPONSIBILITY"
	ResourceTypeQUOTERURAL                                  ResourceType = "QUOTE_RURAL"
	ResourceTypeQUOTETRANSPORT                              ResourceType = "QUOTE_TRANSPORT"
)

// Defines values for ResultQuoteQuoteAutoInsuranceType.
const (
	ResultQuoteQuoteAutoInsuranceTypeNOVO      ResultQuoteQuoteAutoInsuranceType = "NOVO"
	ResultQuoteQuoteAutoInsuranceTypeRENOVACAO ResultQuoteQuoteAutoInsuranceType = "RENOVACAO"
)

// Defines values for ResultQuoteQuoteAutoTermType.
const (
	ResultQuoteQuoteAutoTermTypeANUAL                  ResultQuoteQuoteAutoTermType = "ANUAL"
	ResultQuoteQuoteAutoTermTypeANUALINTERMITENTE      ResultQuoteQuoteAutoTermType = "ANUAL_INTERMITENTE"
	ResultQuoteQuoteAutoTermTypeDIARIO                 ResultQuoteQuoteAutoTermType = "DIARIO"
	ResultQuoteQuoteAutoTermTypeDIARIOINTERMITENTE     ResultQuoteQuoteAutoTermType = "DIARIO_INTERMITENTE"
	ResultQuoteQuoteAutoTermTypeMENSAL                 ResultQuoteQuoteAutoTermType = "MENSAL"
	ResultQuoteQuoteAutoTermTypeMENSALINTERMITENTE     ResultQuoteQuoteAutoTermType = "MENSAL_INTERMITENTE"
	ResultQuoteQuoteAutoTermTypeOUTROS                 ResultQuoteQuoteAutoTermType = "OUTROS"
	ResultQuoteQuoteAutoTermTypePLURIANUAL             ResultQuoteQuoteAutoTermType = "PLURIANUAL"
	ResultQuoteQuoteAutoTermTypePLURIANUALINTERMITENTE ResultQuoteQuoteAutoTermType = "PLURIANUAL_INTERMITENTE"
	ResultQuoteQuoteAutoTermTypeSEMESTRAL              ResultQuoteQuoteAutoTermType = "SEMESTRAL"
	ResultQuoteQuoteAutoTermTypeSEMESTRALINTERMITENTE  ResultQuoteQuoteAutoTermType = "SEMESTRAL_INTERMITENTE"
)

// Defines values for RevokeQuoteLeadRequestDataAuthorIdentificationType.
const (
	RevokeQuoteLeadRequestDataAuthorIdentificationTypeCNPJ RevokeQuoteLeadRequestDataAuthorIdentificationType = "CNPJ"
	RevokeQuoteLeadRequestDataAuthorIdentificationTypeCPF  RevokeQuoteLeadRequestDataAuthorIdentificationType = "CPF"
)

// Defines values for RevokeQuoteLeadResponseDataStatus.
const (
	RevokeQuoteLeadResponseDataStatusCANC RevokeQuoteLeadResponseDataStatus = "CANC"
)

// Defines values for UpdateIndex.
const (
	UpdateIndexIGPM                                     UpdateIndex = "IGPM"
	UpdateIndexINCC                                     UpdateIndex = "INCC"
	UpdateIndexINDICEREMUNERACAOBASICADEPOSITOSPOUPANCA UpdateIndex = "INDICE_REMUNERACAO_BASICA_DEPOSITOS_POUPANCA"
	UpdateIndexINPC                                     UpdateIndex = "INPC"
	UpdateIndexIPCA                                     UpdateIndex = "IPCA"
	UpdateIndexOUTROS                                   UpdateIndex = "OUTROS"
)

// Defines values for VehicleUsage.
const (
	VehicleUsageEXERCICIODOTRABALHO VehicleUsage = "EXERCICIO_DO_TRABALHO"
	VehicleUsageLAZER               VehicleUsage = "LAZER"
	VehicleUsageLOCOMOCAODIARIA     VehicleUsage = "LOCOMOCAO_DIARIA"
	VehicleUsageOUTROS              VehicleUsage = "OUTROS"
)

// AmountDetails Detalhes de valores/limites
type AmountDetails struct {
	Amount string `json:"amount"`
	Unit   struct {
		Code string `json:"code"`

		// Description Moeda da Parcela, de acordo com ISO-4217.
		Description string `json:"description"`
	} `json:"unit"`
}

// AreaCode defines model for AreaCode.
type AreaCode string

// BeneficiaryInfo defines model for BeneficiaryInfo.
type BeneficiaryInfo struct {
	// Identification Documento de IdentificaÃ§Ã£o da Pessoa
	Identification string `json:"identification"`

	// IdentificationType Tipo de Documento do Intermediador(a) (Caso Tipo de Intermediador nÃ£o seja CORRETOR ou quando for CORRETOR, porÃ©m o identificador do intermediador nÃ£o seja informado)
	IdentificationType IdentificationType `json:"identificationType"`

	// Name Nome ou RazÃ£o Social da Pessoa
	Name string `json:"name"`
}

// BusinessEntity defines model for BusinessEntity.
type BusinessEntity struct {
	Document struct {
		Identification string `json:"identification"`
		Rel            string `json:"rel"`
	} `json:"document"`
}

// CapitalizationTitleBrand Marca reportada pelo participante do Open Insurance
type CapitalizationTitleBrand struct {
	Companies []CapitalizationTitleCompany `json:"companies"`

	// Name Nome da marca reportada pelo participante do Open Insurance
	Name string `json:"name"`
}

// CapitalizationTitleBroker defines model for CapitalizationTitleBroker.
type CapitalizationTitleBroker struct {
	// BrokerDescription Nome ou Razão Social do Corretor
	BrokerDescription string `json:"brokerDescription"`

	// SusepBrokerCode Código SUSEP do corretor.
	SusepBrokerCode string `json:"susepBrokerCode"`
}

// CapitalizationTitleCompany defines model for CapitalizationTitleCompany.
type CapitalizationTitleCompany struct {
	// CnpjNumber CNPJ da sociedade pertencente à marca
	CnpjNumber string `json:"cnpjNumber"`

	// CompanyName Nome da sociedade pertencente à marca
	CompanyName string                       `json:"companyName"`
	Products    []CapitalizationTitleProduct `json:"products"`
}

// CapitalizationTitleEvent defines model for CapitalizationTitleEvent.
type CapitalizationTitleEvent struct {
	Event *CapitalizationTitleEventInfo `json:"event,omitempty"`

	// EventType Tipo de Evento
	EventType *CapitalizationTitleEventType `json:"eventType,omitempty"`

	// TitleId Código identificador do título na sociedade.
	TitleId *string `json:"titleId,omitempty"`
}

// CapitalizationTitleEventInfo defines model for CapitalizationTitleEventInfo.
type CapitalizationTitleEventInfo struct {
	Raffle     *CapitalizationTitleEventRaffle     `json:"raffle,omitempty"`
	Redemption *CapitalizationTitleEventRedemption `json:"redemption,omitempty"`
}

// CapitalizationTitleEventRaffle defines model for CapitalizationTitleEventRaffle.
type CapitalizationTitleEventRaffle struct {
	// RaffleAmount Detalhes de valores/limites
	RaffleAmount AmountDetails `json:"raffleAmount"`

	// RaffleDate Data de realização do sorteio
	RaffleDate openapi_types.Date `json:"raffleDate"`

	// RaffleSettlementDate Data da liquidação financeira do capital sorteado
	RaffleSettlementDate openapi_types.Date `json:"raffleSettlementDate"`
}

// CapitalizationTitleEventRedemption defines model for CapitalizationTitleEventRedemption.
type CapitalizationTitleEventRedemption struct {
	// RedemptionAmount Detalhes de valores/limites
	RedemptionAmount AmountDetails `json:"redemptionAmount"`

	// RedemptionBonusAmount Detalhes de valores/limites
	RedemptionBonusAmount AmountDetails `json:"redemptionBonusAmount"`

	// RedemptionRequestDate Data de solicitação do resgate
	RedemptionRequestDate openapi_types.Date `json:"redemptionRequestDate"`

	// RedemptionSettlementDate Data da liquidação financeira do resgate
	RedemptionSettlementDate openapi_types.Date `json:"redemptionSettlementDate"`

	// RedemptionType Detalhes de valores/limites
	RedemptionType AmountDetails `json:"redemptionType"`

	// UnreturnedAmount Detalhes de valores/limites
	UnreturnedAmount *AmountDetails `json:"unreturnedAmount,omitempty"`
}

// CapitalizationTitleEventType Tipo de Evento
type CapitalizationTitleEventType string

// CapitalizationTitleEvents defines model for CapitalizationTitleEvents.
type CapitalizationTitleEvents = []CapitalizationTitleEvent

// CapitalizationTitleHolder defines model for CapitalizationTitleHolder.
type CapitalizationTitleHolder struct {
	// HolderAddress Endereço do titular
	HolderAddress string `json:"holderAddress"`

	// HolderAddressAdditionalInfo Alguns logradouros ainda necessitam ser especificados por meio de complemento.
	HolderAddressAdditionalInfo *string `json:"holderAddressAdditionalInfo,omitempty"`

	// HolderCountryCode Código do pais de acordo com o código “alpha3” do ISO-3166.
	// País do titular
	HolderCountryCode string `json:"holderCountryCode"`

	// HolderCountrySubDivision Enumeração referente a cada sigla da unidade da federação que identifica o estado ou o distrito federal, no qual o endereço está localizado. p.ex. 'AC'. São consideradas apenas as siglas para os estados brasileiros
	HolderCountrySubDivision CountrySubDivision `json:"holderCountrySubDivision"`

	// HolderDocumentNumber Documento de Identificação do Titular
	HolderDocumentNumber string `json:"holderDocumentNumber"`

	// HolderDocumentType Tipo de Documento do Titular
	HolderDocumentType DocumentType `json:"holderDocumentType"`

	// HolderDocumentTypeOthers Tipo de Documento do Titular, caso seja selecionado OUTROS.
	HolderDocumentTypeOthers *string `json:"holderDocumentTypeOthers,omitempty"`

	// HolderName Nome ou Razão Social do Titular
	HolderName string `json:"holderName"`

	// HolderPhones Lista com telefones do Titular (quando houver)
	HolderPhones *[]RequestorPhone `json:"holderPhones,omitempty"`

	// HolderPostCode Código de Endereçamento Postal: Composto por um conjunto numérico de oito dígitos, o objetivo principal do CEP é orientar e acelerar o encaminhamento, o tratamento e a entrega de objetos postados nos Correios, por meio da sua atribuição a localidades, logradouros, unidades dos Correios, serviços, órgãos públicos, empresas e edifícios. p.ex. '01311000'.
	// Código Postal do titular, Obrigatório, se houver
	HolderPostCode string `json:"holderPostCode"`

	// HolderRaffle Titular do direito de sorteio?
	HolderRaffle bool `json:"holderRaffle"`

	// HolderRedemption Titular do direito de resgate?
	HolderRedemption bool `json:"holderRedemption"`

	// HolderTownName Localidade: O nome da localidade corresponde à designação da cidade ou município no qual o endereço está localizado.
	// Cidade do titular
	HolderTownName string `json:"holderTownName"`
}

// CapitalizationTitlePlanData defines model for CapitalizationTitlePlanData.
type CapitalizationTitlePlanData struct {
	// Brand Marca reportada pelo participante do Open Insurance
	Brand CapitalizationTitleBrand `json:"brand"`
}

// CapitalizationTitlePlanInfo defines model for CapitalizationTitlePlanInfo.
type CapitalizationTitlePlanInfo struct {
	// Series Dados Gerais da Série
	Series []CapitalizationTitleSeries `json:"series"`
}

// CapitalizationTitleProduct defines model for CapitalizationTitleProduct.
type CapitalizationTitleProduct struct {
	// PlanId planId - Identificador do contrato do plano
	PlanId string `json:"planId"`

	// ProductName Nome comercial do produto associado ao plano
	ProductName string `json:"productName"`
}

// CapitalizationTitleSeries Dados Gerais da Série
type CapitalizationTitleSeries struct {
	// BonusClause Cláusula de bônus
	BonusClause bool `json:"bonusClause"`

	// Broker Dados do corretor (quando houver)
	Broker              *[]CapitalizationTitleBroker `json:"broker,omitempty"`
	CapitalizationQuota PercentageDetails            `json:"capitalizationQuota"`

	// CommercialName Denominação comercial do produto de propriedade exclusiva da sociedade de capitalização. Condicional, caso selecionada as opções "Filantropia Premiável" ou "Popular" no campo "Modalidade".
	CommercialName *string `json:"commercialName,omitempty"`

	// Frequency Tipo de Contribuição - pagamento único, pagamento mensal ou periódico
	Frequency Frequency `json:"frequency"`

	// FrequencyDescription Descrição do Tipo de Contribuição (Quando o Tipo de Contribuição for 3. Pagamento Periódico)
	FrequencyDescription *string `json:"frequencyDescription,omitempty"`

	// GracePeriodForFullRedemption Intervalo de tempo mínimo entre contratação e resgate total do direito, em meses
	GracePeriodForFullRedemption int `json:"gracePeriodForFullRedemption"`

	// GracePeriodRedemption Intervalo de tempo mínimo entre contratação e resgate parcial do direito, em meses.
	GracePeriodRedemption *int              `json:"gracePeriodRedemption,omitempty"`
	InterestRate          PercentageDetails `json:"interestRate"`

	// Modality Modalidade
	Modality CapitalizationTitleSeriesModality `json:"modality"`

	// PlanId Identificação do plano
	PlanId      *string           `json:"planId,omitempty"`
	RaffleQuota PercentageDetails `json:"raffleQuota"`

	// ReadjustmentIndex Índice de reajuste das contribuições e do capital para vigências acima de doze meses
	ReadjustmentIndex ReadjustmentIndex `json:"readjustmentIndex"`

	// ReadjustmentIndexOthers Descreve o índice de reajuste utilizado quando outro que não previamente relacionado nos domínios do campo.
	ReadjustmentIndexOthers *string `json:"readjustmentIndexOthers,omitempty"`

	// SerieSize Quantidade máxima possível de títulos que pode ser emitida para uma mesma série
	SerieSize int `json:"serieSize"`

	// SeriesId Identificação da série
	SeriesId string `json:"seriesId"`

	// SusepProcessNumber Número do processo SUSEP.
	SusepProcessNumber string `json:"susepProcessNumber"`

	// Titles Dados Gerais do Título
	Titles []CapitalizationTitleTitle `json:"titles"`

	// UpdateIndex Descreve o índice de atualização das reservas.
	UpdateIndex UpdateIndex `json:"updateIndex"`

	// UpdateIndexOthers Descreve o índice de atualização utilizado quando outro que não previamente relacionado nos domínios do campo.
	UpdateIndexOthers *string           `json:"updateIndexOthers,omitempty"`
	UploadQuota       PercentageDetails `json:"uploadQuota"`
}

// CapitalizationTitleSeriesModality Modalidade
type CapitalizationTitleSeriesModality string

// CapitalizationTitleSettlement defines model for CapitalizationTitleSettlement.
type CapitalizationTitleSettlement struct {
	// SettlementDueDate Data de Vencimento da Contribuicao
	SettlementDueDate openapi_types.Date `json:"settlementDueDate"`

	// SettlementFinancialAmount Detalhes de valores/limites
	SettlementFinancialAmount AmountDetails `json:"settlementFinancialAmount"`

	// SettlementId Identificador da Contribuicao
	SettlementId string `json:"settlementId"`

	// SettlementPaymentDate Data da Contribuicao
	SettlementPaymentDate openapi_types.Date `json:"settlementPaymentDate"`
}

// CapitalizationTitleSettlements defines model for CapitalizationTitleSettlements.
type CapitalizationTitleSettlements = []CapitalizationTitleSettlement

// CapitalizationTitleSubscriber defines model for CapitalizationTitleSubscriber.
type CapitalizationTitleSubscriber struct {
	// Holder Dados Gerais do Titular
	Holder *[]CapitalizationTitleHolder `json:"holder,omitempty"`

	// SubscriberAddress Endereço do subscritor
	SubscriberAddress string `json:"subscriberAddress"`

	// SubscriberAddressAdditionalInfo Alguns logradouros ainda necessitam ser especificados por meio de complemento.
	SubscriberAddressAdditionalInfo *string `json:"subscriberAddressAdditionalInfo,omitempty"`

	// SubscriberCountryCode Código do pais de acordo com o código “alpha3” do ISO-3166.
	// País do subscritor
	SubscriberCountryCode string `json:"subscriberCountryCode"`

	// SubscriberCountrySubDivision Enumeração referente a cada sigla da unidade da federação que identifica o estado ou o distrito federal, no qual o endereço está localizado. p.ex. 'AC'. São consideradas apenas as siglas para os estados brasileiros
	SubscriberCountrySubDivision CountrySubDivision `json:"subscriberCountrySubDivision"`

	// SubscriberDocumentNumber Documento de Identificação do Subscritor
	SubscriberDocumentNumber string `json:"subscriberDocumentNumber"`

	// SubscriberDocumentType Tipo de Documento do Titular
	SubscriberDocumentType DocumentType `json:"subscriberDocumentType"`

	// SubscriberDocumentTypeOthers Tipo de Documento do Subscritor, caso seja selecionado OUTROS.
	SubscriberDocumentTypeOthers *string `json:"subscriberDocumentTypeOthers,omitempty"`

	// SubscriberName Nome ou Razão Social do Subscritor
	SubscriberName string `json:"subscriberName"`

	// SubscriberPhones Lista com telefones do subscritor (quando houver)
	SubscriberPhones *[]RequestorPhone `json:"subscriberPhones,omitempty"`

	// SubscriberPostCode Código de Endereçamento Postal: Composto por um conjunto numérico de oito dígitos, o objetivo principal do CEP é orientar e acelerar o encaminhamento, o tratamento e a entrega de objetos postados nos Correios, por meio da sua atribuição a localidades, logradouros, unidades dos Correios, serviços, órgãos públicos, empresas e edifícios. p.ex. '01311000'.
	// Código Postal do subscritor, Obrigatório, se houver
	SubscriberPostCode string `json:"subscriberPostCode"`

	// SubscriberTownName Localidade: O nome da localidade corresponde à designação da cidade ou município no qual o endereço está localizado.
	// Cidade do subscritor
	SubscriberTownName string `json:"subscriberTownName"`
}

// CapitalizationTitleTechnicalProvisions (Esses valores poderão sofrer alterações no momento do resgate/pagamento,conforme regras do produto nas condições gerais)
type CapitalizationTitleTechnicalProvisions struct {
	// PdbAmount Detalhes de valores/limites
	PdbAmount AmountDetails `json:"pdbAmount"`

	// PmcAmount Detalhes de valores/limites
	PmcAmount AmountDetails `json:"pmcAmount"`

	// PrAmount Detalhes de valores/limites
	PrAmount AmountDetails `json:"prAmount"`

	// PspAmount Detalhes de valores/limites
	PspAmount AmountDetails `json:"pspAmount"`
}

// CapitalizationTitleTitle defines model for CapitalizationTitleTitle.
type CapitalizationTitleTitle struct {
	// ContributionAmount Detalhes de valores/limites
	ContributionAmount AmountDetails `json:"contributionAmount"`

	// IssueTitleDate Data de Emissão do Título
	IssueTitleDate openapi_types.Date `json:"issueTitleDate"`

	// RafflePremiumAmount Detalhes de valores/limites
	RafflePremiumAmount AmountDetails `json:"rafflePremiumAmount"`

	// RegistrationForm Identificação da ﬁcha de cadastro ou contrato comercial
	RegistrationForm string `json:"registrationForm"`

	// Subscriber Dados Gerais do Título
	Subscriber []CapitalizationTitleSubscriber `json:"subscriber"`

	// TechnicalProvisions Informações de Provisões técnicas
	TechnicalProvisions []CapitalizationTitleTechnicalProvisions `json:"technicalProvisions"`

	// TermEndDate Data de fim de vigência do título de capitalização.
	TermEndDate openapi_types.Date `json:"termEndDate"`

	// TermStartDate Data de início de vigência do título de capitalização.
	TermStartDate openapi_types.Date `json:"termStartDate"`

	// TitleId Identificação do título de capitalização
	TitleId string `json:"titleId"`
}

// CapitalizationTypeEventRedemptionType Tipo de resgate
type CapitalizationTypeEventRedemptionType string

// CivilStatusCode defines model for CivilStatusCode.
type CivilStatusCode string

// ClaimNotification Valores de sinistros (nos Ãºltimos 12 meses)
type ClaimNotification struct {
	// ClaimAmount Detalhes de valores/limites
	ClaimAmount AmountDetails `json:"claimAmount"`

	// ClaimDescription DescriÃ§Ã£o do sinistro
	ClaimDescription string `json:"claimDescription"`
}

// Coinsurer defines model for Coinsurer.
type Coinsurer struct {
	// CededPercentage Percentual cedido para a congÃªnere para contratos de cosseguro cedido. Obs: ObrigatÃ³rio quando hÃ¡ cosseguro
	CededPercentage string `json:"cededPercentage"`

	// Identification IdentificaÃ§Ã£o da congÃªnere, cessionÃ¡rio do cosseguro. Obs: ObrigatÃ³rio quando hÃ¡ cosseguro
	Identification string `json:"identification"`
}

// CompanyInfo defines model for CompanyInfo.
type CompanyInfo struct {
	CnpjNumber string `json:"cnpjNumber"`
	Name       string `json:"name"`
}

// ConsentDataV2 defines model for ConsentDataV2.
type ConsentDataV2 struct {
	ClaimNotificationInformation *struct {
		// DocumentType Tipo de Documento Emitido.
		DocumentType          ConsentDataV2ClaimNotificationInformationDocumentType `json:"documentType"`
		GroupCertificateId    *string                                               `json:"groupCertificateId,omitempty"`
		OccurrenceDate        openapi_types.Date                                    `json:"occurrenceDate"`
		OccurrenceDescription string                                                `json:"occurrenceDescription"`
		OccurrenceTime        *string                                               `json:"occurrenceTime,omitempty"`
		PolicyNumber          string                                                `json:"policyNumber"`
	} `json:"claimNotificationInformation,omitempty"`
	ConsentId              string              `json:"consentId"`
	CreationDateTime       DateTime            `json:"creationDateTime"`
	EndorsementInformation *EndorsementInfo    `json:"endorsementInformation,omitempty"`
	ExpirationDateTime     DateTime            `json:"expirationDateTime"`
	Permissions            []ConsentPermission `json:"permissions"`
	Rejection              *ConsentRejection   `json:"rejection,omitempty"`
	Status                 ConsentStatus       `json:"status"`
	StatusUpdateDateTime   DateTime            `json:"statusUpdateDateTime"`
}

// ConsentDataV2ClaimNotificationInformationDocumentType Tipo de Documento Emitido.
type ConsentDataV2ClaimNotificationInformationDocumentType string

// ConsentPermission defines model for ConsentPermission.
type ConsentPermission string

// ConsentRejectedBy defines model for ConsentRejectedBy.
type ConsentRejectedBy string

// ConsentRejectedReason defines model for ConsentRejectedReason.
type ConsentRejectedReason struct {
	AdditionalInformation *string                   `json:"additionalInformation,omitempty"`
	Code                  ConsentRejectedReasonCode `json:"code"`
}

// ConsentRejectedReasonCode defines model for ConsentRejectedReasonCode.
type ConsentRejectedReasonCode string

// ConsentRejection defines model for ConsentRejection.
type ConsentRejection struct {
	Reason     ConsentRejectedReason `json:"reason"`
	RejectedBy ConsentRejectedBy     `json:"rejectedBy"`
}

// ConsentResponse defines model for ConsentResponse.
type ConsentResponse struct {
	Data  ConsentDataV2 `json:"data"`
	Links *Links        `json:"links,omitempty"`
	Meta  *Meta         `json:"meta,omitempty"`
}

// ConsentStatus defines model for ConsentStatus.
type ConsentStatus string

// CountrySubDivision Enumeração referente a cada sigla da unidade da federação que identifica o estado ou o distrito federal, no qual o endereço está localizado. p.ex. 'AC'. São consideradas apenas as siglas para os estados brasileiros
type CountrySubDivision string

// CreateConsentRequest defines model for CreateConsentRequest.
type CreateConsentRequest struct {
	Data struct {
		BusinessEntity               *BusinessEntity `json:"businessEntity,omitempty"`
		ClaimNotificationInformation *struct {
			DocumentType          CreateConsentRequestDataClaimNotificationInformationDocumentType `json:"documentType"`
			GroupCertificateId    *string                                                          `json:"groupCertificateId,omitempty"`
			OccurrenceDate        openapi_types.Date                                               `json:"occurrenceDate"`
			OccurrenceDescription string                                                           `json:"occurrenceDescription"`
			OccurrenceTime        *string                                                          `json:"occurrenceTime,omitempty"`
			PolicyNumber          string                                                           `json:"policyNumber"`
		} `json:"claimNotificationInformation,omitempty"`
		EndorsementInformation *struct {
			EndorsementType    EndorsementType `json:"endorsementType"`
			PolicyNumber       string          `json:"policyNumber"`
			RequestDescription string          `json:"requestDescription"`
		} `json:"endorsementInformation,omitempty"`
		ExpirationDateTime DateTime            `json:"expirationDateTime"`
		LoggedUser         LoggedUser          `json:"loggedUser"`
		Permissions        []ConsentPermission `json:"permissions"`
	} `json:"data"`
}

// CreateConsentRequestDataClaimNotificationInformationDocumentType defines model for CreateConsentRequest.Data.ClaimNotificationInformation.DocumentType.
type CreateConsentRequestDataClaimNotificationInformationDocumentType string

// CreateEndorsementRequest defines model for CreateEndorsementRequest.
type CreateEndorsementRequest struct {
	Data struct {
		CustomData      *EndorsementCustomData `json:"customData,omitempty"`
		EndorsementType EndorsementType        `json:"endorsementType"`

		// PolicyNumber Número da apólice, conforme regulamentação vigente
		PolicyNumber string `json:"policyNumber"`

		// RequestDate Data de Solicitação do Endosso
		RequestDate openapi_types.Date `json:"requestDate"`

		// RequestDescription Descrição adicional do endosso
		RequestDescription string `json:"requestDescription"`
	} `json:"data"`
}

// CreateEndorsementResponse defines model for CreateEndorsementResponse.
type CreateEndorsementResponse struct {
	Data  EndorsementData `json:"data"`
	Links RedirectLinks   `json:"links"`
}

// CreateQuoteAutoLeadRequest defines model for CreateQuoteAutoLeadRequest.
type CreateQuoteAutoLeadRequest struct {
	Data QuoteAutoLeadData `json:"data"`
}

// CreateQuoteAutoRequest defines model for CreateQuoteAutoRequest.
type CreateQuoteAutoRequest struct {
	Data QuoteAutoData `json:"data"`
}

// CreateQuoteLeadResponse defines model for CreateQuoteLeadResponse.
type CreateQuoteLeadResponse struct {
	Data  QuoteStatusInfo `json:"data"`
	Links Links           `json:"links"`
	Meta  Meta            `json:"meta"`
}

// CreateQuoteResponse defines model for CreateQuoteResponse.
type CreateQuoteResponse struct {
	Data  QuoteStatusInfo `json:"data"`
	Links Links           `json:"links"`
	Meta  Meta            `json:"meta"`
}

// CustomInfoData Estrutura para identificação e transmissão de dados customizáveis.
type CustomInfoData struct {
	// FieldId Um identificador único usado para identificar o valor transmitido.
	FieldId string `json:"fieldId"`

	// Value Valor do campo identificado acima, esse campo pode ser implementado como qualquer tipo de dado (objeto, texto, número, booleano, etc.)
	Value interface{} `json:"value"`
}

// CustomerEmail defines model for CustomerEmail.
type CustomerEmail struct {
	Email *string `json:"email,omitempty"`
}

// CustomerPhone defines model for CustomerPhone.
type CustomerPhone struct {
	AreaCode           *AreaCode `json:"areaCode,omitempty"`
	CountryCallingCode *string   `json:"countryCallingCode,omitempty"`
	Number             *string   `json:"number,omitempty"`
	PhoneExtension     *string   `json:"phoneExtension,omitempty"`
}

// DocumentType Tipo de Documento do Titular
type DocumentType string

// Driver defines model for Driver.
type Driver struct {
	// BirthDate Data de nascimento do condutor (caso aplicÃ¡vel)
	BirthDate *openapi_types.Date `json:"birthDate,omitempty"`

	// Identification Documento de IdentificaÃ§Ã£o do Condutor
	Identification string `json:"identification"`

	// LicensedExperience Tempo de habilitaÃ§Ã£o do condutor utilizado para taxaÃ§Ã£o (caso aplicÃ¡vel)
	LicensedExperience *int `json:"licensedExperience,omitempty"`

	// Sex Sexo do condutor utilizado para a taxaÃ§Ã£o (caso aplicÃ¡vel)
	Sex *DriverSex `json:"sex,omitempty"`
}

// DriverSex Sexo do condutor utilizado para a taxaÃ§Ã£o (caso aplicÃ¡vel)
type DriverSex string

// EndorsementCustomData defines model for EndorsementCustomData.
type EndorsementCustomData struct {
	Beneficiaries             *[]CustomInfoData `json:"beneficiaries,omitempty"`
	BusinessComplimentaryInfo *[]CustomInfoData `json:"businessComplimentaryInfo,omitempty"`
	BusinessIdentification    *[]CustomInfoData `json:"businessIdentification,omitempty"`
	BusinessQualification     *[]CustomInfoData `json:"businessQualification,omitempty"`
	Coverages                 *[]CustomInfoData `json:"coverages,omitempty"`
	CustomerComplimentaryInfo *[]CustomInfoData `json:"customerComplimentaryInfo,omitempty"`
	CustomerIdentification    *[]CustomInfoData `json:"customerIdentification,omitempty"`
	CustomerQualification     *[]CustomInfoData `json:"customerQualification,omitempty"`
	GeneralQuoteInfo          *[]CustomInfoData `json:"generalQuoteInfo,omitempty"`
	InsuredObjects            *[]CustomInfoData `json:"insuredObjects,omitempty"`
	RiskLocationInfo          *[]CustomInfoData `json:"riskLocationInfo,omitempty"`
}

// EndorsementData defines model for EndorsementData.
type EndorsementData struct {
	CustomData      *EndorsementCustomData `json:"customData,omitempty"`
	EndorsementType EndorsementType        `json:"endorsementType"`

	// PolicyNumber Número da apólice, conforme regulamentação vigente
	PolicyNumber string `json:"policyNumber"`

	// ProtocolDateTime Data e hora do protocolamento do endosso, conforme especificação RFC-3339, formato UTC.
	ProtocolDateTime DateTime `json:"protocolDateTime"`

	// ProtocolNumber Identificador da Solicitação do Endosso, conforme protocolo interno da seguradora avisada.
	ProtocolNumber string `json:"protocolNumber"`

	// RequestDate Data de Solicitação do Endosso
	RequestDate openapi_types.Date `json:"requestDate"`

	// RequestDescription Descrição adicional do endosso
	RequestDescription string `json:"requestDescription"`
}

// EndorsementInfo defines model for EndorsementInfo.
type EndorsementInfo struct {
	EndorsementType    EndorsementType `json:"endorsementType"`
	PolicyNumber       string          `json:"policyNumber"`
	RequestDescription string          `json:"requestDescription"`
}

// EndorsementType defines model for EndorsementType.
type EndorsementType string

// ErrorInfo defines model for ErrorInfo.
type ErrorInfo struct {
	Code            string   `json:"code"`
	Detail          string   `json:"detail"`
	RequestDateTime DateTime `json:"requestDateTime"`
	Title           string   `json:"title"`
}

// ErrorInfos defines model for ErrorInfos.
type ErrorInfos = []ErrorInfo

// Filiation defines model for Filiation.
type Filiation struct {
	// CivilName Nome civil completo da pessoa relativa à filiação.
	// (Direito fundamental da pessoa, o nome civil é aquele atribuído à pessoa natural desde o registro de seu nascimento,
	// com o qual será identificada por toda a sua vida, bem como após a sua morte).
	CivilName *string `json:"civilName,omitempty"`

	// Type Tipo de filiação.
	Type *FiliationType `json:"type,omitempty"`
}

// FiliationType Tipo de filiação.
type FiliationType string

// Frequency Tipo de Contribuição - pagamento único, pagamento mensal ou periódico
type Frequency string

// GetCapitalizationTitleEventsResponse defines model for GetCapitalizationTitleEventsResponse.
type GetCapitalizationTitleEventsResponse struct {
	Data  CapitalizationTitleEvents `json:"data"`
	Links Links                     `json:"links"`
	Meta  Meta                      `json:"meta"`
}

// GetCapitalizationTitlePlanInfoResponse defines model for GetCapitalizationTitlePlanInfoResponse.
type GetCapitalizationTitlePlanInfoResponse struct {
	Data  CapitalizationTitlePlanInfo `json:"data"`
	Links Links                       `json:"links"`
	Meta  Meta                        `json:"meta"`
}

// GetCapitalizationTitlePlansResponse defines model for GetCapitalizationTitlePlansResponse.
type GetCapitalizationTitlePlansResponse struct {
	Data  []CapitalizationTitlePlanData `json:"data"`
	Links Links                         `json:"links"`
	Meta  Meta                          `json:"meta"`
}

// GetCapitalizationTitleSettlementsResponse defines model for GetCapitalizationTitleSettlementsResponse.
type GetCapitalizationTitleSettlementsResponse struct {
	Data  CapitalizationTitleSettlements `json:"data"`
	Links Links                          `json:"links"`
	Meta  Meta                           `json:"meta"`
}

// GetPersonalComplimentaryInfoResponse defines model for GetPersonalComplimentaryInfoResponse.
type GetPersonalComplimentaryInfoResponse struct {
	Data  []PersonalComplimentaryInfoData `json:"data"`
	Links Links                           `json:"links"`
	Meta  Meta                            `json:"meta"`
}

// GetPersonalIdentificationResponse defines model for GetPersonalIdentificationResponse.
type GetPersonalIdentificationResponse struct {
	Data  []PersonalIdentificationData `json:"data"`
	Links Links                        `json:"links"`
	Meta  Meta                         `json:"meta"`
}

// GetPersonalQualificationResponse defines model for GetPersonalQualificationResponse.
type GetPersonalQualificationResponse struct {
	Data  []PersonalQualificationData `json:"data"`
	Links Links                       `json:"links"`
	Meta  Meta                        `json:"meta"`
}

// GetQuoteAutoStatusResponse defines model for GetQuoteAutoStatusResponse.
type GetQuoteAutoStatusResponse struct {
	Data struct {
		QuoteInfo *QuoteStatusAuto `json:"quoteInfo,omitempty"`

		// Status Status da cotaÃ§Ã£o.
		Status GetQuoteAutoStatusResponseDataStatus `json:"status"`

		// StatusUpdateDateTime Data e hora da atualizaÃ§Ã£o do status.
		StatusUpdateDateTime DateTime `json:"statusUpdateDateTime"`
	} `json:"data"`
	Links Links `json:"links"`
	Meta  Meta  `json:"meta"`
}

// GetQuoteAutoStatusResponseDataStatus Status da cotaÃ§Ã£o.
type GetQuoteAutoStatusResponseDataStatus string

// GetResourcesResponse defines model for GetResourcesResponse.
type GetResourcesResponse struct {
	// Data Lista de recursos e seus respectivos status.
	Data  []ResourceData `json:"data"`
	Links Links          `json:"links"`
	Meta  Meta           `json:"meta"`
}

// IdentificationDetails Informações referente ao cônjuge.
type IdentificationDetails struct {
	// CivilName Nome civil completo da pessoa natural (Direito fundamental da pessoa, o nome civil é aquele atribuído à pessoa natural desde o registro de seu nascimento, com o qual será identificada por toda a sua vida, bem como após a sua morte)
	CivilName *string `json:"civilName,omitempty"`

	// CpfNumber Número completo do CPF. Atributo que corresponde às informações mínimas exigidas pela Regulamentação em vigor. O CPF é o Cadastro de Pessoa natural.  Ele é um documento feito pela Receita Federal e serve para identificar os contribuintes. O CPF é uma numeração com 11 dígitos, que só mudam por decisão judicial. O documento é emitido pela receita federal
	// Condicional a seleção de true em hasBrazilianNationality
	CpfNumber *string `json:"cpfNumber,omitempty"`
}

// IdentificationType Tipo de Documento do Intermediador(a) (Caso Tipo de Intermediador nÃ£o seja CORRETOR ou quando for CORRETOR, porÃ©m o identificador do intermediador nÃ£o seja informado)
type IdentificationType string

// IncomeFrequency Frequência da renda informada.
type IncomeFrequency string

// InformedPatrimony defines model for InformedPatrimony.
type InformedPatrimony struct {
	// Amount Valor do patrimônio
	Amount *string `json:"amount"`

	// Currency Moeda referente ao valor do patrimônio, segundo modelo ISO-4217.
	Currency *string `json:"currency,omitempty"`

	// Year Ano de referência do patrimônio, conforme especificação RFC-3339.
	Year *string `json:"year,omitempty"`
}

// InformedRevenue defines model for InformedRevenue.
type InformedRevenue struct {
	// Amount Valor do rendimento
	Amount *string `json:"amount"`

	// Currency Moeda referente ao valor da renda, segundo modelo ISO-4217.
	Currency *string `json:"currency,omitempty"`

	// Date Data de referência da renda, conforme especificação RFC-3339.
	Date *openapi_types.Date `json:"date,omitempty"`

	// IncomeFrequency Frequência da renda informada.
	IncomeFrequency *IncomeFrequency `json:"incomeFrequency,omitempty"`
}

// InsuranceAutoBoundCoverage Cobertura vinculada (RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
type InsuranceAutoBoundCoverage string

// InsuranceAutoClaim defines model for InsuranceAutoClaim.
type InsuranceAutoClaim struct {
	// Amount Detalhes de valores/limites
	Amount AmountDetails `json:"amount"`

	// BranchInfo InformaÃ§Ãµes do Anexo EspecÃ­fico
	BranchInfo *InsuranceAutoSpecificClaim `json:"branchInfo,omitempty"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages *[]InsuranceAutoClaimCoverage `json:"coverages,omitempty"`

	// DenialJustification Justificativa da Negativa(Caso Status do Sinistro for 'ENCERRADO_SEM_INDENIZACAO')
	DenialJustification *InsuranceAutoClaimDenialJustification `json:"denialJustification,omitempty"`

	// DenialJustificationDescription DescriÃ§Ã£o da Justificativa da Negativa(Caso Justificativa da Negativa for 'OUTROS')
	DenialJustificationDescription *string `json:"denialJustificationDescription,omitempty"`

	// DocumentationDeliveryDate Data de entrega da documentaÃ§Ã£o completa
	DocumentationDeliveryDate openapi_types.Date `json:"documentationDeliveryDate"`

	// Identification Identificador do processo de sinistro
	Identification string `json:"identification"`

	// OccurrenceDate Data de ocorrÃªncia do sinistro
	OccurrenceDate openapi_types.Date `json:"occurrenceDate"`

	// Status Status do sinistro
	Status InsuranceAutoClaimStatus `json:"status"`

	// StatusAlterationDate Data de alteraÃ§Ã£o do status do sinistro
	StatusAlterationDate openapi_types.Date `json:"statusAlterationDate"`

	// ThirdPartyClaimDate Data de reclamaÃ§Ã£o do terceiro
	ThirdPartyClaimDate *openapi_types.Date `json:"thirdPartyClaimDate,omitempty"`

	// WarningDate Data de aviso do sinistro
	WarningDate openapi_types.Date `json:"warningDate"`
}

// InsuranceAutoClaimDenialJustification Justificativa da Negativa(Caso Status do Sinistro for 'ENCERRADO_SEM_INDENIZACAO')
type InsuranceAutoClaimDenialJustification string

// InsuranceAutoClaimStatus Status do sinistro
type InsuranceAutoClaimStatus string

// InsuranceAutoClaimCoverage defines model for InsuranceAutoClaimCoverage.
type InsuranceAutoClaimCoverage struct {
	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code InsuranceAutoCoverageCode `json:"code"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`

	// InsuredObjectId Identificador do Objeto Segurado (Caso aplicÃ¡vel)
	InsuredObjectId *string `json:"insuredObjectId,omitempty"`

	// ThirdPartyClaimDate Data de ReclamaÃ§Ã£o do Terceiro por Cobertura (Caso aplicÃ¡vel)
	ThirdPartyClaimDate *openapi_types.Date `json:"thirdPartyClaimDate,omitempty"`

	// WarningDate Data de Aviso do Sinistro por Cobertura (Caso aplicÃ¡vel)
	WarningDate *openapi_types.Date `json:"warningDate,omitempty"`
}

// InsuranceAutoCoverage defines model for InsuranceAutoCoverage.
type InsuranceAutoCoverage struct {
	// POS InformaÃ§Ãµes de franquia
	POS *InsuranceAutoPOS `json:"POS,omitempty"`

	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code InsuranceAutoCoverageCode `json:"code"`

	// Deductible InformaÃ§Ãµes de franquia
	Deductible *InsuranceAutoDeductible `json:"deductible,omitempty"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`
}

// InsuranceAutoCoverageCode CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
type InsuranceAutoCoverageCode string

// InsuranceAutoDeductible InformaÃ§Ãµes de franquia
type InsuranceAutoDeductible struct {
	// Amount Detalhes de valores/limites
	Amount *AmountDetails `json:"amount,omitempty"`

	// Description DescriÃ§Ã£o da Franquia (caso aplicÃ¡vel)
	Description *string `json:"description,omitempty"`

	// HasDeductibleOverTotalCompensation Indicador de Franquia sobre indenizaÃ§Ã£o integral (caso aplicÃ¡vel)
	HasDeductibleOverTotalCompensation *bool `json:"hasDeductibleOverTotalCompensation,omitempty"`

	// Period Prazo da Franquia (caso aplicÃ¡vel)
	Period *int `json:"period,omitempty"`

	// PeriodCountingMethod Indicador de Dias Ãšteis ou Corridos (caso aplicÃ¡vel)
	PeriodCountingMethod *InsuranceAutoDeductiblePeriodCountingMethod `json:"periodCountingMethod,omitempty"`

	// PeriodEndDate Data de Fim da Franquia (caso aplicÃ¡vel)
	PeriodEndDate *openapi_types.Date `json:"periodEndDate,omitempty"`

	// PeriodStartDate Data de InÃ­cio da Franquia (caso aplicÃ¡vel)
	PeriodStartDate *openapi_types.Date `json:"periodStartDate,omitempty"`

	// Periodicity Periodicidade da Franquia (caso aplicÃ¡vel)
	Periodicity *InsuranceAutoDeductiblePeriodicity `json:"periodicity,omitempty"`

	// Type Tipo de Franquia
	Type InsuranceAutoDeductibleType `json:"type"`

	// TypeAdditionalInfo DescriÃ§ao do Tipo de Franquia (Caso Tipo de Franquia for "OUTROS")
	TypeAdditionalInfo *string `json:"typeAdditionalInfo,omitempty"`
}

// InsuranceAutoDeductiblePeriodCountingMethod Indicador de Dias Ãšteis ou Corridos (caso aplicÃ¡vel)
type InsuranceAutoDeductiblePeriodCountingMethod string

// InsuranceAutoDeductiblePeriodicity Periodicidade da Franquia (caso aplicÃ¡vel)
type InsuranceAutoDeductiblePeriodicity string

// InsuranceAutoDeductibleType Tipo de Franquia
type InsuranceAutoDeductibleType string

// InsuranceAutoFareCategory Categoria tarifÃ¡ria (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel) - Conforme definido na tabela 9.9 do Manual de  OrientaÃ§Ã£o para Envio de Dados, Circular Susep nÂº 522
type InsuranceAutoFareCategory string

// InsuranceAutoInsuredObject defines model for InsuranceAutoInsuredObject.
type InsuranceAutoInsuredObject struct {
	// AmountReferenceTable Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	AmountReferenceTable *InsuranceAutoInsuredObjectAmountReferenceTable `json:"amountReferenceTable,omitempty"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages []InsuranceAutoInsuredObjectCoverage `json:"coverages"`

	// Description DescriÃ§Ã£o do objeto segurado
	Description string `json:"description"`

	// FareCategory Categoria tarifÃ¡ria (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel) - Conforme definido na tabela 9.9 do Manual de  OrientaÃ§Ã£o para Envio de Dados, Circular Susep nÂº 522
	FareCategory *InsuranceAutoInsuredObjectFareCategory `json:"fareCategory,omitempty"`

	// FrequentDestinationPostCode CEP da localidade de destino frequente do veÃ­culo (caso aplicÃ¡vel)
	FrequentDestinationPostCode *string `json:"frequentDestinationPostCode,omitempty"`

	// HasExactVehicleIdentification IdentificaÃ§Ã£o exata do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	HasExactVehicleIdentification *bool `json:"hasExactVehicleIdentification,omitempty"`

	// Identification Identificador do objeto segurado
	Identification string `json:"identification"`

	// Modality Modalidade de cobertura (para cobertura Casco)
	Modality *InsuranceAutoInsuredObjectModality `json:"modality,omitempty"`

	// Model CÃ³digo do modelo (caso aplicÃ¡vel)
	Model *string `json:"model,omitempty"`

	// OvernightPostCode CEP da localidade de pernoite do veÃ­culo (caso aplicÃ¡vel)
	OvernightPostCode *string `json:"overnightPostCode,omitempty"`

	// RiskPostCode CEP de risco (caso aplicÃ¡vel)
	RiskPostCode *string `json:"riskPostCode,omitempty"`

	// Type Tipo do objeto segurado
	Type InsuranceAutoInsuredObjectType `json:"type"`

	// TypeAdditionalInfo DescriÃ§Ã£o do tipo do objeto segurado(caso tipo de objeto segurado for outros).
	TypeAdditionalInfo *string `json:"typeAdditionalInfo,omitempty"`

	// VehicleUsage CÃ³digo de utilizaÃ§Ã£o do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
	VehicleUsage *InsuranceAutoInsuredObjectVehicleUsage `json:"vehicleUsage,omitempty"`

	// Year Ano do modelo (caso aplicÃ¡vel)
	Year *string `json:"year,omitempty"`
}

// InsuranceAutoInsuredObjectAmountReferenceTable Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
type InsuranceAutoInsuredObjectAmountReferenceTable string

// InsuranceAutoInsuredObjectFareCategory Categoria tarifÃ¡ria (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel) - Conforme definido na tabela 9.9 do Manual de  OrientaÃ§Ã£o para Envio de Dados, Circular Susep nÂº 522
type InsuranceAutoInsuredObjectFareCategory string

// InsuranceAutoInsuredObjectModality Modalidade de cobertura (para cobertura Casco)
type InsuranceAutoInsuredObjectModality string

// InsuranceAutoInsuredObjectType Tipo do objeto segurado
type InsuranceAutoInsuredObjectType string

// InsuranceAutoInsuredObjectVehicleUsage CÃ³digo de utilizaÃ§Ã£o do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
type InsuranceAutoInsuredObjectVehicleUsage string

// InsuranceAutoInsuredObjectCoverage defines model for InsuranceAutoInsuredObjectCoverage.
type InsuranceAutoInsuredObjectCoverage struct {
	// LMI Detalhes de valores/limites
	LMI AmountDetails `json:"LMI"`

	// AdjustmentRate Percentual de ajuste aplicado Ã  tabela de referÃªncia (caso aplicÃ¡vel)
	AdjustmentRate *string `json:"adjustmentRate,omitempty"`

	// BoundCoverage Cobertura vinculada (RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
	BoundCoverage *InsuranceAutoInsuredObjectCoverageBoundCoverage `json:"boundCoverage,omitempty"`

	// Branch Grupo e Ramo da Cobertura (Conforme regulamentaÃ§Ã£o Susep vigente)
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code InsuranceAutoInsuredObjectCoverageCode `json:"code"`

	// CompensationType Tipo de indenizaÃ§Ã£o por cobertura contratada (caso aplicÃ¡vel)
	CompensationType *InsuranceAutoInsuredObjectCoverageCompensationType `json:"compensationType,omitempty"`

	// DaysForTotalCompensation NÃºmero de dias de cobertura para direito Ã  indenizaÃ§Ã£o (caso aplicÃ¡vel)
	DaysForTotalCompensation *int `json:"daysForTotalCompensation,omitempty"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (ObrigatÃ³rio quando o campo 'Codigo' for preenchido com 'Outras')
	Description *string `json:"description,omitempty"`

	// Feature CaracterÃ­stica da cobertura
	Feature InsuranceAutoInsuredObjectCoverageFeature `json:"feature"`

	// GracePeriod PerÃ­odo de carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriod *int `json:"gracePeriod,omitempty"`

	// GracePeriodCountingMethod Indicador de dias Ãºteis ou corridos da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodCountingMethod *InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod `json:"gracePeriodCountingMethod,omitempty"`

	// GracePeriodEndDate Data de fim da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodEndDate *openapi_types.Date `json:"gracePeriodEndDate,omitempty"`

	// GracePeriodStartDate Data de inÃ­cio da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodStartDate *openapi_types.Date `json:"gracePeriodStartDate,omitempty"`

	// GracePeriodicity Periodicidade da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodicity *InsuranceAutoInsuredObjectCoverageGracePeriodicity `json:"gracePeriodicity,omitempty"`

	// InternalCode CÃ³digo interno da cobertura da seguradora(obrigatÃ³rio se houver)
	InternalCode *string `json:"internalCode,omitempty"`

	// IsMainCoverage Cobertura Principal
	IsMainCoverage *bool `json:"isMainCoverage,omitempty"`

	// PartialCompensationPercentage Percentual por indenizaÃ§Ã£o parcial (caso aplicÃ¡vel)
	PartialCompensationPercentage *string `json:"partialCompensationPercentage,omitempty"`

	// PercentageOverLMI Percentual aplicado sobre o limite mÃ¡ximo de indenizaÃ§Ã£o (caso aplicÃ¡vel)
	PercentageOverLMI *string `json:"percentageOverLMI,omitempty"`

	// PremiumAmount Detalhes de valores/limites
	PremiumAmount      AmountDetails `json:"premiumAmount"`
	SusepProcessNumber string        `json:"susepProcessNumber"`

	// TermEndDate Data de fim de vigÃªncia da cobertura
	TermEndDate openapi_types.Date `json:"termEndDate"`

	// TermStartDate Data de inÃ­cio de vigÃªncia da cobertura
	TermStartDate openapi_types.Date `json:"termStartDate"`

	// Type Tipo de cobertura
	Type InsuranceAutoInsuredObjectCoverageType `json:"type"`
}

// InsuranceAutoInsuredObjectCoverageBoundCoverage Cobertura vinculada (RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
type InsuranceAutoInsuredObjectCoverageBoundCoverage string

// InsuranceAutoInsuredObjectCoverageCode CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
type InsuranceAutoInsuredObjectCoverageCode string

// InsuranceAutoInsuredObjectCoverageCompensationType Tipo de indenizaÃ§Ã£o por cobertura contratada (caso aplicÃ¡vel)
type InsuranceAutoInsuredObjectCoverageCompensationType string

// InsuranceAutoInsuredObjectCoverageFeature CaracterÃ­stica da cobertura
type InsuranceAutoInsuredObjectCoverageFeature string

// InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod Indicador de dias Ãºteis ou corridos da carÃªncia. OBS: ObrigatÃ³rio, se houver
type InsuranceAutoInsuredObjectCoverageGracePeriodCountingMethod string

// InsuranceAutoInsuredObjectCoverageGracePeriodicity Periodicidade da carÃªncia. OBS: ObrigatÃ³rio, se houver
type InsuranceAutoInsuredObjectCoverageGracePeriodicity string

// InsuranceAutoInsuredObjectCoverageType Tipo de cobertura
type InsuranceAutoInsuredObjectCoverageType string

// InsuranceAutoObjectAmountReferenceTable Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
type InsuranceAutoObjectAmountReferenceTable string

// InsuranceAutoObjectModality Modalidade de cobertura (para cobertura Casco)
type InsuranceAutoObjectModality string

// InsuranceAutoObjectType Tipo do objeto segurado
type InsuranceAutoObjectType string

// InsuranceAutoOccurenceCause Causa do Sinistro (Caso aplicÃ¡vel)
type InsuranceAutoOccurenceCause string

// InsuranceAutoPOS InformaÃ§Ãµes de franquia
type InsuranceAutoPOS struct {
	// ApplicationType Forma de AplicaÃ§Ã£o do POS
	ApplicationType InsuranceAutoPOSApplicationType `json:"applicationType"`

	// Description DescriÃ§Ã£o do POS (caso Forma de aplicaÃ§Ã£o do POS for Outros)
	Description *string `json:"description,omitempty"`

	// MaxValue Detalhes de valores/limites
	MaxValue *AmountDetails `json:"maxValue,omitempty"`

	// MinValue Detalhes de valores/limites
	MinValue *AmountDetails `json:"minValue,omitempty"`

	// Percentage Percentual do POS
	Percentage *string `json:"percentage,omitempty"`
}

// InsuranceAutoPOSApplicationType Forma de AplicaÃ§Ã£o do POS
type InsuranceAutoPOSApplicationType string

// InsuranceAutoPolicyData defines model for InsuranceAutoPolicyData.
type InsuranceAutoPolicyData struct {
	Claim      *InsuranceAutoClaim      `json:"claim,omitempty"`
	PolicyInfo *InsuranceAutoPolicyInfo `json:"policyInfo,omitempty"`

	// Premium Objeto que agrupa dados de prÃªmio.
	Premium *InsuranceAutoPremium `json:"premium,omitempty"`
}

// InsuranceAutoPolicyInfo defines model for InsuranceAutoPolicyInfo.
type InsuranceAutoPolicyInfo struct {
	// AssistancePackages Pacotes de AssistÃªncia (Caso aplicÃ¡vel)
	AssistancePackages *InsuranceAutoPolicyInfoAssistancePackages `json:"assistancePackages,omitempty"`

	// Beneficiaries Lista que agrupa os dados dos beneficiÃ¡rios.
	Beneficiaries *[]BeneficiaryInfo `json:"beneficiaries,omitempty"`

	// BonusClass Classe de bÃ´nus (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
	BonusClass *string `json:"bonusClass,omitempty"`

	// BonusDiscountRate Percentual de desconto por bÃ´nus (Casco, RCF-A, APP, AssistÃªncia; caso aplicÃ¡vel)
	BonusDiscountRate *string `json:"bonusDiscountRate,omitempty"`

	// CoinsuranceRetainedPercentage Percentual Retido em Cosseguro (Quando hÃ¡ cosseguro)
	CoinsuranceRetainedPercentage *string `json:"coinsuranceRetainedPercentage,omitempty"`

	// Coinsurers Lista que agrupa os dados dos cosseguros.
	Coinsurers *[]Coinsurer `json:"coinsurers,omitempty"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages *[]InsuranceAutoCoverage `json:"coverages,omitempty"`

	// DocumentType Tipo de Documento Emitido
	DocumentType InsuranceAutoPolicyInfoDocumentType `json:"documentType"`
	Drivers      *[]Driver                           `json:"drivers,omitempty"`

	// GroupCertificateId Identificador do Certificado(Caso Tipo de Documento Emitido for certificado)
	GroupCertificateId *string `json:"groupCertificateId,omitempty"`

	// InsuredObjects Lista que agrupa os dados de objetos segurados.
	InsuredObjects []InsuranceAutoInsuredObject `json:"insuredObjects"`

	// Insureds Lista que agrupa os dados dos segurados.
	Insureds []PersonalInfo `json:"insureds"`

	// Intermediaries Lista que agrupa os dados de intermediÃ¡rios.
	Intermediaries *[]Intermediary `json:"intermediaries,omitempty"`

	// IsExpiredRiskPolicy ApÃ³lice de Risco Decorrido (Caso aplicÃ¡vel)
	IsExpiredRiskPolicy *bool `json:"isExpiredRiskPolicy,omitempty"`

	// IssuanceDate Data de emissÃ£o do documento
	IssuanceDate openapi_types.Date `json:"issuanceDate"`

	// IssuanceType Tipo de EmissÃ£o
	IssuanceType InsuranceAutoPolicyInfoIssuanceType `json:"issuanceType"`

	// LeadInsurerCode CÃ³digo da seguradora lÃ­der para contratos com arranjo de cosseguro
	LeadInsurerCode *string `json:"leadInsurerCode,omitempty"`

	// LeadInsurerPolicyId Identificador da apÃ³lice seguradora lÃ­der para apÃ³lice de cosseguro aceito
	LeadInsurerPolicyId *string `json:"leadInsurerPolicyId,omitempty"`

	// MaxLMG Detalhes de valores/limites
	MaxLMG AmountDetails `json:"maxLMG"`

	// OtherBenefits BenefÃ­cios Adicionais (Caso aplicÃ¡vel)
	OtherBenefits *InsuranceAutoPolicyInfoOtherBenefits `json:"otherBenefits,omitempty"`

	// OtherCompensations Outras formas de recompensa (Caso aplicÃ¡vel)
	OtherCompensations *string `json:"otherCompensations,omitempty"`

	// PolicyId Identificador da apÃ³lice ou bilhete
	PolicyId string `json:"policyId"`

	// Principals Lista que agrupa os dados dos tomadores/garantidos.
	Principals *[]PersonalInfo `json:"principals,omitempty"`

	// ProposalId Identificador da Proposta
	ProposalId string `json:"proposalId"`

	// RepairNetwork Rede de reparaÃ§Ã£o dos veÃ­culos
	RepairNetwork InsuranceAutoPolicyInfoRepairNetwork `json:"repairNetwork"`

	// RepairedPartsClassification ClassificaÃ§Ã£o das peÃ§as passÃ­veis de uso em reparos (Casco)
	RepairedPartsClassification InsuranceAutoPolicyInfoRepairedPartsClassification `json:"repairedPartsClassification"`

	// RepairedPartsNationality Nacionalidade das peÃ§as passÃ­veis de uso em reparos (Casco)
	RepairedPartsNationality InsuranceAutoPolicyInfoRepairedPartsNationality `json:"repairedPartsNationality"`

	// RepairedPartsUsageType Tipos de peÃ§as passÃ­veis de uso em reparos (Casco)
	RepairedPartsUsageType InsuranceAutoPolicyInfoRepairedPartsUsageType `json:"repairedPartsUsageType"`

	// SusepProcessNumber NÃºmero SUSEP da apÃ³lice, conforme regulamentaÃ§Ã£o vigente (ObrigatÃ³rio caso apÃ³lice com coberturas do ramo Garantia)
	SusepProcessNumber *string `json:"susepProcessNumber,omitempty"`

	// TermEndDate Data de fim de vigÃªncia do documento
	TermEndDate openapi_types.Date `json:"termEndDate"`

	// TermStartDate Data de inÃ­cio de vigÃªncia do documento
	TermStartDate openapi_types.Date `json:"termStartDate"`

	// ValidityType Tipo de vigÃªncia (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	ValidityType InsuranceAutoPolicyInfoValidityType `json:"validityType"`
}

// InsuranceAutoPolicyInfoAssistancePackages Pacotes de AssistÃªncia (Caso aplicÃ¡vel)
type InsuranceAutoPolicyInfoAssistancePackages string

// InsuranceAutoPolicyInfoDocumentType Tipo de Documento Emitido
type InsuranceAutoPolicyInfoDocumentType string

// InsuranceAutoPolicyInfoIssuanceType Tipo de EmissÃ£o
type InsuranceAutoPolicyInfoIssuanceType string

// InsuranceAutoPolicyInfoOtherBenefits BenefÃ­cios Adicionais (Caso aplicÃ¡vel)
type InsuranceAutoPolicyInfoOtherBenefits string

// InsuranceAutoPolicyInfoRepairNetwork Rede de reparaÃ§Ã£o dos veÃ­culos
type InsuranceAutoPolicyInfoRepairNetwork string

// InsuranceAutoPolicyInfoRepairedPartsClassification ClassificaÃ§Ã£o das peÃ§as passÃ­veis de uso em reparos (Casco)
type InsuranceAutoPolicyInfoRepairedPartsClassification string

// InsuranceAutoPolicyInfoRepairedPartsNationality Nacionalidade das peÃ§as passÃ­veis de uso em reparos (Casco)
type InsuranceAutoPolicyInfoRepairedPartsNationality string

// InsuranceAutoPolicyInfoRepairedPartsUsageType Tipos de peÃ§as passÃ­veis de uso em reparos (Casco)
type InsuranceAutoPolicyInfoRepairedPartsUsageType string

// InsuranceAutoPolicyInfoValidityType Tipo de vigÃªncia (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
type InsuranceAutoPolicyInfoValidityType string

// InsuranceAutoPremium Objeto que agrupa dados de prÃªmio.
type InsuranceAutoPremium struct {
	// Amount Detalhes de valores/limites
	Amount AmountDetails `json:"amount"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages []InsuranceAutoPremiumCoverage `json:"coverages"`
	Payments  []Payment                      `json:"payments"`

	// PaymentsQuantity Quantidade de parcelas do prÃªmio do contrato
	PaymentsQuantity float32 `json:"paymentsQuantity"`
}

// InsuranceAutoPremiumCoverage defines model for InsuranceAutoPremiumCoverage.
type InsuranceAutoPremiumCoverage struct {
	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code InsuranceAutoCoverageCode `json:"code"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`

	// PremiumAmount Detalhes de valores/limites
	PremiumAmount AmountDetails `json:"premiumAmount"`
}

// InsuranceAutoSpecificClaim InformaÃ§Ãµes do Anexo EspecÃ­fico
type InsuranceAutoSpecificClaim struct {
	// CovenantNumber NÃºmero do convÃªnio (Caso Responsabilidade Civil - Carta Verde)
	CovenantNumber *string `json:"covenantNumber,omitempty"`

	// DriverAtOccurrenceBirthDate Data de nascimento do condutor do veÃ­culo no momento do sinistro (Caso aplicÃ¡vel)
	DriverAtOccurrenceBirthDate *openapi_types.Date `json:"driverAtOccurrenceBirthDate,omitempty"`

	// DriverAtOccurrenceSex Sexo do condutor do veÃ­culo no momento do sinistro (Caso aplicÃ¡vel)
	DriverAtOccurrenceSex *InsuranceAutoSpecificClaimDriverAtOccurrenceSex `json:"driverAtOccurrenceSex,omitempty"`

	// OccurrenceCause Causa do Sinistro (Caso aplicÃ¡vel)
	OccurrenceCause *InsuranceAutoSpecificClaimOccurrenceCause `json:"occurrenceCause,omitempty"`

	// OccurrenceCountry PaÃ­s de ocorrÃªncia do sinistro (Caso Responsabilidade Civil - Carta Verde)
	OccurrenceCountry *string `json:"occurrenceCountry,omitempty"`

	// OccurrencePostCode CEP da localidade de ocorrÃªncia do sinistro (Caso aplicÃ¡vel)
	OccurrencePostCode *string `json:"occurrencePostCode,omitempty"`
}

// InsuranceAutoSpecificClaimDriverAtOccurrenceSex Sexo do condutor do veÃ­culo no momento do sinistro (Caso aplicÃ¡vel)
type InsuranceAutoSpecificClaimDriverAtOccurrenceSex string

// InsuranceAutoSpecificClaimOccurrenceCause Causa do Sinistro (Caso aplicÃ¡vel)
type InsuranceAutoSpecificClaimOccurrenceCause string

// InsuranceCompensationType Tipo de indenizaÃ§Ã£o por cobertura contratada (caso aplicÃ¡vel)
type InsuranceCompensationType string

// InsuranceCoverageFeatureType CaracterÃ­stica da cobertura
type InsuranceCoverageFeatureType string

// InsuranceCoverageType Tipo de cobertura
type InsuranceCoverageType string

// Intermediary defines model for Intermediary.
type Intermediary struct {
	// Address EndereÃ§o da Intermediador (restante do do endereÃ§o, excluindo cidade, estado e paÃ­s; Caso Tipo de Intermediador for ESTIPULANTE)
	Address *string `json:"address,omitempty"`

	// BrokerId Identificador do intermediador da apÃ³lice - cÃ³digo Susep do corretor(a) (Caso Tipo de Intermediador for CORRETOR)
	BrokerId *string `json:"brokerId,omitempty"`

	// City Cidade da Intermediador (por extenso; Caso Tipo de Intermediador for ESTIPULANTE)
	City *string `json:"city,omitempty"`

	// Country PaÃ­s da Intermediador (de acordo com o cÃ³digo "alpha3" do ISO-3166; Caso Tipo de Intermediador for ESTIPULANTE)
	Country *string `json:"country,omitempty"`

	// Identification Documento de IdentificaÃ§Ã£o do Intermediador(a) (Caso Tipo de Intermediador nÃ£o seja CORRETOR ou quando for CORRETOR, porÃ©m o identificador do intermediador nÃ£o seja informado)
	Identification *string `json:"identification,omitempty"`

	// IdentificationType Tipo de Documento do Intermediador(a) (Caso Tipo de Intermediador nÃ£o seja CORRETOR ou quando for CORRETOR, porÃ©m o identificador do intermediador nÃ£o seja informado)
	IdentificationType *IdentificationType `json:"identificationType,omitempty"`

	// Name Nome ou RazÃ£o Social da Intermediador
	Name string `json:"name"`

	// PostCode CÃ³digo Postal da Intermediador (Caso Tipo de Intermediador for ESTIPULANTE)
	PostCode *string `json:"postCode,omitempty"`

	// State Estado da Intermediador (por extenso; Caso Tipo de Intermediador for ESTIPULANTE)
	State *string `json:"state,omitempty"`

	// Type Tipo do Intermediador
	Type *IntermediaryType `json:"type,omitempty"`
}

// IntermediaryType Tipo do Intermediador
type IntermediaryType string

// LifePensionPlanApplicability Condição de proponente qualificado, aplicável à contratação de planos de previdência e vida por sobrevivência
type LifePensionPlanApplicability string

// Links defines model for Links.
type Links struct {
	First *string `json:"first,omitempty"`
	Last  *string `json:"last,omitempty"`
	Next  *string `json:"next,omitempty"`
	Prev  *string `json:"prev,omitempty"`
	Self  string  `json:"self"`
}

// LoggedUser defines model for LoggedUser.
type LoggedUser struct {
	Document struct {
		Identification string `json:"identification"`
		Rel            string `json:"rel"`
	} `json:"document"`
}

// Meta defines model for Meta.
type Meta struct {
	TotalPages   int32 `json:"totalPages"`
	TotalRecords int32 `json:"totalRecords"`
}

// Ocupation Objeto agrupador de informações relativas ocupação da pessoa natural
type Ocupation struct {
	// Details Ocupação
	Details *string `json:"details,omitempty"`

	// OccupationCode Código da ocupação
	OccupationCode *string `json:"occupationCode,omitempty"`

	// OccupationCodeType Tipo de código da ocupação
	OccupationCodeType *OcupationCodeType `json:"occupationCodeType,omitempty"`

	// OccupationCodeTypeOthers Descricao do tipo de codigo da ocupacao quando for informada a opcao OUTROS
	OccupationCodeTypeOthers *string `json:"occupationCodeTypeOthers,omitempty"`
}

// OcupationCodeType Tipo de código da ocupação
type OcupationCodeType string

// OtherPersonalDocuments defines model for OtherPersonalDocuments.
type OtherPersonalDocuments struct {
	// Country País do(s) documento(s) estrangeiro(s) de identificação.
	Country *string `json:"country,omitempty"`

	// ExpirationDate Data de vigência do documento de registro - conforme especificação RFC-3339.
	ExpirationDate *openapi_types.Date `json:"expirationDate,omitempty"`

	// Number Numero/codigo do(s) documento(s) de identificacao. Obrigatorio desde que a participante possua a informacao
	Number *string `json:"number,omitempty"`

	// Type Tipo do(s) documento(s) estrangeiro(s) de identificação
	Type *string `json:"type,omitempty"`
}

// POS defines model for POS.
type POS struct {
	// ApplicationType Forma de AplicaÃ§Ã£o do POS
	ApplicationType POSApplicationType `json:"applicationType"`

	// Description DescriÃ§Ã£o do POS
	Description string `json:"description"`

	// MaxValue Detalhes de valores/limites
	MaxValue *AmountDetails `json:"maxValue,omitempty"`

	// MinValue Detalhes de valores/limites
	MinValue *AmountDetails `json:"minValue,omitempty"`

	// Percentage Percentual do POS
	Percentage *float32 `json:"percentage,omitempty"`
}

// POSApplicationType Forma de AplicaÃ§Ã£o do POS
type POSApplicationType string

// PatchQuoteRequest defines model for PatchQuoteRequest.
type PatchQuoteRequest struct {
	Data struct {
		Author struct {
			// IdentificationNumber NÃºmero de identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
			IdentificationNumber string `json:"identificationNumber"`

			// IdentificationType Tipo identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
			IdentificationType PatchQuoteRequestDataAuthorIdentificationType `json:"identificationType"`
		} `json:"author"`

		// InsurerQuoteId Id da proposta da segurada
		// Esse ID Ã© utilizado em jornadas de cotaÃ§Ã£o completa/firme e leva o nÃºmero identificador da proposta aceita (ACKN) pelo cliente.
		// Condicional ao status de ACKN.
		InsurerQuoteId *string `json:"insurerQuoteId,omitempty"`

		// Status Status da cotaÃ§Ã£o.
		Status PatchQuoteRequestDataStatus `json:"status"`
	} `json:"data"`
}

// PatchQuoteRequestDataAuthorIdentificationType Tipo identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
type PatchQuoteRequestDataAuthorIdentificationType string

// PatchQuoteRequestDataStatus Status da cotaÃ§Ã£o.
type PatchQuoteRequestDataStatus string

// PatchQuoteResponse defines model for PatchQuoteResponse.
type PatchQuoteResponse struct {
	// Data Objeto contendo informaÃ§Ãµes da atualizaÃ§Ã£o.
	Data struct {
		// InsurerQuoteId Id da proposta da segurada
		// Esse ID Ã© utilizado em jornadas de cotaÃ§Ã£o completa/firme e leva o nÃºmero identificador da proposta aceita (ACKN) pelo cliente.
		// Condicional ao status de ACKN.
		InsurerQuoteId *string        `json:"insurerQuoteId,omitempty"`
		Links          *RedirectLinks `json:"links,omitempty"`

		// ProtocolDateTime Data e hora do protocolamento da cotaÃ§Ã£o, conforme especificaÃ§Ã£o RFC-3339, formato UTC. Condicional ao status de ACKN.
		ProtocolDateTime *DateTime `json:"protocolDateTime,omitempty"`

		// ProtocolNumber Protocolo referente a cotaÃ§Ã£o aceita. Condicional ao status de ACKN.
		ProtocolNumber *string `json:"protocolNumber,omitempty"`

		// Status Status da cotaÃ§Ã£o.
		Status PatchQuoteResponseDataStatus `json:"status"`
	} `json:"data"`
}

// PatchQuoteResponseDataStatus Status da cotaÃ§Ã£o.
type PatchQuoteResponseDataStatus string

// Payment defines model for Payment.
type Payment struct {
	// Amount Detalhes de valores/limites
	Amount AmountDetails `json:"amount"`

	// FinancialInstitutionCode CÃ³digo da InstituiÃ§Ã£o Financeiro do Pagamento Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	FinancialInstitutionCode *string `json:"financialInstitutionCode,omitempty"`

	// MaturityDate Data de Vencimento da Parcela
	MaturityDate openapi_types.Date `json:"maturityDate"`

	// MovementDate Data do movimento de prÃªmio
	MovementDate openapi_types.Date `json:"movementDate"`

	// MovementOrigin Origem do Movimento. Obs: ObrigatÃ³rio caso Tipo de Movimento for LIQUIDACAO_DE_PREMIO e ESTORNO_DE_PREMIO
	MovementOrigin *PaymentMovementOrigin `json:"movementOrigin,omitempty"`

	// MovementPaymentsNumber Identificador da parcela do movimento
	MovementPaymentsNumber float32 `json:"movementPaymentsNumber"`

	// MovementType Tipo do Movimento
	MovementType PaymentMovementType `json:"movementType"`

	// PaymentType Meio de Pagamento Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	PaymentType *PaymentPaymentType `json:"paymentType,omitempty"`

	// TellerId Documento do Pagador/Recebedor Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	TellerId *string `json:"tellerId,omitempty"`

	// TellerIdType Tipo do Documento do Pagador/Recebedor Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	TellerIdType *PaymentTellerIdType `json:"tellerIdType,omitempty"`

	// TellerName Nome ou RazÃ£o Social do Pagador/Recebedor Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	TellerName *string `json:"tellerName,omitempty"`
}

// PaymentMovementOrigin Origem do Movimento. Obs: ObrigatÃ³rio caso Tipo de Movimento for LIQUIDACAO_DE_PREMIO e ESTORNO_DE_PREMIO
type PaymentMovementOrigin string

// PaymentMovementType Tipo do Movimento
type PaymentMovementType string

// PaymentPaymentType Meio de Pagamento Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
type PaymentPaymentType string

// PaymentTellerIdType Tipo do Documento do Pagador/Recebedor Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
type PaymentTellerIdType string

// PercentageDetails defines model for PercentageDetails.
type PercentageDetails = float32

// PersonalComplimentaryInfoData Objeto que reúne as informações relativas ao relacionamento do cliente junto à Instituição. Considera-se relacionamento as informações que permitam conhecer desde quando a pessoa consultada é cliente da instituição, bem como um indicador dos produtos e serviços que ela consome atualmente e seus representantes
type PersonalComplimentaryInfoData struct {
	ProductsServices []ProductService `json:"productsServices"`

	// RelationshipBeginning Campo deve ser preenchido com a data da apólice/contrato vigente mais antiga (caso haja contrato vigente)
	RelationshipBeginning *openapi_types.Date `json:"relationshipBeginning,omitempty"`

	// StartDate Data mais antiga de inicio de relacionamento, considerando todos os contratos (vigentes e nao vigentes). Os contratos nao vigentes considerados devem contemplar, no minimo o periodo indicado na Tabela 22.
	StartDate openapi_types.Date `json:"startDate"`

	// UpdateDateTime Data e hora da atualização do bloco de Relacionamento, conforme especificação RFC-3339, formato UTC.
	UpdateDateTime DateTime `json:"updateDateTime"`
}

// PersonalContact Conjunto de informações referentes às formas para contatar o cliente.
type PersonalContact struct {
	// Emails Lista e-mails de contato
	Emails *[]CustomerEmail `json:"emails,omitempty"`

	// Phones Lista com telefones de contato da pessoa natural
	Phones *[]CustomerPhone `json:"phones,omitempty"`

	// PostalAddresses Lista de endereços da pessoa natural
	PostalAddresses []PersonalPostalAddress `json:"postalAddresses"`
}

// PersonalDocumentType Tipo do(s) documento(s) de identificação.
type PersonalDocumentType string

// PersonalDocuments defines model for PersonalDocuments.
type PersonalDocuments = []struct {
	DocumentTypeOthers *string `json:"documentTypeOthers,omitempty"`

	// ExpirationDate Data de validade do(s) documento(s) de identificação - Se aplicável.
	ExpirationDate *openapi_types.Date `json:"expirationDate,omitempty"`

	// IssueLocation Local de emissão - Se aplicável.
	IssueLocation *string `json:"issueLocation,omitempty"`
	Number        *string `json:"number,omitempty"`

	// Type Tipo do(s) documento(s) de identificação.
	Type *PersonalDocumentType `json:"type,omitempty"`
}

// PersonalIdentificationData defines model for PersonalIdentificationData.
type PersonalIdentificationData struct {
	BirthDate             *openapi_types.Date `json:"birthDate,omitempty"`
	BrandName             string              `json:"brandName"`
	CivilName             string              `json:"civilName"`
	CivilStatusCode       *CivilStatusCode    `json:"civilStatusCode,omitempty"`
	CivilStatusCodeOthers *string             `json:"civilStatusCodeOthers,omitempty"`
	CompanyInfo           CompanyInfo         `json:"companyInfo"`

	// Contact Conjunto de informações referentes às formas para contatar o cliente.
	Contact   PersonalContact    `json:"contact"`
	CpfNumber string             `json:"cpfNumber"`
	Documents *PersonalDocuments `json:"documents,omitempty"`

	// Filiation Tipo de filiação.
	Filiation               *FiliationType `json:"filiation,omitempty"`
	HasBrazilianNationality *bool          `json:"hasBrazilianNationality"`

	// IdentificationDetails Informações referente ao cônjuge.
	IdentificationDetails  *IdentificationDetails  `json:"identificationDetails,omitempty"`
	OtherDocuments         *OtherPersonalDocuments `json:"otherDocuments,omitempty"`
	OtherNationalitiesInfo *string                 `json:"otherNationalitiesInfo,omitempty"`
	PersonalId             *string                 `json:"personalId,omitempty"`
	Sex                    *string                 `json:"sex,omitempty"`
	SocialName             *string                 `json:"socialName,omitempty"`
	UpdateDateTime         DateTime                `json:"updateDateTime"`
}

// PersonalInfo defines model for PersonalInfo.
type PersonalInfo struct {
	// Address EndereÃ§o da Pessoa (restante do endereÃ§o, excluindo cidade, estado e paÃ­s)
	Address string `json:"address"`

	// City Cidade da Pessoa (por extenso)
	City string `json:"city"`

	// Country PaÃ­s da Pessoa (de acordo com o cÃ³digo "alpha3" do ISO-3166)
	Country string `json:"country"`

	// Email E-mail da Pessoa (caso possua)
	Email *string `json:"email,omitempty"`

	// Identification Documento de IdentificaÃ§Ã£o da Pessoa
	Identification string `json:"identification"`

	// IdentificationType Tipo de Documento do Intermediador(a) (Caso Tipo de Intermediador nÃ£o seja CORRETOR ou quando for CORRETOR, porÃ©m o identificador do intermediador nÃ£o seja informado)
	IdentificationType IdentificationType `json:"identificationType"`

	// Name Nome ou RazÃ£o Social da Pessoa
	Name string `json:"name"`

	// PostCode CÃ³digo Postal da Pessoa
	PostCode string `json:"postCode"`

	// State Estado da Pessoa (por extenso)
	State string `json:"state"`
}

// PersonalPostalAddress defines model for PersonalPostalAddress.
type PersonalPostalAddress struct {
	// AdditionalInfo Alguns logradouros ainda necessitam ser especificados por meio de complemento.
	AdditionalInfo *string `json:"additionalInfo,omitempty"`
	Address        string  `json:"address"`

	// Country Código do pais de acordo com o código “alpha3” do ISO-3166.
	Country string `json:"country"`

	// CountrySubDivision Enumeração referente a cada sigla da unidade da federação que identifica o estado ou o distrito federal, no qual o endereço está localizado. p.ex. 'AC'. São consideradas apenas as siglas para os estados brasileiros
	CountrySubDivision CountrySubDivision `json:"countrySubDivision"`

	// DistrictName Bairro é uma comunidade ou região localizada em uma cidade ou município de acordo com as suas subdivisões geográficas.
	DistrictName *string `json:"districtName,omitempty"`

	// PostCode Código de Endereçamento Postal: Composto por um conjunto numérico de oito dígitos, o objetivo principal do CEP é orientar e acelerar o encaminhamento, o tratamento e a entrega de objetos postados nos Correios, por meio da sua atribuição a localidades, logradouros, unidades dos Correios, serviços, órgãos públicos, empresas e edifícios. p.ex. '01311000'.
	PostCode string `json:"postCode"`

	// TownName Localidade: O nome da localidade corresponde à designação da cidade ou município no qual o endereço está localizado.
	TownName string `json:"townName"`
}

// PersonalProcurator defines model for PersonalProcurator.
type PersonalProcurator struct {
	// CivilName (Caso Natureza dos poderes vigentes de representante for “Representante legal” ou “Procurador”) Nome ou razão social do representante
	CivilName *string `json:"civilName,omitempty"`

	// CpfNumber (Caso Natureza dos poderes vigentes de representante for “Representante legal” ou “Procurador”) CPF do representante
	CpfNumber *string `json:"cpfNumber,omitempty"`

	// Nature Natureza dos poderes vigentes de representante
	Nature ProcuratorsNaturePersonal `json:"nature"`

	// SocialName (Caso Natureza dos poderes vigentes de representante for “Representante legal” ou “Procurador”) Nome social do representante
	SocialName *string `json:"socialName,omitempty"`
}

// PersonalQualificationData defines model for PersonalQualificationData.
type PersonalQualificationData struct {
	InformedPatrimony *InformedPatrimony `json:"informedPatrimony,omitempty"`
	InformedRevenue   *InformedRevenue   `json:"informedRevenue,omitempty"`

	// LifePensionPlans Condição de proponente qualificado, aplicável à contratação de planos de previdência e vida por sobrevivência
	LifePensionPlans  LifePensionPlanApplicability `json:"lifePensionPlans"`
	Occupation        *[]Ocupation                 `json:"occupation,omitempty"`
	PepIdentification PoliticalExposure            `json:"pepIdentification"`
	UpdateDateTime    DateTime                     `json:"updateDateTime"`
}

// PolicyDataAuto Lista que agrupa os dados das apÃ³lices histÃ³ricos em categorias.
type PolicyDataAuto = []struct {
	Claim      *InsuranceAutoClaim      `json:"claim,omitempty"`
	PolicyInfo *InsuranceAutoPolicyInfo `json:"policyInfo,omitempty"`

	// Premium Objeto que agrupa dados de prÃªmio.
	Premium *InsuranceAutoPremium `json:"premium,omitempty"`
}

// PolicyDocumentType Tipo de Documento Emitido
type PolicyDocumentType string

// PoliticalExposure defines model for PoliticalExposure.
type PoliticalExposure string

// ProcuratorsNatureBusiness Natureza dos poderes vigentes de representante
type ProcuratorsNatureBusiness string

// ProcuratorsNaturePersonal Natureza dos poderes vigentes de representante
type ProcuratorsNaturePersonal string

// ProductService Lista de todos os contratos vigentes e não vigentes.
type ProductService struct {
	// Contract Lista de todos os numeros dos contratos vigentes e nao vigentes. Os contratos nao vigentes considerados devem contemplar, no minimo o periodo indicado na Tabela 22.
	Contract string `json:"contract"`

	// InsuranceLineCode Indicar para cada contrato, caso aplicável, o código do ramo, conforme listagem de códigos definida em regulamentação específica sobre contabilização em ramos. Obs - Caso tipo de produto do contrato for “Seguros de Danos”
	InsuranceLineCode *string `json:"insuranceLineCode,omitempty"`

	// Procurators Lista dos representantes. De preenchimento obrigatório se houver representante.
	Procurators *[]PersonalProcurator `json:"procurators,omitempty"`

	// Type Tipos de produtos.
	Type ProductServiceType `json:"type"`
}

// ProductServiceType Tipos de produtos.
type ProductServiceType string

// QuoteAutoBeneficiary defines model for QuoteAutoBeneficiary.
type QuoteAutoBeneficiary struct {
	// HousingVehiclesNumber Nï¿½mero de veï¿½culos na residï¿½ncia
	HousingVehiclesNumber *float32 `json:"housingVehiclesNumber,omitempty"`

	// Identification Documento de Identificaï¿½ï¿½o do Beneficiï¿½rio
	Identification *string `json:"identification,omitempty"`

	// IdentificationType Tipo de Documento do Beneficiï¿½rio
	IdentificationType *QuoteAutoBeneficiaryIdentificationType `json:"identificationType,omitempty"`

	// IsInsuredTheMainDriver O Segurado ï¿½ o Condutor Principal?
	IsInsuredTheMainDriver *bool `json:"isInsuredTheMainDriver,omitempty"`

	// IsInsuredTheOwner O Segurado ï¿½ o proprietï¿½rio?
	IsInsuredTheOwner *bool `json:"isInsuredTheOwner,omitempty"`

	// IsUndeterminedDriver Condutor Indeterminado
	IsUndeterminedDriver *bool `json:"isUndeterminedDriver,omitempty"`
	MainDriver           *struct {
		// BirthDate Data de nascimento  do Condutor Principal
		BirthDate *openapi_types.Date `json:"birthDate,omitempty"`

		// CivilStatus Estado civil do Condutor Principal
		CivilStatus *QuoteAutoBeneficiaryMainDriverCivilStatus `json:"civilStatus,omitempty"`

		// Gender Sexo do Condutor Principal
		Gender *QuoteAutoBeneficiaryMainDriverGender `json:"gender,omitempty"`

		// Identification Documento de Identificaï¿½ï¿½o do Beneficiï¿½rio
		Identification *string `json:"identification,omitempty"`

		// IdentificationType Tipo de Documento do Beneficiï¿½rio
		IdentificationType *QuoteAutoBeneficiaryMainDriverIdentificationType `json:"identificationType,omitempty"`

		// LicensedExperience Tempo de habilitaÃ§Ã£o do condutor utilizado para taxaÃ§Ã£o (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
		LicensedExperience *string `json:"licensedExperience,omitempty"`

		// Name Nome do Condutor Principal
		Name *string `json:"name,omitempty"`

		// PostCode CEP do Condutor Principal
		PostCode *string `json:"postCode,omitempty"`

		// Profession Profissï¿½o do Condutor Principal
		Profession *string `json:"profession,omitempty"`
	} `json:"mainDriver,omitempty"`

	// RelationshipMainDriver Qual a relaÃ§Ã£o do Condutor Principal com o Segurado?
	RelationshipMainDriver *QuoteAutoBeneficiaryRelationshipMainDriver `json:"relationshipMainDriver,omitempty"`
}

// QuoteAutoBeneficiaryIdentificationType Tipo de Documento do Beneficiï¿½rio
type QuoteAutoBeneficiaryIdentificationType string

// QuoteAutoBeneficiaryMainDriverCivilStatus Estado civil do Condutor Principal
type QuoteAutoBeneficiaryMainDriverCivilStatus string

// QuoteAutoBeneficiaryMainDriverGender Sexo do Condutor Principal
type QuoteAutoBeneficiaryMainDriverGender string

// QuoteAutoBeneficiaryMainDriverIdentificationType Tipo de Documento do Beneficiï¿½rio
type QuoteAutoBeneficiaryMainDriverIdentificationType string

// QuoteAutoBeneficiaryRelationshipMainDriver Qual a relaÃ§Ã£o do Condutor Principal com o Segurado?
type QuoteAutoBeneficiaryRelationshipMainDriver string

// QuoteAutoCoverage defines model for QuoteAutoCoverage.
type QuoteAutoCoverage struct {
	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code InsuranceAutoCoverageCode `json:"code"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`

	// InternalCode CÃ³digo interno da cobertura da seguradora
	InternalCode *string `json:"internalCode,omitempty"`

	// IsSeparateContractingAllowed PermissÃ£o para ContrataÃ§Ã£o Separada
	IsSeparateContractingAllowed bool `json:"isSeparateContractingAllowed"`

	// MaxLMI Detalhes de valores/limites
	MaxLMI AmountDetails `json:"maxLMI"`
}

// QuoteAutoData defines model for QuoteAutoData.
type QuoteAutoData struct {
	// ConsentId O consentId Ã© o identificador Ãºnico do consentimento e deverÃ¡ ser um URN - Uniform Resource Name.
	// Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) Ã© um Uniform Resource
	// Identifier - URI - que Ã© atribuÃ­do sob o URI scheme "urn" e um namespace URN especÃ­fico, com a intenÃ§Ã£o de que o URN
	// seja um identificador de recurso persistente e independente da localizaÃ§Ã£o.
	// Considerando a string urn:initiator:C1DD93123 como exemplo para consentId temos:
	// - o namespace(urn)
	// - o identificador associado ao namespace da instituiÃ§Ã£o transnmissora (initiator)
	// - o identificador especÃ­fico dentro do namespace (C1DD93123).
	// InformaÃ§Ãµes mais detalhadas sobre a construÃ§Ã£o de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
	ConsentId string `json:"consentId"`

	// ExpirationDateTime Data e hora de expiraÃ§Ã£o da permissÃ£o. De preenchimento obrigatÃ³rio, reflete a data limite de validade do consentimento. Uma string com data e hora conforme especificaÃ§Ã£o RFC-3339, sempre com a utilizaÃ§Ã£o de timezone UTC(UTC time format).
	ExpirationDateTime DateTime `json:"expirationDateTime"`

	// HistoricalData Objeto que agrupa todos dados histÃ³ricos do cliente.
	HistoricalData *struct {
		Customer *QuoteCustomerData `json:"customer,omitempty"`

		// Policies Lista que agrupa os dados das apÃ³lices histÃ³ricos em categorias.
		Policies *PolicyDataAuto `json:"policies,omitempty"`
	} `json:"historicalData,omitempty"`

	// QuoteCustomData Objeto que agrupa as categorias de dados customizÃ¡veis em listas.
	QuoteCustomData *QuoteCustomData  `json:"quoteCustomData,omitempty"`
	QuoteCustomer   QuoteCustomerData `json:"quoteCustomer"`

	// QuoteData Objeto que agrupa dados especÃ­ficos do ramo de cotaÃ§Ã£o.
	QuoteData QuoteDataAuto `json:"quoteData"`
}

// QuoteAutoInsuredObject Objeto que agrupa os dados de objeto segurado.
type QuoteAutoInsuredObject struct {
	// AdjustmentFactor Fator de ajuste da tabela utilizada para valor mÃ©dio de mercado
	AdjustmentFactor *string `json:"adjustmentFactor,omitempty"`

	// ArmouredVehicle Objeto que agrupa os dados de blindagem.
	ArmouredVehicle *struct {
		// ArmouredVehicleAmount Detalhes de valores/limites
		ArmouredVehicleAmount *AmountDetails `json:"armouredVehicleAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura da blindagem?
		IsDesireCoverage *bool `json:"isDesireCoverage,omitempty"`
	} `json:"armouredVehicle,omitempty"`

	// Beneficiaries Lista de dados de beneficiÃ¡rios.
	Beneficiaries *[]QuoteAutoBeneficiary `json:"beneficiaries,omitempty"`

	// Chassis Chassi
	Chassis *bool `json:"chassis,omitempty"`

	// ClaimNotifications Lista de sinistros e valores
	ClaimNotifications *[]ClaimNotification `json:"claimNotifications,omitempty"`

	// Color Cor
	Color string `json:"color"`

	// CommercialActivityType  Tipo de atividade comercial. Condicional, caso a opÃ§Ã£o '3. ExercÃ­cio do trabalho' seja selecionada no campo 'CÃ³digo de utilizaÃ§Ã£o do veÃ­culo'
	CommercialActivityType *[]QuoteAutoInsuredObjectCommercialActivityType `json:"commercialActivityType,omitempty"`

	// DepartureDateFromCarDealership Data de saÃ­da da concessionÃ¡ria - Zero km? Condicional e opcional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Zero km?'
	DepartureDateFromCarDealership *openapi_types.Date `json:"departureDateFromCarDealership,omitempty"`

	// DoorsNumber Quantidade de portas
	DoorsNumber string `json:"doorsNumber"`

	// DriverBetween18and25YearsOldGender Condicional, caso seja selecionado '1. Sim' no campo 'Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?'sexo dos condutores na faixa etÃ¡ria dos 18 aos 25 anos
	DriverBetween18and25YearsOldGender *QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender `json:"driverBetween18and25YearsOldGender,omitempty"`

	// EquipmentsAttached Objeto que agrupa os dados de equipamentos ou acessÃ³rios acoplados.
	EquipmentsAttached *struct {
		// EquipmentsAttachedAmount Detalhes de valores/limites
		EquipmentsAttachedAmount *AmountDetails `json:"equipmentsAttachedAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura destes equipamentos ou acessÃ³rios? Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Possui equipamentos ou acessÃ³rios acoplados, fixados ou instalados a veÃ­culos?'
		IsDesireCoverage *bool `json:"isDesireCoverage,omitempty"`
	} `json:"equipmentsAttached,omitempty"`

	// FrequentTrafficArea Qual a Ã¡rea de circulaÃ§Ã£o mais frenquente?
	FrequentTrafficArea *QuoteAutoInsuredObjectFrequentTrafficArea `json:"frequentTrafficArea,omitempty"`

	// Fuel CombustÃ­vel
	Fuel QuoteAutoInsuredObjectFuel `json:"fuel"`

	// GasKit Objeto que agrupa os dados de Kit-gÃ¡s.
	GasKit *struct {
		// GasKitAmount Detalhes de valores/limites
		GasKitAmount *AmountDetails `json:"gasKitAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura do Kit-gÃ¡s? Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'VeÃ­culo blindado?'
		IsDesireCoverage bool `json:"isDesireCoverage"`
	} `json:"gasKit,omitempty"`

	// Identification Identificador do objeto segurado. Obs.: Para FianÃ§a LocatÃ­cia, Ã© a identificaÃ§Ã£o do Contrato de LocaÃ§Ã£o.
	Identification string `json:"identification"`

	// IsActiveTrackingDevice Possui dispositivo rastreador prÃ³prio e ativo (adquirido e pago pelo cliente)?
	IsActiveTrackingDevice bool `json:"isActiveTrackingDevice"`

	// IsArmouredVehicle VeÃ­culo blindado?
	IsArmouredVehicle bool `json:"isArmouredVehicle"`

	// IsAuctionChassisRescheduled LeilÃ£o ou Chassi remarcado
	IsAuctionChassisRescheduled *bool `json:"isAuctionChassisRescheduled,omitempty"`

	// IsBrandNew Zero km?
	IsBrandNew bool `json:"isBrandNew"`

	// IsEquipmentsAttached Utiliza algum sistema de gerenciamento de risco?
	IsEquipmentsAttached bool `json:"isEquipmentsAttached"`

	// IsExtendCoverageAgedBetween18And25 Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?
	IsExtendCoverageAgedBetween18And25 *bool `json:"isExtendCoverageAgedBetween18And25,omitempty"`

	// IsGasKit Possui Kit-gÃ¡s?
	IsGasKit bool `json:"isGasKit"`

	// IsTransportedCargoInsurance Possui seguro da carga transportada? Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
	IsTransportedCargoInsurance *bool `json:"isTransportedCargoInsurance,omitempty"`

	// LicensePlate Placa
	LicensePlate        *string                                      `json:"licensePlate,omitempty"`
	LoadsCarriedinsured *[]QuoteAutoInsuredObjectLoadsCarriedinsured `json:"loadsCarriedinsured,omitempty"`

	// Modality Modalidade de cobertura (para cobertura de casco)
	Modality *QuoteAutoInsuredObjectModality `json:"modality,omitempty"`

	// Model Objeto que agrupa os dados de modelo.
	Model *struct {
		// Brand Marca do veÃ­culo
		Brand string `json:"brand"`

		// ManufactureYear Ano de fabricaÃ§Ã£o (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
		ManufactureYear *string `json:"manufactureYear,omitempty"`

		// ModelName Nome do modelo (Caso aplicÃ¡vel)
		ModelName string `json:"modelName"`

		// ModelYear Ano do modelo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
		ModelYear *string `json:"modelYear,omitempty"`
	} `json:"model,omitempty"`

	// ModelCode CÃ³digo do modelo de acordo com a tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	ModelCode *string `json:"modelCode,omitempty"`

	// OvernightPostCode CEP da localidade de pernoite do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	OvernightPostCode string `json:"overnightPostCode"`

	// RiskLocationInfo Objeto que agrupa dados de local de risco.
	RiskLocationInfo     *QuoteAutoRiskLocation                        `json:"riskLocationInfo,omitempty"`
	RiskManagementSystem *[]QuoteAutoInsuredObjectRiskManagementSystem `json:"riskManagementSystem,omitempty"`

	// TableUsed Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas). Condicional, caso a opÃ§Ã£o '1. Valor de mercado referenciado' seja selecionada no campo 'Modalidade'
	TableUsed *QuoteAutoInsuredObjectTableUsed `json:"tableUsed,omitempty"`
	Tax       *struct {
		// Exempt Isento de Imposto. Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Isento de Imposto'
		Exempt bool `json:"exempt"`

		// ExemptionPercentage Percentual da isenÃ§Ã£o. Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Isento de Imposto'
		ExemptionPercentage *string `json:"exemptionPercentage,omitempty"`

		// Type qual imposto isento(s)
		Type *QuoteAutoInsuredObjectTaxType `json:"type,omitempty"`
	} `json:"tax,omitempty"`

	// ValueDetermined BRL - De acordo com ISO-4217. Condicional, caso a opÃ§Ã£o '2. Valor determinado' seja selecionada no campo 'Modalidade'
	ValueDetermined *string `json:"valueDetermined,omitempty"`

	// VehicleInvoice Objeto que agrupa os dados de Nota Fiscal.
	VehicleInvoice *struct {
		// VehicleAmount Detalhes de valores/limites
		VehicleAmount *AmountDetails `json:"vehicleAmount,omitempty"`

		// VehicleNumber NÃºmero da NF do veÃ­culo
		VehicleNumber *string `json:"vehicleNumber,omitempty"`
	} `json:"vehicleInvoice,omitempty"`
	VehicleUse []QuoteAutoInsuredObjectVehicleUse `json:"vehicleUse"`

	// WasThereAClaim Houve sinistro no local nos Ãºltimos 12 meses?
	WasThereAClaim bool `json:"wasThereAClaim"`
}

// QuoteAutoInsuredObjectCommercialActivityType defines model for QuoteAutoInsuredObject.CommercialActivityType.
type QuoteAutoInsuredObjectCommercialActivityType string

// QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender Condicional, caso seja selecionado '1. Sim' no campo 'Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?'sexo dos condutores na faixa etÃ¡ria dos 18 aos 25 anos
type QuoteAutoInsuredObjectDriverBetween18and25YearsOldGender string

// QuoteAutoInsuredObjectFrequentTrafficArea Qual a Ã¡rea de circulaÃ§Ã£o mais frenquente?
type QuoteAutoInsuredObjectFrequentTrafficArea string

// QuoteAutoInsuredObjectFuel CombustÃ­vel
type QuoteAutoInsuredObjectFuel string

// QuoteAutoInsuredObjectLoadsCarriedinsured Quais as cargas transportadas pelo veÃ­culo segurado? Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
type QuoteAutoInsuredObjectLoadsCarriedinsured string

// QuoteAutoInsuredObjectModality Modalidade de cobertura (para cobertura de casco)
type QuoteAutoInsuredObjectModality string

// QuoteAutoInsuredObjectRiskManagementSystem Utiliza algum sistema de gerenciamento de risco?. Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
type QuoteAutoInsuredObjectRiskManagementSystem string

// QuoteAutoInsuredObjectTableUsed Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas). Condicional, caso a opÃ§Ã£o '1. Valor de mercado referenciado' seja selecionada no campo 'Modalidade'
type QuoteAutoInsuredObjectTableUsed string

// QuoteAutoInsuredObjectTaxType qual imposto isento(s)
type QuoteAutoInsuredObjectTaxType string

// QuoteAutoInsuredObjectVehicleUse  CÃ³digo de utilizaÃ§Ã£o do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
type QuoteAutoInsuredObjectVehicleUse string

// QuoteAutoLeadData defines model for QuoteAutoLeadData.
type QuoteAutoLeadData struct {
	// ConsentId O consentId Ã© o identificador Ãºnico do consentimento e deverÃ¡ ser um URN - Uniform Resource Name.
	// Um URN, conforme definido na [RFC8141](https://tools.ietf.org/html/rfc8141) Ã© um Uniform Resource
	// Identifier - URI - que Ã© atribuÃ­do sob o URI scheme "urn" e um namespace URN especÃ­fico, com a intenÃ§Ã£o de que o URN
	// seja um identificador de recurso persistente e independente da localizaÃ§Ã£o.
	// Considerando a string urn:initiator:C1DD93123 como exemplo para consentId temos:
	// - o namespace(urn)
	// - o identificador associado ao namespace da instituiÃ§Ã£o transnmissora (initiator)
	// - o identificador especÃ­fico dentro do namespace (C1DD93123).
	// InformaÃ§Ãµes mais detalhadas sobre a construÃ§Ã£o de namespaces devem ser consultadas na [RFC8141](https://tools.ietf.org/html/rfc8141).
	ConsentId string `json:"consentId"`

	// ExpirationDateTime Data e hora de expiraÃ§Ã£o da permissÃ£o. De preenchimento obrigatÃ³rio, reflete a data limite de validade do consentimento. Uma string com data e hora conforme especificaÃ§Ã£o RFC-3339, sempre com a utilizaÃ§Ã£o de timezone UTC(UTC time format).
	ExpirationDateTime DateTime `json:"expirationDateTime"`

	// HistoricalData Objeto que agrupa todos dados histÃ³ricos do cliente.
	HistoricalData *struct {
		Customer *QuoteCustomerData `json:"customer,omitempty"`

		// Policies Lista que agrupa os dados das apÃ³lices histÃ³ricos em categorias.
		Policies *PolicyDataAuto `json:"policies,omitempty"`
	} `json:"historicalData,omitempty"`
	QuoteCustomer QuoteCustomerData `json:"quoteCustomer"`
}

// QuoteAutoQuoteResultCoverage defines model for QuoteAutoQuoteResultCoverage.
type QuoteAutoQuoteResultCoverage struct {
	POS POS `json:"POS"`

	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code       QuoteAutoQuoteResultCoverageCode `json:"code"`
	Deductible *QuoteAutoResultDeductible       `json:"deductible,omitempty"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`

	// FullIndemnity Franquia sobre indenizaÃ§Ã£o integral(caso aplicÃ¡vel)
	FullIndemnity QuoteAutoQuoteResultCoverageFullIndemnity `json:"fullIndemnity"`

	// GracePeriod PerÃ­odo de carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriod *int `json:"gracePeriod,omitempty"`

	// GracePeriodCountingMethod Indicador de dias Ãºteis ou corridos da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodCountingMethod *QuoteAutoQuoteResultCoverageGracePeriodCountingMethod `json:"gracePeriodCountingMethod,omitempty"`

	// GracePeriodEndDate Data de fim da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodEndDate *openapi_types.Date `json:"gracePeriodEndDate,omitempty"`

	// GracePeriodStartDate Data de inÃ­cio da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodStartDate *openapi_types.Date `json:"gracePeriodStartDate,omitempty"`

	// GracePeriodicity Periodicidade da carÃªncia. OBS: ObrigatÃ³rio, se houver
	GracePeriodicity *QuoteAutoQuoteResultCoverageGracePeriodicity `json:"gracePeriodicity,omitempty"`

	// InternalCode CÃ³digo interno da cobertura da seguradora
	InternalCode *string `json:"internalCode,omitempty"`

	// IsSeparateContractingAllowed PermissÃ£o para ContrataÃ§Ã£o Separada
	IsSeparateContractingAllowed bool `json:"isSeparateContractingAllowed"`
}

// QuoteAutoQuoteResultCoverageCode CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
type QuoteAutoQuoteResultCoverageCode string

// QuoteAutoQuoteResultCoverageFullIndemnity Franquia sobre indenizaÃ§Ã£o integral(caso aplicÃ¡vel)
type QuoteAutoQuoteResultCoverageFullIndemnity string

// QuoteAutoQuoteResultCoverageGracePeriodCountingMethod Indicador de dias Ãºteis ou corridos da carÃªncia. OBS: ObrigatÃ³rio, se houver
type QuoteAutoQuoteResultCoverageGracePeriodCountingMethod string

// QuoteAutoQuoteResultCoverageGracePeriodicity Periodicidade da carÃªncia. OBS: ObrigatÃ³rio, se houver
type QuoteAutoQuoteResultCoverageGracePeriodicity string

// QuoteAutoResultDeductible defines model for QuoteAutoResultDeductible.
type QuoteAutoResultDeductible struct {
	// DeductibleAmount Detalhes de valores/limites
	DeductibleAmount *AmountDetails `json:"deductibleAmount,omitempty"`

	// Description DescriÃ§Ã£o da Franquia
	Description *string `json:"description,omitempty"`

	// Period Prazo da Franquia
	Period *int `json:"period,omitempty"`

	// PeriodCountingMethod Indicador de Dias Ãšteis ou Corridos (Caso aplicÃ¡vel)
	PeriodCountingMethod *QuoteAutoResultDeductiblePeriodCountingMethod `json:"periodCountingMethod,omitempty"`

	// PeriodEndDate Data de Fim da Franquia
	PeriodEndDate *openapi_types.Date `json:"periodEndDate,omitempty"`

	// PeriodStartDate Data de InÃ­cio da Franquia
	PeriodStartDate *openapi_types.Date `json:"periodStartDate,omitempty"`

	// Periodicity Periodicidade da Franquia
	Periodicity *QuoteAutoResultDeductiblePeriodicity `json:"periodicity,omitempty"`

	// Type Tipo de Franquia
	Type QuoteAutoResultDeductibleType `json:"type"`

	// TypeAdditionalInfo DescriÃ§ao do Tipo de Franquia (Caso Tipo de Franquia for "OUTROS")
	TypeAdditionalInfo *string `json:"typeAdditionalInfo,omitempty"`
}

// QuoteAutoResultDeductiblePeriodCountingMethod Indicador de Dias Ãšteis ou Corridos (Caso aplicÃ¡vel)
type QuoteAutoResultDeductiblePeriodCountingMethod string

// QuoteAutoResultDeductiblePeriodicity Periodicidade da Franquia
type QuoteAutoResultDeductiblePeriodicity string

// QuoteAutoResultDeductibleType Tipo de Franquia
type QuoteAutoResultDeductibleType string

// QuoteAutoResultInsuredObject defines model for QuoteAutoResultInsuredObject.
type QuoteAutoResultInsuredObject struct {
	// AdjustmentFactor Fator de ajuste da tabela utilizada para valor mÃ©dio de mercado
	AdjustmentFactor *string `json:"adjustmentFactor,omitempty"`

	// ArmouredVehicle Objeto que agrupa os dados de blindagem.
	ArmouredVehicle *struct {
		// ArmouredVehicleAmount Detalhes de valores/limites
		ArmouredVehicleAmount *AmountDetails `json:"armouredVehicleAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura da blindagem?
		IsDesireCoverage *bool `json:"isDesireCoverage,omitempty"`
	} `json:"armouredVehicle,omitempty"`

	// Beneficiaries Lista de dados de beneficiÃ¡rios.
	Beneficiaries *[]QuoteAutoBeneficiary `json:"beneficiaries,omitempty"`

	// Chassis Chassi
	Chassis *bool `json:"chassis,omitempty"`

	// ClaimNotifications Lista de sinistros e valores
	ClaimNotifications *[]ClaimNotification `json:"claimNotifications,omitempty"`

	// Color Cor
	Color string `json:"color"`

	// CommercialActivityType  Tipo de atividade comercial. Condicional, caso a opÃ§Ã£o '3. ExercÃ­cio do trabalho' seja selecionada no campo 'CÃ³digo de utilizaÃ§Ã£o do veÃ­culo'
	CommercialActivityType *[]QuoteAutoResultInsuredObjectCommercialActivityType `json:"commercialActivityType,omitempty"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages []QuoteAutoResultInsuredObjectCoverage `json:"coverages"`

	// DepartureDateFromCarDealership Data de saÃ­da da concessionÃ¡ria - Zero km? Condicional e opcional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Zero km?'
	DepartureDateFromCarDealership *openapi_types.Date `json:"departureDateFromCarDealership,omitempty"`

	// DoorsNumber Quantidade de portas
	DoorsNumber string `json:"doorsNumber"`

	// DriverBetween18and25YearsOldGender Condicional, caso seja selecionado '1. Sim' no campo 'Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?'sexo dos condutores na faixa etÃ¡ria dos 18 aos 25 anos
	DriverBetween18and25YearsOldGender *QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender `json:"driverBetween18and25YearsOldGender,omitempty"`

	// EquipmentsAttached Objeto que agrupa os dados de equipamentos ou acessÃ³rios acoplados.
	EquipmentsAttached *struct {
		// EquipmentsAttachedAmount Detalhes de valores/limites
		EquipmentsAttachedAmount *AmountDetails `json:"equipmentsAttachedAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura destes equipamentos ou acessÃ³rios? Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Possui equipamentos ou acessÃ³rios acoplados, fixados ou instalados a veÃ­culos?'
		IsDesireCoverage *bool `json:"isDesireCoverage,omitempty"`
	} `json:"equipmentsAttached,omitempty"`

	// FrequentTrafficArea Qual a Ã¡rea de circulaÃ§Ã£o mais frenquente?
	FrequentTrafficArea *QuoteAutoResultInsuredObjectFrequentTrafficArea `json:"frequentTrafficArea,omitempty"`

	// Fuel CombustÃ­vel
	Fuel QuoteAutoResultInsuredObjectFuel `json:"fuel"`

	// GasKit Objeto que agrupa os dados de Kit-gÃ¡s.
	GasKit *struct {
		// GasKitAmount Detalhes de valores/limites
		GasKitAmount *AmountDetails `json:"gasKitAmount,omitempty"`

		// IsDesireCoverage Deseja cobertura do Kit-gÃ¡s? Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'VeÃ­culo blindado?'
		IsDesireCoverage bool `json:"isDesireCoverage"`
	} `json:"gasKit,omitempty"`

	// Identification Identificador do objeto segurado. Obs.: Para FianÃ§a LocatÃ­cia, Ã© a identificaÃ§Ã£o do Contrato de LocaÃ§Ã£o.
	Identification string `json:"identification"`

	// IsActiveTrackingDevice Possui dispositivo rastreador prÃ³prio e ativo (adquirido e pago pelo cliente)?
	IsActiveTrackingDevice bool `json:"isActiveTrackingDevice"`

	// IsArmouredVehicle VeÃ­culo blindado?
	IsArmouredVehicle bool `json:"isArmouredVehicle"`

	// IsAuctionChassisRescheduled LeilÃ£o ou Chassi remarcado
	IsAuctionChassisRescheduled *bool `json:"isAuctionChassisRescheduled,omitempty"`

	// IsBrandNew Zero km?
	IsBrandNew bool `json:"isBrandNew"`

	// IsEquipmentsAttached Utiliza algum sistema de gerenciamento de risco?
	IsEquipmentsAttached bool `json:"isEquipmentsAttached"`

	// IsExtendCoverageAgedBetween18And25 Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?
	IsExtendCoverageAgedBetween18And25 *bool `json:"isExtendCoverageAgedBetween18And25,omitempty"`

	// IsGasKit Possui Kit-gÃ¡s?
	IsGasKit bool `json:"isGasKit"`

	// IsTransportedCargoInsurance Possui seguro da carga transportada? Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
	IsTransportedCargoInsurance *bool `json:"isTransportedCargoInsurance,omitempty"`

	// LicensePlate Placa
	LicensePlate *string `json:"licensePlate,omitempty"`

	// LicensePlateType Tipo de placa
	LicensePlateType    []QuoteAutoResultInsuredObjectLicensePlateType     `json:"licensePlateType"`
	LoadsCarriedinsured *[]QuoteAutoResultInsuredObjectLoadsCarriedinsured `json:"loadsCarriedinsured,omitempty"`

	// Modality Modalidade de cobertura (para cobertura de casco)
	Modality *QuoteAutoResultInsuredObjectModality `json:"modality,omitempty"`

	// Model Objeto que agrupa os dados de modelo.
	Model *struct {
		// Brand Marca do veÃ­culo
		Brand string `json:"brand"`

		// ManufactureYear Ano de fabricaÃ§Ã£o (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
		ManufactureYear *string `json:"manufactureYear,omitempty"`

		// ModelName Nome do modelo (Caso aplicÃ¡vel)
		ModelName string `json:"modelName"`

		// ModelYear Ano do modelo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
		ModelYear *string `json:"modelYear,omitempty"`
	} `json:"model,omitempty"`

	// ModelCode CÃ³digo do modelo de acordo com a tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	ModelCode *string `json:"modelCode,omitempty"`

	// OvernightPostCode CEP da localidade de pernoite do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
	OvernightPostCode string `json:"overnightPostCode"`

	// RiskLocationInfo Objeto que agrupa dados de local de risco.
	RiskLocationInfo     *QuoteAutoRiskLocation                              `json:"riskLocationInfo,omitempty"`
	RiskManagementSystem *[]QuoteAutoResultInsuredObjectRiskManagementSystem `json:"riskManagementSystem,omitempty"`

	// TableUsed Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas). Condicional, caso a opÃ§Ã£o '1. Valor de mercado referenciado' seja selecionada no campo 'Modalidade'
	TableUsed *QuoteAutoResultInsuredObjectTableUsed `json:"tableUsed,omitempty"`

	// Tariff Campo Categoria tarifÃ¡ria
	Tariff *QuoteAutoResultInsuredObjectTariff `json:"tariff,omitempty"`

	// Tax Objeto que agrupa os dados de imposto.
	Tax *struct {
		// Exempt Isento de Imposto. Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Isento de Imposto'
		Exempt bool `json:"exempt"`

		// ExemptionPercentage Percentual da isenÃ§Ã£o. Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'Isento de Imposto'
		ExemptionPercentage *string `json:"exemptionPercentage,omitempty"`

		// Type qual imposto isento(s)
		Type *QuoteAutoResultInsuredObjectTaxType `json:"type,omitempty"`
	} `json:"tax,omitempty"`

	// ValueDetermined BRL - De acordo com ISO-4217. Condicional, caso a opÃ§Ã£o '2. Valor determinado' seja selecionada no campo 'Modalidade'
	ValueDetermined *string `json:"valueDetermined,omitempty"`

	// VehicleInvoice Objeto que agrupa os dados de Nota Fiscal.
	VehicleInvoice *struct {
		// VehicleAmount Detalhes de valores/limites
		VehicleAmount *AmountDetails `json:"vehicleAmount,omitempty"`

		// VehicleNumber NÃºmero da NF do veÃ­culo
		VehicleNumber *string `json:"vehicleNumber,omitempty"`
	} `json:"vehicleInvoice,omitempty"`
	VehicleUse []QuoteAutoResultInsuredObjectVehicleUse `json:"vehicleUse"`

	// WasThereAClaim Houve sinistro no local nos Ãºltimos 12 meses?
	WasThereAClaim bool `json:"wasThereAClaim"`
}

// QuoteAutoResultInsuredObjectCommercialActivityType defines model for QuoteAutoResultInsuredObject.CommercialActivityType.
type QuoteAutoResultInsuredObjectCommercialActivityType string

// QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender Condicional, caso seja selecionado '1. Sim' no campo 'Deseja estender a cobertura contratada para condutores na faixa etÃ¡ria dos 18 aos 25 anos?'sexo dos condutores na faixa etÃ¡ria dos 18 aos 25 anos
type QuoteAutoResultInsuredObjectDriverBetween18and25YearsOldGender string

// QuoteAutoResultInsuredObjectFrequentTrafficArea Qual a Ã¡rea de circulaÃ§Ã£o mais frenquente?
type QuoteAutoResultInsuredObjectFrequentTrafficArea string

// QuoteAutoResultInsuredObjectFuel CombustÃ­vel
type QuoteAutoResultInsuredObjectFuel string

// QuoteAutoResultInsuredObjectLicensePlateType defines model for QuoteAutoResultInsuredObject.LicensePlateType.
type QuoteAutoResultInsuredObjectLicensePlateType string

// QuoteAutoResultInsuredObjectLoadsCarriedinsured Quais as cargas transportadas pelo veÃ­culo segurado? Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
type QuoteAutoResultInsuredObjectLoadsCarriedinsured string

// QuoteAutoResultInsuredObjectModality Modalidade de cobertura (para cobertura de casco)
type QuoteAutoResultInsuredObjectModality string

// QuoteAutoResultInsuredObjectRiskManagementSystem Utiliza algum sistema de gerenciamento de risco?. Condicional, caso a opÃ§Ã£o '10. Transporte de Mercadoria' ou '11. Presta ServiÃ§o para Transportadora' seja selecionada no campo 'Tipo de Atividade Comercial'
type QuoteAutoResultInsuredObjectRiskManagementSystem string

// QuoteAutoResultInsuredObjectTableUsed Tabela de referÃªncia adotada no plano (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas). Condicional, caso a opÃ§Ã£o '1. Valor de mercado referenciado' seja selecionada no campo 'Modalidade'
type QuoteAutoResultInsuredObjectTableUsed string

// QuoteAutoResultInsuredObjectTariff Campo Categoria tarifÃ¡ria
type QuoteAutoResultInsuredObjectTariff string

// QuoteAutoResultInsuredObjectTaxType qual imposto isento(s)
type QuoteAutoResultInsuredObjectTaxType string

// QuoteAutoResultInsuredObjectVehicleUse  CÃ³digo de utilizaÃ§Ã£o do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas)
type QuoteAutoResultInsuredObjectVehicleUse string

// QuoteAutoResultInsuredObjectCoverage defines model for QuoteAutoResultInsuredObjectCoverage.
type QuoteAutoResultInsuredObjectCoverage struct {
	// LMI Detalhes de valores/limites
	LMI AmountDetails `json:"LMI"`

	// Branch Grupo e Ramo da Cobertura (Conforme regulamentaÃ§Ã£o Susep vigente)
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code             QuoteAutoResultInsuredObjectCoverageCode              `json:"code"`
	CompensationType *QuoteAutoResultInsuredObjectCoverageCompensationType `json:"compensationType,omitempty"`

	// DaysForTotalCompensation NÃºmero de dias de cobertura para direito Ã  indenizaÃ§Ã£o pelo valor de novo (Casco)
	DaysForTotalCompensation string `json:"daysForTotalCompensation"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (ObrigatÃ³rio quando o campo 'Codigo' for preenchido com 'Outras')
	Description *string `json:"description,omitempty"`

	// InternalCode CÃ³digo interno da cobertura da seguradora
	InternalCode *string `json:"internalCode,omitempty"`

	// IsMainCoverage Indicador de Cobertura Principal
	IsMainCoverage *bool `json:"isMainCoverage,omitempty"`

	// PartialCompensationPercentage Percentual por indenizaÃ§Ã£o parcial(caso aplicÃ¡vel)
	PartialCompensationPercentage *string `json:"partialCompensationPercentage,omitempty"`
}

// QuoteAutoResultInsuredObjectCoverageCode CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
type QuoteAutoResultInsuredObjectCoverageCode string

// QuoteAutoResultInsuredObjectCoverageCompensationType defines model for QuoteAutoResultInsuredObjectCoverage.CompensationType.
type QuoteAutoResultInsuredObjectCoverageCompensationType string

// QuoteAutoRiskLocation Objeto que agrupa dados de local de risco.
type QuoteAutoRiskLocation struct {
	Housing *struct {
		// GateType Tipo de portÃ£o do local onde o veÃ­culo Ã© guardado na residÃªncia
		GateType *QuoteAutoRiskLocationHousingGateType `json:"gateType,omitempty"`

		// IsKeptInGarage O veÃ­culo Ã© guardado em garagem/estacionamento fechado na residÃªncia?
		IsKeptInGarage *bool `json:"isKeptInGarage,omitempty"`

		// Type Qual Ã© o tipo de residÃªncia do condutor principal?
		Type *QuoteAutoRiskLocationHousingType `json:"type,omitempty"`
	} `json:"housing,omitempty"`

	// IsUsedCollege VeÃ­culo Ã© utilizado para ir Ã  faculdade/colÃ©gio?
	IsUsedCollege *bool `json:"isUsedCollege,omitempty"`

	// IsUsedCommuteWork VeÃ­culo Ã© utilizado para ir ao trabalho?
	IsUsedCommuteWork *bool `json:"isUsedCommuteWork,omitempty"`

	// KmAveragePerWeek Quantos KM em mÃ©dia o veÃ­culo circula por semana
	KmAveragePerWeek *string `json:"kmAveragePerWeek,omitempty"`
	UsedCollege      *struct {
		// DistanceFromResidence DistÃ¢ncia da residÃªncia atÃ© unidade de ensino (Em km). Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'utilizado para ir Ã  faculdade?'
		DistanceFromResidence *string `json:"distanceFromResidence,omitempty"`

		// IsKeptInGarage VeÃ­culo Ã© guardado em garagem/estacionamento fechado quando utilizado para ir Ã  faculdade/colÃ©gio? Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'utilizado para ir Ã  faculdade?'
		IsKeptInGarage *bool `json:"isKeptInGarage,omitempty"`
	} `json:"usedCollege,omitempty"`
	UsedCommuteWork *struct {
		// DistanceFromResidence Campo aberto para detalhamento da quilometragem. Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'utilizado para ir ao trabalho?'
		DistanceFromResidence *string `json:"distanceFromResidence,omitempty"`

		// IsKeptInGarage VeÃ­culo Ã© guardado em garagem/estacionamento fechado quando utilizado para ir ao local de trabalho?Condicional, caso a opÃ§Ã£o '1. Sim' seja selecionada no campo 'utilizado para ir ao trabalho?'
		IsKeptInGarage *bool `json:"isKeptInGarage,omitempty"`
	} `json:"usedCommuteWork,omitempty"`
}

// QuoteAutoRiskLocationHousingGateType Tipo de portÃ£o do local onde o veÃ­culo Ã© guardado na residÃªncia
type QuoteAutoRiskLocationHousingGateType string

// QuoteAutoRiskLocationHousingType Qual Ã© o tipo de residÃªncia do condutor principal?
type QuoteAutoRiskLocationHousingType string

// QuoteCustomData Objeto que agrupa as categorias de dados customizÃ¡veis em listas.
type QuoteCustomData struct {
	Beneficiaries             *[]CustomInfoData `json:"beneficiaries,omitempty"`
	Coverages                 *[]CustomInfoData `json:"coverages,omitempty"`
	CustomerComplimentaryInfo *[]CustomInfoData `json:"customerComplimentaryInfo,omitempty"`
	CustomerIdentification    *[]CustomInfoData `json:"customerIdentification,omitempty"`
	CustomerQualification     *[]CustomInfoData `json:"customerQualification,omitempty"`
	GeneralClaimInfo          *[]CustomInfoData `json:"generalClaimInfo,omitempty"`
	GeneralQuoteInfo          *[]CustomInfoData `json:"generalQuoteInfo,omitempty"`
	InsuredObjects            *[]CustomInfoData `json:"insuredObjects,omitempty"`
	RiskLocationInfo          *[]CustomInfoData `json:"riskLocationInfo,omitempty"`
}

// QuoteCustomer defines model for QuoteCustomer.
type QuoteCustomer struct {
	union json.RawMessage
}

// QuoteCustomerData defines model for QuoteCustomerData.
type QuoteCustomerData struct {
	union json.RawMessage
}

// QuoteDataAuto Objeto que agrupa dados especÃ­ficos do ramo de cotaÃ§Ã£o.
type QuoteDataAuto struct {
	// BonusClass Classe de BÃ´nus. Condicional, caso a opÃ§Ã£o '2. RenovaÃ§Ã£o' seja selecionada no campo 'tipo de Seguro'
	BonusClass *string `json:"bonusClass,omitempty"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages *[]QuoteAutoCoverage `json:"coverages,omitempty"`

	// Currency Moeda de emissÃ£o do contrato de acordo com ISO-4217.
	Currency string `json:"currency"`

	// HasAnIndividualItem Trata-se uma apÃ³lice individual com apenas um item?
	HasAnIndividualItem *bool `json:"hasAnIndividualItem,omitempty"`

	// IdentifierCode CÃ³digo Identificador. Condicional, caso a opÃ§Ã£o '2. RenovaÃ§Ã£o' seja selecionada no campo 'tipo de Seguro'
	IdentifierCode *string `json:"identifierCode,omitempty"`

	// IncludesAssistanceServices Deseja contrataÃ§Ã£o de serviÃ§os de assistÃªncia
	IncludesAssistanceServices bool `json:"includesAssistanceServices"`

	// InsuranceType Tipo de Seguro
	InsuranceType QuoteDataAutoInsuranceType `json:"insuranceType"`

	// InsuredObject Objeto que agrupa os dados de objeto segurado.
	InsuredObject *QuoteAutoInsuredObject `json:"insuredObject,omitempty"`

	// InsurerId Nome para identifcar a congÃªnere de renovaÃ§Ã£o
	InsurerId *string `json:"insurerId,omitempty"`

	// IsCollectiveStipulated ApÃ³lice coletiva, por estipulaÃ§Ã£o ou automÃ³vel frota?
	IsCollectiveStipulated *bool `json:"isCollectiveStipulated,omitempty"`

	// PolicyId NÃºmero para identificar a apÃ³lice atual
	PolicyId *string `json:"policyId,omitempty"`

	// TermEndDate AtÃ© as 24 horas do dia
	TermEndDate openapi_types.Date `json:"termEndDate"`

	// TermStartDate VigÃªncia das 24 horas do dia
	TermStartDate openapi_types.Date `json:"termStartDate"`

	// TermType Tipo de vigÃªncia
	TermType QuoteDataAutoTermType `json:"termType"`
}

// QuoteDataAutoInsuranceType Tipo de Seguro
type QuoteDataAutoInsuranceType string

// QuoteDataAutoTermType Tipo de vigÃªncia
type QuoteDataAutoTermType string

// QuotePersonalCustomer Objeto que agrupa as categorias de dados cadastrais do cliente.
type QuotePersonalCustomer struct {
	// ComplimentaryInformation Objeto que reúne as informações relativas ao relacionamento do cliente junto à Instituição. Considera-se relacionamento as informações que permitam conhecer desde quando a pessoa consultada é cliente da instituição, bem como um indicador dos produtos e serviços que ela consome atualmente e seus representantes
	ComplimentaryInformation *PersonalComplimentaryInfoData `json:"complimentaryInformation,omitempty"`
	Identification           *PersonalIdentificationData    `json:"identification,omitempty"`
	Qualification            *PersonalQualificationData     `json:"qualification,omitempty"`
}

// QuotePersonalCustomerData Objeto que agrupa as categorias de dados cadastrais do cliente.
type QuotePersonalCustomerData struct {
	// ComplimentaryInformationData Objeto que reúne as informações relativas ao relacionamento do cliente junto à Instituição. Considera-se relacionamento as informações que permitam conhecer desde quando a pessoa consultada é cliente da instituição, bem como um indicador dos produtos e serviços que ela consome atualmente e seus representantes
	ComplimentaryInformationData *PersonalComplimentaryInfoData `json:"complimentaryInformationData,omitempty"`
	IdentificationData           *PersonalIdentificationData    `json:"identificationData,omitempty"`
	QualificationData            *PersonalQualificationData     `json:"qualificationData,omitempty"`
}

// QuoteResultAssistance defines model for QuoteResultAssistance.
type QuoteResultAssistance struct {
	// AssistancePremiumAmount Detalhes de valores/limites
	AssistancePremiumAmount AmountDetails `json:"assistancePremiumAmount"`

	// Description DescriÃ§Ã£o do serviÃ§o prestado
	Description string `json:"description"`

	// Service Nome do serviÃ§o prestado
	Service QuoteResultAssistanceService `json:"service"`

	// Type Tipo de prestaÃ§Ã£o de serviÃ§os
	Type QuoteResultAssistanceType `json:"type"`
}

// QuoteResultAssistanceService Nome do serviÃ§o prestado
type QuoteResultAssistanceService string

// QuoteResultAssistanceType Tipo de prestaÃ§Ã£o de serviÃ§os
type QuoteResultAssistanceType string

// QuoteResultPayment defines model for QuoteResultPayment.
type QuoteResultPayment struct {
	// Amount Detalhes de valores/limites
	Amount AmountDetails `json:"amount"`

	// PaymentType Meio de Pagamento Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
	PaymentType QuoteResultPaymentPaymentType `json:"paymentType"`
}

// QuoteResultPaymentPaymentType Meio de Pagamento Obs: ObrigatÃ³rio caso Tipo de Movimento for  LIQUIDACAO_DE_PREMIO e LIQUIDACAO_DE_CUSTO_DE_AQUISICAO
type QuoteResultPaymentPaymentType string

// QuoteResultPremium Objeto que agrupa dados de prÃªmio.
type QuoteResultPremium struct {
	// IOF Detalhes de valores/limites
	IOF AmountDetails `json:"IOF"`

	// Coverages Lista que agrupa os dados de coberturas.
	Coverages []QuoteResultPremiumCoverage `json:"coverages"`

	// InterestRateOverPayments Taxa de juros sobre o parcelamento do prÃªmio
	InterestRateOverPayments *float32 `json:"interestRateOverPayments,omitempty"`

	// Payments Lista que agrupa os dados de pagamentos.
	Payments []QuoteResultPayment `json:"payments"`

	// PaymentsQuantity Quantidade de parcelas do prÃªmio do contrato
	PaymentsQuantity float32 `json:"paymentsQuantity"`

	// TotalNetAmount Detalhes de valores/limites
	TotalNetAmount AmountDetails `json:"totalNetAmount"`

	// TotalPremiumAmount Detalhes de valores/limites
	TotalPremiumAmount AmountDetails `json:"totalPremiumAmount"`
}

// QuoteResultPremiumCoverage defines model for QuoteResultPremiumCoverage.
type QuoteResultPremiumCoverage struct {
	// Branch Grupo e ramo da cobertura
	Branch string `json:"branch"`

	// Code CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
	Code QuoteResultPremiumCoverageCode `json:"code"`

	// Description DescriÃ§Ã£o / Nome da Cobertura (Caso CÃ³digo da Cobertura for "OUTRAS")
	Description *string `json:"description,omitempty"`

	// InternalCode CÃ³digo interno da cobertura da seguradora
	InternalCode *string `json:"internalCode,omitempty"`

	// PremiumAmount Detalhes de valores/limites
	PremiumAmount AmountDetails `json:"premiumAmount"`
}

// QuoteResultPremiumCoverageCode CÃ³digo da cobertura, conforme Anexo II do Manuel de Escopo de Dados
type QuoteResultPremiumCoverageCode string

// QuoteStatus Status da cotaÃ§Ã£o.
type QuoteStatus string

// QuoteStatusAuto defines model for QuoteStatusAuto.
type QuoteStatusAuto struct {
	// QuoteCustomData Objeto que agrupa as categorias de dados customizÃ¡veis em listas.
	QuoteCustomData *QuoteCustomData `json:"quoteCustomData,omitempty"`
	QuoteCustomer   *QuoteCustomer   `json:"quoteCustomer,omitempty"`

	// QuoteData Objeto que agrupa dados especÃ­ficos do ramo de cotaÃ§Ã£o.
	QuoteData *ResultQuoteQuoteAuto `json:"quoteData,omitempty"`

	// Quotes Lista de cotaÃ§Ãµes enviadas pela seguradora.
	Quotes []struct {
		// Assistances Lista que agrupa dados de assistÃªncias.
		Assistances []QuoteResultAssistance `json:"assistances"`

		// Coverages Lista que agrupa os dados de coberturas.
		Coverages *[]QuoteAutoQuoteResultCoverage `json:"coverages,omitempty"`

		// InsurerQuoteId Id da proposta da segurada
		InsurerQuoteId string `json:"insurerQuoteId"`

		// PremiumInfo Objeto que agrupa dados de prÃªmio.
		PremiumInfo QuoteResultPremium `json:"premiumInfo"`

		// SusepProcessNumbers NÃºmero do Processo Susep das Coberturas
		SusepProcessNumbers []string `json:"susepProcessNumbers"`
	} `json:"quotes"`
}

// QuoteStatusInfo defines model for QuoteStatusInfo.
type QuoteStatusInfo struct {
	// RejectionReason Campo condicionado ao status "RJCT", que deve apresentar a justificativa a recusa ao risco.
	RejectionReason *string `json:"rejectionReason,omitempty"`

	// Status Status da cotaÃ§Ã£o.
	Status QuoteStatus `json:"status"`

	// StatusUpdateDateTime Data e hora da atualizaÃ§Ã£o do status.
	StatusUpdateDateTime DateTime `json:"statusUpdateDateTime"`
}

// ReadjustmentIndex Índice de reajuste das contribuições e do capital para vigências acima de doze meses
type ReadjustmentIndex string

// RedirectLinks defines model for RedirectLinks.
type RedirectLinks struct {
	// Redirect Campo destinado a disponibilização de links de acesso a outros materiais.
	Redirect string `json:"redirect"`
}

// RequestorPhone defines model for RequestorPhone.
type RequestorPhone struct {
	AreaCode *AreaCode `json:"areaCode,omitempty"`

	// CountryCallingCode Número de DDI (Discagem Direta Internacional) para telefone de acesso ao Cliente - se aplicável
	CountryCallingCode *string `json:"countryCallingCode,omitempty"`

	// Number Número de telefone do cliente
	Number *string `json:"number,omitempty"`
}

// ResourceData defines model for ResourceData.
type ResourceData struct {
	// ResourceId Identifica o recurso reportado pelo participante do Open Insurance, no caso de:
	// Produtos de Titulos de Capitalização: policyNumber ou certificateNumber
	// Produtos de Previdência: certificateNumber
	// Produtos de Danos e Pessoas (independente do ramo e torná-lo como obrigatório): policyNumber ou certificateNumber
	ResourceId string `json:"resourceId"`

	// Status - Tipo de status de recurso (vide Enum):
	// - Available: Disponível
	// - Unavailable: Indisponível
	// - Temporarily Unavailable: Temporariamente Indisponível
	// - Pending Authorisation: Pendente de Autorização
	Status ResourceStatus `json:"status"`

	// Type Tipo de recurso (vide Enum):
	// - CUSTOMERS_PERSONAL_IDENTIFICATIONS: Informações de identificação PF
	// - CUSTOMERS_PERSONAL_QUALIFICATION: Informações de qualificação PF
	// - CUSTOMERS_PERSONAL_ADDITIONALINFO: Informações complementares PF
	// - CUSTOMERS_BUSINESS_IDENTIFICATIONS: Informações de identificação PJ
	// - CUSTOMERS_BUSINESS_QUALIFICATION: Informações de qualificação PJ
	// - CUSTOMERS_BUSINESS_ADDITIONALINFO: Informações complementares PJ
	// - CAPITALIZATION_TITLES: Produtos de Titulos de Capitalização
	// - PENSION_PLAN: Produtos de Previdência Risco
	// - LIFE_PENSION: Produtos de Previdência Sobrevivência
	// - FINANCIAL_ASSISTANCE: Produtos de Assistência Financeira
	// - DAMAGES_AND_PEOPLE_PATRIMONIAL: Produtos de Patrimonial
	// - DAMAGES_AND_PEOPLE_RESPONSIBILITY: Produtos de Responsabilidade
	// - DAMAGES_AND_PEOPLE_TRANSPORT: Produtos de Transportes
	// - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS: Produtos de Riscos Financeiros
	// - DAMAGES_AND_PEOPLE_RURAL: Produtos de Rural
	// - DAMAGES_AND_PEOPLE_AUTO: Produtos de Automóveis
	// - DAMAGES_AND_PEOPLE_HOUSING: Produtos de Habitacional
	// - DAMAGES_AND_PEOPLE_PERSON: Produtos de Pessoas (Repartição simples)
	// - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD: Aceitação e Sucursal no exterior
	// - CLAIM_NOTIFICATION: Solicitação de Aviso de Sinistro
	// - ENDORSEMENT: Solicitação de Endosso
	// - QUOTE_PATRIMONIAL: Cotação do Seguro Patrimonial
	// - QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD: Cotação do Seguro Aceitação e Sucursal no exterior
	// - QUOTE_AUTO: Cotação do Seguro Automóvel
	// - QUOTE_FINANCIAL_RISK: Cotação do Seguro Riscos Financeiros
	// - QUOTE_HOUSING: Cotação do Seguro Habitacional
	// - QUOTE_RESPONSIBILITY: Cotação do Seguro Responsabilidade
	// - QUOTE_RURAL: Cotação do Seguro Rural
	// - QUOTE_TRANSPORT: Cotação do Seguro Transportes
	// - QUOTE_PERSON: Cotação do Seguro Pessoas
	// - QUOTE_CAPITALIZATION_TITLE: Cotação de Títulos de Capitalização
	// - CONTRACT_LIFE_PENSION: Contratação/Portabilidade de Previdência Sobrevivência
	// - CONTRACT_PENSION_PLAN: Contratação/Portabilidade de Previdência Risco
	// - PENSION_WITHDRAWAL: Resgate de Previdência
	// - CAPITALIZATION_TITLE_WITHDRAWAL: Resgate de Títulos de Capitalização
	Type ResourceType `json:"type"`
}

// ResourceStatus - Tipo de status de recurso (vide Enum):
// - Available: Disponível
// - Unavailable: Indisponível
// - Temporarily Unavailable: Temporariamente Indisponível
// - Pending Authorisation: Pendente de Autorização
type ResourceStatus string

// ResourceType Tipo de recurso (vide Enum):
// - CUSTOMERS_PERSONAL_IDENTIFICATIONS: Informações de identificação PF
// - CUSTOMERS_PERSONAL_QUALIFICATION: Informações de qualificação PF
// - CUSTOMERS_PERSONAL_ADDITIONALINFO: Informações complementares PF
// - CUSTOMERS_BUSINESS_IDENTIFICATIONS: Informações de identificação PJ
// - CUSTOMERS_BUSINESS_QUALIFICATION: Informações de qualificação PJ
// - CUSTOMERS_BUSINESS_ADDITIONALINFO: Informações complementares PJ
// - CAPITALIZATION_TITLES: Produtos de Titulos de Capitalização
// - PENSION_PLAN: Produtos de Previdência Risco
// - LIFE_PENSION: Produtos de Previdência Sobrevivência
// - FINANCIAL_ASSISTANCE: Produtos de Assistência Financeira
// - DAMAGES_AND_PEOPLE_PATRIMONIAL: Produtos de Patrimonial
// - DAMAGES_AND_PEOPLE_RESPONSIBILITY: Produtos de Responsabilidade
// - DAMAGES_AND_PEOPLE_TRANSPORT: Produtos de Transportes
// - DAMAGES_AND_PEOPLE_FINANCIAL_RISKS: Produtos de Riscos Financeiros
// - DAMAGES_AND_PEOPLE_RURAL: Produtos de Rural
// - DAMAGES_AND_PEOPLE_AUTO: Produtos de Automóveis
// - DAMAGES_AND_PEOPLE_HOUSING: Produtos de Habitacional
// - DAMAGES_AND_PEOPLE_PERSON: Produtos de Pessoas (Repartição simples)
// - DAMAGES_AND_PEOPLE_ACCEPTANCE_AND_BRANCHES_ABROAD: Aceitação e Sucursal no exterior
// - CLAIM_NOTIFICATION: Solicitação de Aviso de Sinistro
// - ENDORSEMENT: Solicitação de Endosso
// - QUOTE_PATRIMONIAL: Cotação do Seguro Patrimonial
// - QUOTE_ACCEPTANCE_AND_BRANCHES_ABROAD: Cotação do Seguro Aceitação e Sucursal no exterior
// - QUOTE_AUTO: Cotação do Seguro Automóvel
// - QUOTE_FINANCIAL_RISK: Cotação do Seguro Riscos Financeiros
// - QUOTE_HOUSING: Cotação do Seguro Habitacional
// - QUOTE_RESPONSIBILITY: Cotação do Seguro Responsabilidade
// - QUOTE_RURAL: Cotação do Seguro Rural
// - QUOTE_TRANSPORT: Cotação do Seguro Transportes
// - QUOTE_PERSON: Cotação do Seguro Pessoas
// - QUOTE_CAPITALIZATION_TITLE: Cotação de Títulos de Capitalização
// - CONTRACT_LIFE_PENSION: Contratação/Portabilidade de Previdência Sobrevivência
// - CONTRACT_PENSION_PLAN: Contratação/Portabilidade de Previdência Risco
// - PENSION_WITHDRAWAL: Resgate de Previdência
// - CAPITALIZATION_TITLE_WITHDRAWAL: Resgate de Títulos de Capitalização
type ResourceType string

// ResponseError defines model for ResponseError.
type ResponseError struct {
	Errors ResponseError_Errors `json:"errors"`
	Meta   *Meta                `json:"meta,omitempty"`
}

// ResponseError_Errors defines model for ResponseError.Errors.
type ResponseError_Errors struct {
	union json.RawMessage
}

// ResultQuoteQuoteAuto Objeto que agrupa dados especÃ­ficos do ramo de cotaÃ§Ã£o.
type ResultQuoteQuoteAuto struct {
	// BonusClass Classe de BÃ´nus. Condicional, caso a opÃ§Ã£o '2. RenovaÃ§Ã£o' seja selecionada no campo 'tipo de Seguro'
	BonusClass *string `json:"bonusClass,omitempty"`

	// Currency Moeda de emissÃ£o do contrato de acordo com ISO-4217.
	Currency string `json:"currency"`

	// HasAnIndividualItem Trata-se uma apÃ³lice individual com apenas um item?
	HasAnIndividualItem *bool `json:"hasAnIndividualItem,omitempty"`

	// IdentifierCode CÃ³digo Identificador. Condicional, caso a opÃ§Ã£o '2. RenovaÃ§Ã£o' seja selecionada no campo 'tipo de Seguro'
	IdentifierCode *string `json:"identifierCode,omitempty"`

	// IncludesAssistanceServices Deseja contrataÃ§Ã£o de serviÃ§os de assistÃªncia
	IncludesAssistanceServices bool `json:"includesAssistanceServices"`

	// InsuranceType Tipo de Seguro
	InsuranceType ResultQuoteQuoteAutoInsuranceType `json:"insuranceType"`

	// InsuredObjects Lista que agrupa os dados de objetos segurados.
	InsuredObjects *[]QuoteAutoResultInsuredObject `json:"insuredObjects,omitempty"`

	// InsurerId Nome para identifcar a congÃªnere de renovaÃ§Ã£o
	InsurerId *string `json:"insurerId,omitempty"`

	// IsCollectiveStipulated ApÃ³lice coletiva, por estipulaÃ§Ã£o ou automÃ³vel frota?
	IsCollectiveStipulated *bool `json:"isCollectiveStipulated,omitempty"`

	// PolicyId NÃºmero para identificar a apÃ³lice atual
	PolicyId *string `json:"policyId,omitempty"`

	// TermEndDate AtÃ© as 24 horas do dia
	TermEndDate openapi_types.Date `json:"termEndDate"`

	// TermStartDate VigÃªncia das 24 horas do dia
	TermStartDate openapi_types.Date `json:"termStartDate"`

	// TermType Tipo de vigÃªncia
	TermType ResultQuoteQuoteAutoTermType `json:"termType"`
}

// ResultQuoteQuoteAutoInsuranceType Tipo de Seguro
type ResultQuoteQuoteAutoInsuranceType string

// ResultQuoteQuoteAutoTermType Tipo de vigÃªncia
type ResultQuoteQuoteAutoTermType string

// RevokeQuoteLeadRequest defines model for RevokeQuoteLeadRequest.
type RevokeQuoteLeadRequest struct {
	// Data RevogaÃ§Ã£o de LEAD.
	Data struct {
		Author struct {
			// IdentificationNumber NÃºmero de identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
			IdentificationNumber string `json:"identificationNumber"`

			// IdentificationType Tipo identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
			IdentificationType RevokeQuoteLeadRequestDataAuthorIdentificationType `json:"identificationType"`
		} `json:"author"`
	} `json:"data"`
}

// RevokeQuoteLeadRequestDataAuthorIdentificationType Tipo identificaÃ§Ã£o (CPF ou CNPJ) do solicitante do cancelamento/revogaÃ§Ã£o.
type RevokeQuoteLeadRequestDataAuthorIdentificationType string

// RevokeQuoteLeadResponse defines model for RevokeQuoteLeadResponse.
type RevokeQuoteLeadResponse struct {
	// Data Objeto contendo informaÃ§Ãµes da atualizaÃ§Ã£o.
	Data struct {
		// Status Status da cotaÃ§Ã£o.
		Status RevokeQuoteLeadResponseDataStatus `json:"status"`
	} `json:"data"`
}

// RevokeQuoteLeadResponseDataStatus Status da cotaÃ§Ã£o.
type RevokeQuoteLeadResponseDataStatus string

// UpdateIndex Descreve o índice de atualização das reservas.
type UpdateIndex string

// VehicleUsage CÃ³digo de utilizaÃ§Ã£o do veÃ­culo (Casco, RCF-A, APP, AssistÃªncia e Outras Coberturas; caso aplicÃ¡vel)
type VehicleUsage string

// WebhookRequest defines model for WebhookRequest.
type WebhookRequest struct {
	// Data InformaÃ§Ãµes referentes Ã  chamada realizada.
	Data struct {
		// Timestamp Data e hora em que ocorreu o evento responsÃ¡vel pelo disparo da notificaÃ§Ã£o via webhook, conforme especificaÃ§Ã£o RFC-3339, sempre com a utilizaÃ§Ã£o de timezone UTC(UTC time format).
		Timestamp DateTime `json:"timestamp"`
	} `json:"data"`
}

// ConsentId defines model for consentId.
type ConsentId = string

// PageNumber defines model for pageNumber.
type PageNumber = int32

// PageSize defines model for pageSize.
type PageSize = int32

// PlanId defines model for planId.
type PlanId = string

// CapitalizationTitlePlansV1Params defines parameters for CapitalizationTitlePlansV1.
type CapitalizationTitlePlansV1Params struct {
	// Page Número da página que está sendo requisitada (o valor da primeira página é 1).
	Page *PageNumber `form:"page,omitempty" json:"page,omitempty"`

	// PageSize Quantidade total de registros por páginas.
	PageSize *PageSize `form:"page-size,omitempty" json:"page-size,omitempty"`
}

// CapitalizationTitleEventsV1Params defines parameters for CapitalizationTitleEventsV1.
type CapitalizationTitleEventsV1Params struct {
	// Page Número da página que está sendo requisitada (o valor da primeira página é 1).
	Page *PageNumber `form:"page,omitempty" json:"page,omitempty"`

	// PageSize Quantidade total de registros por páginas.
	PageSize *PageSize `form:"page-size,omitempty" json:"page-size,omitempty"`
}

// CapitalizationTitleSettlementsV1Params defines parameters for CapitalizationTitleSettlementsV1.
type CapitalizationTitleSettlementsV1Params struct {
	// Page Número da página que está sendo requisitada (o valor da primeira página é 1).
	Page *PageNumber `form:"page,omitempty" json:"page,omitempty"`

	// PageSize Quantidade total de registros por páginas.
	PageSize *PageSize `form:"page-size,omitempty" json:"page-size,omitempty"`
}

// ResourcesV2Params defines parameters for ResourcesV2.
type ResourcesV2Params struct {
	// Page Número da página que está sendo requisitada (o valor da primeira página é 1).
	Page *PageNumber `form:"page,omitempty" json:"page,omitempty"`

	// PageSize Quantidade total de registros por páginas.
	PageSize *PageSize `form:"page-size,omitempty" json:"page-size,omitempty"`
}

// CreateConsentV2JSONRequestBody defines body for CreateConsentV2 for application/json ContentType.
type CreateConsentV2JSONRequestBody = CreateConsentRequest

// CreateEndorsementV1JSONRequestBody defines body for CreateEndorsementV1 for application/json ContentType.
type CreateEndorsementV1JSONRequestBody = CreateEndorsementRequest

// CreateQuoteAutoLeadV1JSONRequestBody defines body for CreateQuoteAutoLeadV1 for application/json ContentType.
type CreateQuoteAutoLeadV1JSONRequestBody = CreateQuoteAutoLeadRequest

// RevokeQuoteAutoLeadV1JSONRequestBody defines body for RevokeQuoteAutoLeadV1 for application/json ContentType.
type RevokeQuoteAutoLeadV1JSONRequestBody = RevokeQuoteLeadRequest

// CreateQuoteAutoV1JSONRequestBody defines body for CreateQuoteAutoV1 for application/json ContentType.
type CreateQuoteAutoV1JSONRequestBody = CreateQuoteAutoRequest

// PatchQuoteAutoV1JSONRequestBody defines body for PatchQuoteAutoV1 for application/json ContentType.
type PatchQuoteAutoV1JSONRequestBody = PatchQuoteRequest

// AsQuotePersonalCustomer returns the union data inside the QuoteCustomer as a QuotePersonalCustomer
func (t QuoteCustomer) AsQuotePersonalCustomer() (QuotePersonalCustomer, error) {
	var body QuotePersonalCustomer
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromQuotePersonalCustomer overwrites any union data inside the QuoteCustomer as the provided QuotePersonalCustomer
func (t *QuoteCustomer) FromQuotePersonalCustomer(v QuotePersonalCustomer) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeQuotePersonalCustomer performs a merge with any union data inside the QuoteCustomer, using the provided QuotePersonalCustomer
func (t *QuoteCustomer) MergeQuotePersonalCustomer(v QuotePersonalCustomer) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t QuoteCustomer) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *QuoteCustomer) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsQuotePersonalCustomerData returns the union data inside the QuoteCustomerData as a QuotePersonalCustomerData
func (t QuoteCustomerData) AsQuotePersonalCustomerData() (QuotePersonalCustomerData, error) {
	var body QuotePersonalCustomerData
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromQuotePersonalCustomerData overwrites any union data inside the QuoteCustomerData as the provided QuotePersonalCustomerData
func (t *QuoteCustomerData) FromQuotePersonalCustomerData(v QuotePersonalCustomerData) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeQuotePersonalCustomerData performs a merge with any union data inside the QuoteCustomerData, using the provided QuotePersonalCustomerData
func (t *QuoteCustomerData) MergeQuotePersonalCustomerData(v QuotePersonalCustomerData) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t QuoteCustomerData) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *QuoteCustomerData) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// AsErrorInfo returns the union data inside the ResponseError_Errors as a ErrorInfo
func (t ResponseError_Errors) AsErrorInfo() (ErrorInfo, error) {
	var body ErrorInfo
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromErrorInfo overwrites any union data inside the ResponseError_Errors as the provided ErrorInfo
func (t *ResponseError_Errors) FromErrorInfo(v ErrorInfo) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeErrorInfo performs a merge with any union data inside the ResponseError_Errors, using the provided ErrorInfo
func (t *ResponseError_Errors) MergeErrorInfo(v ErrorInfo) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

// AsErrorInfos returns the union data inside the ResponseError_Errors as a ErrorInfos
func (t ResponseError_Errors) AsErrorInfos() (ErrorInfos, error) {
	var body ErrorInfos
	err := json.Unmarshal(t.union, &body)
	return body, err
}

// FromErrorInfos overwrites any union data inside the ResponseError_Errors as the provided ErrorInfos
func (t *ResponseError_Errors) FromErrorInfos(v ErrorInfos) error {
	b, err := json.Marshal(v)
	t.union = b
	return err
}

// MergeErrorInfos performs a merge with any union data inside the ResponseError_Errors, using the provided ErrorInfos
func (t *ResponseError_Errors) MergeErrorInfos(v ErrorInfos) error {
	b, err := json.Marshal(v)
	if err != nil {
		return err
	}

	merged, err := runtime.JSONMerge(t.union, b)
	t.union = merged
	return err
}

func (t ResponseError_Errors) MarshalJSON() ([]byte, error) {
	b, err := t.union.MarshalJSON()
	return b, err
}

func (t *ResponseError_Errors) UnmarshalJSON(b []byte) error {
	err := t.union.UnmarshalJSON(b)
	return err
}

// ServerInterface represents all server handlers.
type ServerInterface interface {

	// (POST /open-insurance/consents/v2/consents)
	CreateConsentV2(w http.ResponseWriter, r *http.Request)

	// (DELETE /open-insurance/consents/v2/consents/{consentId})
	DeleteConsentV2(w http.ResponseWriter, r *http.Request, consentId ConsentId)

	// (GET /open-insurance/consents/v2/consents/{consentId})
	ConsentV2(w http.ResponseWriter, r *http.Request, consentId ConsentId)

	// (GET /open-insurance/customers/v1/personal/complimentary-information)
	PersonalComplimentaryInfoV1(w http.ResponseWriter, r *http.Request)

	// (GET /open-insurance/customers/v1/personal/identifications)
	PersonalIdentificationsV1(w http.ResponseWriter, r *http.Request)

	// (GET /open-insurance/customers/v1/personal/qualifications)
	PersonalQualificationsV1(w http.ResponseWriter, r *http.Request)
	// Envia os dados inseridos manualmente para a solicitação de endosso
	// (POST /open-insurance/endorsement/v1/request/{consentId})
	CreateEndorsementV1(w http.ResponseWriter, r *http.Request, consentId ConsentId)
	// Obtem a lista de identificação de InsuranceCapitalizationTitle
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/plans)
	CapitalizationTitlePlansV1(w http.ResponseWriter, r *http.Request, params CapitalizationTitlePlansV1Params)
	// Obtém os dados de eventos do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/events)
	CapitalizationTitleEventsV1(w http.ResponseWriter, r *http.Request, planId PlanId, params CapitalizationTitleEventsV1Params)
	// Obtém as informações gerais do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/plan-info)
	CapitalizationTitlePlanInfoV1(w http.ResponseWriter, r *http.Request, planId PlanId)
	// Obtém os dados de liquidações do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/settlements)
	CapitalizationTitleSettlementsV1(w http.ResponseWriter, r *http.Request, planId PlanId, params CapitalizationTitleSettlementsV1Params)
	// Envia dados de cotaÃ§Ã£o e contrataÃ§Ã£o de AutoLead
	// (POST /open-insurance/quote-auto/v1/lead/request)
	CreateQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request)
	// Atualiza dados de cotaÃ§Ã£o e contrataÃ§Ã£o de AutoLead identificado por consentId
	// (PATCH /open-insurance/quote-auto/v1/lead/request/{consentId})
	RevokeQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request, consentId ConsentId)
	// Envia dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto
	// (POST /open-insurance/quote-auto/v1/request)
	CreateQuoteAutoV1(w http.ResponseWriter, r *http.Request)
	// Atualiza dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto identificado por consentId
	// (PATCH /open-insurance/quote-auto/v1/request/{consentId})
	PatchQuoteAutoV1(w http.ResponseWriter, r *http.Request, consentId ConsentId)
	// ObtÃ©m os dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto identificado por consentId
	// (GET /open-insurance/quote-auto/v1/request/{consentId}/quote-status)
	QuoteAutoStatusV1(w http.ResponseWriter, r *http.Request, consentId ConsentId)
	// Obtém a lista de recursos consentidos pelo cliente.
	// (GET /open-insurance/resources/v2/resources)
	ResourcesV2(w http.ResponseWriter, r *http.Request, params ResourcesV2Params)
}

// ServerInterfaceWrapper converts contexts to parameters.
type ServerInterfaceWrapper struct {
	Handler            ServerInterface
	HandlerMiddlewares []MiddlewareFunc
	ErrorHandlerFunc   func(w http.ResponseWriter, r *http.Request, err error)
}

type MiddlewareFunc func(http.Handler) http.Handler

// CreateConsentV2 operation middleware
func (siw *ServerInterfaceWrapper) CreateConsentV2(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateConsentV2(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// DeleteConsentV2 operation middleware
func (siw *ServerInterfaceWrapper) DeleteConsentV2(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.DeleteConsentV2(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// ConsentV2 operation middleware
func (siw *ServerInterfaceWrapper) ConsentV2(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.ConsentV2(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// PersonalComplimentaryInfoV1 operation middleware
func (siw *ServerInterfaceWrapper) PersonalComplimentaryInfoV1(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PersonalComplimentaryInfoV1(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// PersonalIdentificationsV1 operation middleware
func (siw *ServerInterfaceWrapper) PersonalIdentificationsV1(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PersonalIdentificationsV1(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// PersonalQualificationsV1 operation middleware
func (siw *ServerInterfaceWrapper) PersonalQualificationsV1(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PersonalQualificationsV1(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateEndorsementV1 operation middleware
func (siw *ServerInterfaceWrapper) CreateEndorsementV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateEndorsementV1(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CapitalizationTitlePlansV1 operation middleware
func (siw *ServerInterfaceWrapper) CapitalizationTitlePlansV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// Parameter object where we will unmarshal all parameters from the context
	var params CapitalizationTitlePlansV1Params

	// ------------- Optional query parameter "page" -------------

	err = runtime.BindQueryParameter("form", true, false, "page", r.URL.Query(), &params.Page)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page", Err: err})
		return
	}

	// ------------- Optional query parameter "page-size" -------------

	err = runtime.BindQueryParameter("form", true, false, "page-size", r.URL.Query(), &params.PageSize)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page-size", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CapitalizationTitlePlansV1(w, r, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CapitalizationTitleEventsV1 operation middleware
func (siw *ServerInterfaceWrapper) CapitalizationTitleEventsV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "planId" -------------
	var planId PlanId

	err = runtime.BindStyledParameterWithOptions("simple", "planId", r.PathValue("planId"), &planId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "planId", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params CapitalizationTitleEventsV1Params

	// ------------- Optional query parameter "page" -------------

	err = runtime.BindQueryParameter("form", true, false, "page", r.URL.Query(), &params.Page)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page", Err: err})
		return
	}

	// ------------- Optional query parameter "page-size" -------------

	err = runtime.BindQueryParameter("form", true, false, "page-size", r.URL.Query(), &params.PageSize)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page-size", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CapitalizationTitleEventsV1(w, r, planId, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CapitalizationTitlePlanInfoV1 operation middleware
func (siw *ServerInterfaceWrapper) CapitalizationTitlePlanInfoV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "planId" -------------
	var planId PlanId

	err = runtime.BindStyledParameterWithOptions("simple", "planId", r.PathValue("planId"), &planId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "planId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CapitalizationTitlePlanInfoV1(w, r, planId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CapitalizationTitleSettlementsV1 operation middleware
func (siw *ServerInterfaceWrapper) CapitalizationTitleSettlementsV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "planId" -------------
	var planId PlanId

	err = runtime.BindStyledParameterWithOptions("simple", "planId", r.PathValue("planId"), &planId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "planId", Err: err})
		return
	}

	// Parameter object where we will unmarshal all parameters from the context
	var params CapitalizationTitleSettlementsV1Params

	// ------------- Optional query parameter "page" -------------

	err = runtime.BindQueryParameter("form", true, false, "page", r.URL.Query(), &params.Page)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page", Err: err})
		return
	}

	// ------------- Optional query parameter "page-size" -------------

	err = runtime.BindQueryParameter("form", true, false, "page-size", r.URL.Query(), &params.PageSize)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page-size", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CapitalizationTitleSettlementsV1(w, r, planId, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateQuoteAutoLeadV1 operation middleware
func (siw *ServerInterfaceWrapper) CreateQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateQuoteAutoLeadV1(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// RevokeQuoteAutoLeadV1 operation middleware
func (siw *ServerInterfaceWrapper) RevokeQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.RevokeQuoteAutoLeadV1(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// CreateQuoteAutoV1 operation middleware
func (siw *ServerInterfaceWrapper) CreateQuoteAutoV1(w http.ResponseWriter, r *http.Request) {

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.CreateQuoteAutoV1(w, r)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// PatchQuoteAutoV1 operation middleware
func (siw *ServerInterfaceWrapper) PatchQuoteAutoV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.PatchQuoteAutoV1(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// QuoteAutoStatusV1 operation middleware
func (siw *ServerInterfaceWrapper) QuoteAutoStatusV1(w http.ResponseWriter, r *http.Request) {

	var err error

	// ------------- Path parameter "consentId" -------------
	var consentId ConsentId

	err = runtime.BindStyledParameterWithOptions("simple", "consentId", r.PathValue("consentId"), &consentId, runtime.BindStyledParameterOptions{ParamLocation: runtime.ParamLocationPath, Explode: false, Required: true})
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "consentId", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.QuoteAutoStatusV1(w, r, consentId)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

// ResourcesV2 operation middleware
func (siw *ServerInterfaceWrapper) ResourcesV2(w http.ResponseWriter, r *http.Request) {

	var err error

	// Parameter object where we will unmarshal all parameters from the context
	var params ResourcesV2Params

	// ------------- Optional query parameter "page" -------------

	err = runtime.BindQueryParameter("form", true, false, "page", r.URL.Query(), &params.Page)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page", Err: err})
		return
	}

	// ------------- Optional query parameter "page-size" -------------

	err = runtime.BindQueryParameter("form", true, false, "page-size", r.URL.Query(), &params.PageSize)
	if err != nil {
		siw.ErrorHandlerFunc(w, r, &InvalidParamFormatError{ParamName: "page-size", Err: err})
		return
	}

	handler := http.Handler(http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		siw.Handler.ResourcesV2(w, r, params)
	}))

	for _, middleware := range siw.HandlerMiddlewares {
		handler = middleware(handler)
	}

	handler.ServeHTTP(w, r)
}

type UnescapedCookieParamError struct {
	ParamName string
	Err       error
}

func (e *UnescapedCookieParamError) Error() string {
	return fmt.Sprintf("error unescaping cookie parameter '%s'", e.ParamName)
}

func (e *UnescapedCookieParamError) Unwrap() error {
	return e.Err
}

type UnmarshalingParamError struct {
	ParamName string
	Err       error
}

func (e *UnmarshalingParamError) Error() string {
	return fmt.Sprintf("Error unmarshaling parameter %s as JSON: %s", e.ParamName, e.Err.Error())
}

func (e *UnmarshalingParamError) Unwrap() error {
	return e.Err
}

type RequiredParamError struct {
	ParamName string
}

func (e *RequiredParamError) Error() string {
	return fmt.Sprintf("Query argument %s is required, but not found", e.ParamName)
}

type RequiredHeaderError struct {
	ParamName string
	Err       error
}

func (e *RequiredHeaderError) Error() string {
	return fmt.Sprintf("Header parameter %s is required, but not found", e.ParamName)
}

func (e *RequiredHeaderError) Unwrap() error {
	return e.Err
}

type InvalidParamFormatError struct {
	ParamName string
	Err       error
}

func (e *InvalidParamFormatError) Error() string {
	return fmt.Sprintf("Invalid format for parameter %s: %s", e.ParamName, e.Err.Error())
}

func (e *InvalidParamFormatError) Unwrap() error {
	return e.Err
}

type TooManyValuesForParamError struct {
	ParamName string
	Count     int
}

func (e *TooManyValuesForParamError) Error() string {
	return fmt.Sprintf("Expected one value for %s, got %d", e.ParamName, e.Count)
}

// Handler creates http.Handler with routing matching OpenAPI spec.
func Handler(si ServerInterface) http.Handler {
	return HandlerWithOptions(si, StdHTTPServerOptions{})
}

// ServeMux is an abstraction of http.ServeMux.
type ServeMux interface {
	HandleFunc(pattern string, handler func(http.ResponseWriter, *http.Request))
	ServeHTTP(w http.ResponseWriter, r *http.Request)
}

type StdHTTPServerOptions struct {
	BaseURL          string
	BaseRouter       ServeMux
	Middlewares      []MiddlewareFunc
	ErrorHandlerFunc func(w http.ResponseWriter, r *http.Request, err error)
}

// HandlerFromMux creates http.Handler with routing matching OpenAPI spec based on the provided mux.
func HandlerFromMux(si ServerInterface, m ServeMux) http.Handler {
	return HandlerWithOptions(si, StdHTTPServerOptions{
		BaseRouter: m,
	})
}

func HandlerFromMuxWithBaseURL(si ServerInterface, m ServeMux, baseURL string) http.Handler {
	return HandlerWithOptions(si, StdHTTPServerOptions{
		BaseURL:    baseURL,
		BaseRouter: m,
	})
}

// HandlerWithOptions creates http.Handler with additional options
func HandlerWithOptions(si ServerInterface, options StdHTTPServerOptions) http.Handler {
	m := options.BaseRouter

	if m == nil {
		m = http.NewServeMux()
	}
	if options.ErrorHandlerFunc == nil {
		options.ErrorHandlerFunc = func(w http.ResponseWriter, r *http.Request, err error) {
			http.Error(w, err.Error(), http.StatusBadRequest)
		}
	}

	wrapper := ServerInterfaceWrapper{
		Handler:            si,
		HandlerMiddlewares: options.Middlewares,
		ErrorHandlerFunc:   options.ErrorHandlerFunc,
	}

	m.HandleFunc("POST "+options.BaseURL+"/open-insurance/consents/v2/consents", wrapper.CreateConsentV2)
	m.HandleFunc("DELETE "+options.BaseURL+"/open-insurance/consents/v2/consents/{consentId}", wrapper.DeleteConsentV2)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/consents/v2/consents/{consentId}", wrapper.ConsentV2)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/customers/v1/personal/complimentary-information", wrapper.PersonalComplimentaryInfoV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/customers/v1/personal/identifications", wrapper.PersonalIdentificationsV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/customers/v1/personal/qualifications", wrapper.PersonalQualificationsV1)
	m.HandleFunc("POST "+options.BaseURL+"/open-insurance/endorsement/v1/request/{consentId}", wrapper.CreateEndorsementV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/plans", wrapper.CapitalizationTitlePlansV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/events", wrapper.CapitalizationTitleEventsV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/plan-info", wrapper.CapitalizationTitlePlanInfoV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/settlements", wrapper.CapitalizationTitleSettlementsV1)
	m.HandleFunc("POST "+options.BaseURL+"/open-insurance/quote-auto/v1/lead/request", wrapper.CreateQuoteAutoLeadV1)
	m.HandleFunc("PATCH "+options.BaseURL+"/open-insurance/quote-auto/v1/lead/request/{consentId}", wrapper.RevokeQuoteAutoLeadV1)
	m.HandleFunc("POST "+options.BaseURL+"/open-insurance/quote-auto/v1/request", wrapper.CreateQuoteAutoV1)
	m.HandleFunc("PATCH "+options.BaseURL+"/open-insurance/quote-auto/v1/request/{consentId}", wrapper.PatchQuoteAutoV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/quote-auto/v1/request/{consentId}/quote-status", wrapper.QuoteAutoStatusV1)
	m.HandleFunc("GET "+options.BaseURL+"/open-insurance/resources/v2/resources", wrapper.ResourcesV2)

	return m
}

type CreateConsentV2RequestObject struct {
	Body *CreateConsentV2JSONRequestBody
}

type CreateConsentV2ResponseObject interface {
	VisitCreateConsentV2Response(w http.ResponseWriter) error
}

type CreateConsentV2201JSONResponse ConsentResponse

func (response CreateConsentV2201JSONResponse) VisitCreateConsentV2Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(201)

	return json.NewEncoder(w).Encode(response)
}

type DeleteConsentV2RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
}

type DeleteConsentV2ResponseObject interface {
	VisitDeleteConsentV2Response(w http.ResponseWriter) error
}

type DeleteConsentV2204Response struct {
}

func (response DeleteConsentV2204Response) VisitDeleteConsentV2Response(w http.ResponseWriter) error {
	w.WriteHeader(204)
	return nil
}

type ConsentV2RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
}

type ConsentV2ResponseObject interface {
	VisitConsentV2Response(w http.ResponseWriter) error
}

type ConsentV2200JSONResponse ConsentResponse

func (response ConsentV2200JSONResponse) VisitConsentV2Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type PersonalComplimentaryInfoV1RequestObject struct {
}

type PersonalComplimentaryInfoV1ResponseObject interface {
	VisitPersonalComplimentaryInfoV1Response(w http.ResponseWriter) error
}

type PersonalComplimentaryInfoV1200JSONResponse GetPersonalComplimentaryInfoResponse

func (response PersonalComplimentaryInfoV1200JSONResponse) VisitPersonalComplimentaryInfoV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type PersonalIdentificationsV1RequestObject struct {
}

type PersonalIdentificationsV1ResponseObject interface {
	VisitPersonalIdentificationsV1Response(w http.ResponseWriter) error
}

type PersonalIdentificationsV1200JSONResponse GetPersonalIdentificationResponse

func (response PersonalIdentificationsV1200JSONResponse) VisitPersonalIdentificationsV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type PersonalQualificationsV1RequestObject struct {
}

type PersonalQualificationsV1ResponseObject interface {
	VisitPersonalQualificationsV1Response(w http.ResponseWriter) error
}

type PersonalQualificationsV1200JSONResponse GetPersonalQualificationResponse

func (response PersonalQualificationsV1200JSONResponse) VisitPersonalQualificationsV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CreateEndorsementV1RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
	Body      *CreateEndorsementV1JSONRequestBody
}

type CreateEndorsementV1ResponseObject interface {
	VisitCreateEndorsementV1Response(w http.ResponseWriter) error
}

type CreateEndorsementV1201JSONResponse CreateEndorsementResponse

func (response CreateEndorsementV1201JSONResponse) VisitCreateEndorsementV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(201)

	return json.NewEncoder(w).Encode(response)
}

type CapitalizationTitlePlansV1RequestObject struct {
	Params CapitalizationTitlePlansV1Params
}

type CapitalizationTitlePlansV1ResponseObject interface {
	VisitCapitalizationTitlePlansV1Response(w http.ResponseWriter) error
}

type CapitalizationTitlePlansV1200JSONResponse GetCapitalizationTitlePlansResponse

func (response CapitalizationTitlePlansV1200JSONResponse) VisitCapitalizationTitlePlansV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CapitalizationTitleEventsV1RequestObject struct {
	PlanId PlanId `json:"planId"`
	Params CapitalizationTitleEventsV1Params
}

type CapitalizationTitleEventsV1ResponseObject interface {
	VisitCapitalizationTitleEventsV1Response(w http.ResponseWriter) error
}

type CapitalizationTitleEventsV1200JSONResponse GetCapitalizationTitleEventsResponse

func (response CapitalizationTitleEventsV1200JSONResponse) VisitCapitalizationTitleEventsV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CapitalizationTitlePlanInfoV1RequestObject struct {
	PlanId PlanId `json:"planId"`
}

type CapitalizationTitlePlanInfoV1ResponseObject interface {
	VisitCapitalizationTitlePlanInfoV1Response(w http.ResponseWriter) error
}

type CapitalizationTitlePlanInfoV1200JSONResponse GetCapitalizationTitlePlanInfoResponse

func (response CapitalizationTitlePlanInfoV1200JSONResponse) VisitCapitalizationTitlePlanInfoV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CapitalizationTitleSettlementsV1RequestObject struct {
	PlanId PlanId `json:"planId"`
	Params CapitalizationTitleSettlementsV1Params
}

type CapitalizationTitleSettlementsV1ResponseObject interface {
	VisitCapitalizationTitleSettlementsV1Response(w http.ResponseWriter) error
}

type CapitalizationTitleSettlementsV1200JSONResponse GetCapitalizationTitleSettlementsResponse

func (response CapitalizationTitleSettlementsV1200JSONResponse) VisitCapitalizationTitleSettlementsV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CreateQuoteAutoLeadV1RequestObject struct {
	Body *CreateQuoteAutoLeadV1JSONRequestBody
}

type CreateQuoteAutoLeadV1ResponseObject interface {
	VisitCreateQuoteAutoLeadV1Response(w http.ResponseWriter) error
}

type CreateQuoteAutoLeadV1201JSONResponse CreateQuoteLeadResponse

func (response CreateQuoteAutoLeadV1201JSONResponse) VisitCreateQuoteAutoLeadV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(201)

	return json.NewEncoder(w).Encode(response)
}

type RevokeQuoteAutoLeadV1RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
	Body      *RevokeQuoteAutoLeadV1JSONRequestBody
}

type RevokeQuoteAutoLeadV1ResponseObject interface {
	VisitRevokeQuoteAutoLeadV1Response(w http.ResponseWriter) error
}

type RevokeQuoteAutoLeadV1200JSONResponse RevokeQuoteLeadResponse

func (response RevokeQuoteAutoLeadV1200JSONResponse) VisitRevokeQuoteAutoLeadV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type CreateQuoteAutoV1RequestObject struct {
	Body *CreateQuoteAutoV1JSONRequestBody
}

type CreateQuoteAutoV1ResponseObject interface {
	VisitCreateQuoteAutoV1Response(w http.ResponseWriter) error
}

type CreateQuoteAutoV1201JSONResponse CreateQuoteResponse

func (response CreateQuoteAutoV1201JSONResponse) VisitCreateQuoteAutoV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(201)

	return json.NewEncoder(w).Encode(response)
}

type PatchQuoteAutoV1RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
	Body      *PatchQuoteAutoV1JSONRequestBody
}

type PatchQuoteAutoV1ResponseObject interface {
	VisitPatchQuoteAutoV1Response(w http.ResponseWriter) error
}

type PatchQuoteAutoV1200JSONResponse PatchQuoteResponse

func (response PatchQuoteAutoV1200JSONResponse) VisitPatchQuoteAutoV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type QuoteAutoStatusV1RequestObject struct {
	ConsentId ConsentId `json:"consentId"`
}

type QuoteAutoStatusV1ResponseObject interface {
	VisitQuoteAutoStatusV1Response(w http.ResponseWriter) error
}

type QuoteAutoStatusV1200JSONResponse GetQuoteAutoStatusResponse

func (response QuoteAutoStatusV1200JSONResponse) VisitQuoteAutoStatusV1Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

type ResourcesV2RequestObject struct {
	Params ResourcesV2Params
}

type ResourcesV2ResponseObject interface {
	VisitResourcesV2Response(w http.ResponseWriter) error
}

type ResourcesV2200JSONResponse GetResourcesResponse

func (response ResourcesV2200JSONResponse) VisitResourcesV2Response(w http.ResponseWriter) error {
	w.Header().Set("Content-Type", "application/json")
	w.WriteHeader(200)

	return json.NewEncoder(w).Encode(response)
}

// StrictServerInterface represents all server handlers.
type StrictServerInterface interface {

	// (POST /open-insurance/consents/v2/consents)
	CreateConsentV2(ctx context.Context, request CreateConsentV2RequestObject) (CreateConsentV2ResponseObject, error)

	// (DELETE /open-insurance/consents/v2/consents/{consentId})
	DeleteConsentV2(ctx context.Context, request DeleteConsentV2RequestObject) (DeleteConsentV2ResponseObject, error)

	// (GET /open-insurance/consents/v2/consents/{consentId})
	ConsentV2(ctx context.Context, request ConsentV2RequestObject) (ConsentV2ResponseObject, error)

	// (GET /open-insurance/customers/v1/personal/complimentary-information)
	PersonalComplimentaryInfoV1(ctx context.Context, request PersonalComplimentaryInfoV1RequestObject) (PersonalComplimentaryInfoV1ResponseObject, error)

	// (GET /open-insurance/customers/v1/personal/identifications)
	PersonalIdentificationsV1(ctx context.Context, request PersonalIdentificationsV1RequestObject) (PersonalIdentificationsV1ResponseObject, error)

	// (GET /open-insurance/customers/v1/personal/qualifications)
	PersonalQualificationsV1(ctx context.Context, request PersonalQualificationsV1RequestObject) (PersonalQualificationsV1ResponseObject, error)
	// Envia os dados inseridos manualmente para a solicitação de endosso
	// (POST /open-insurance/endorsement/v1/request/{consentId})
	CreateEndorsementV1(ctx context.Context, request CreateEndorsementV1RequestObject) (CreateEndorsementV1ResponseObject, error)
	// Obtem a lista de identificação de InsuranceCapitalizationTitle
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/plans)
	CapitalizationTitlePlansV1(ctx context.Context, request CapitalizationTitlePlansV1RequestObject) (CapitalizationTitlePlansV1ResponseObject, error)
	// Obtém os dados de eventos do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/events)
	CapitalizationTitleEventsV1(ctx context.Context, request CapitalizationTitleEventsV1RequestObject) (CapitalizationTitleEventsV1ResponseObject, error)
	// Obtém as informações gerais do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/plan-info)
	CapitalizationTitlePlanInfoV1(ctx context.Context, request CapitalizationTitlePlanInfoV1RequestObject) (CapitalizationTitlePlanInfoV1ResponseObject, error)
	// Obtém os dados de liquidações do plano identificado por {planId}
	// (GET /open-insurance/insurance-capitalization-title/v1/insurance-capitalization-title/{planId}/settlements)
	CapitalizationTitleSettlementsV1(ctx context.Context, request CapitalizationTitleSettlementsV1RequestObject) (CapitalizationTitleSettlementsV1ResponseObject, error)
	// Envia dados de cotaÃ§Ã£o e contrataÃ§Ã£o de AutoLead
	// (POST /open-insurance/quote-auto/v1/lead/request)
	CreateQuoteAutoLeadV1(ctx context.Context, request CreateQuoteAutoLeadV1RequestObject) (CreateQuoteAutoLeadV1ResponseObject, error)
	// Atualiza dados de cotaÃ§Ã£o e contrataÃ§Ã£o de AutoLead identificado por consentId
	// (PATCH /open-insurance/quote-auto/v1/lead/request/{consentId})
	RevokeQuoteAutoLeadV1(ctx context.Context, request RevokeQuoteAutoLeadV1RequestObject) (RevokeQuoteAutoLeadV1ResponseObject, error)
	// Envia dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto
	// (POST /open-insurance/quote-auto/v1/request)
	CreateQuoteAutoV1(ctx context.Context, request CreateQuoteAutoV1RequestObject) (CreateQuoteAutoV1ResponseObject, error)
	// Atualiza dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto identificado por consentId
	// (PATCH /open-insurance/quote-auto/v1/request/{consentId})
	PatchQuoteAutoV1(ctx context.Context, request PatchQuoteAutoV1RequestObject) (PatchQuoteAutoV1ResponseObject, error)
	// ObtÃ©m os dados de cotaÃ§Ã£o e contrataÃ§Ã£o de Auto identificado por consentId
	// (GET /open-insurance/quote-auto/v1/request/{consentId}/quote-status)
	QuoteAutoStatusV1(ctx context.Context, request QuoteAutoStatusV1RequestObject) (QuoteAutoStatusV1ResponseObject, error)
	// Obtém a lista de recursos consentidos pelo cliente.
	// (GET /open-insurance/resources/v2/resources)
	ResourcesV2(ctx context.Context, request ResourcesV2RequestObject) (ResourcesV2ResponseObject, error)
}

type StrictHandlerFunc = strictnethttp.StrictHTTPHandlerFunc
type StrictMiddlewareFunc = strictnethttp.StrictHTTPMiddlewareFunc

type StrictHTTPServerOptions struct {
	RequestErrorHandlerFunc  func(w http.ResponseWriter, r *http.Request, err error)
	ResponseErrorHandlerFunc func(w http.ResponseWriter, r *http.Request, err error)
}

func NewStrictHandler(ssi StrictServerInterface, middlewares []StrictMiddlewareFunc) ServerInterface {
	return &strictHandler{ssi: ssi, middlewares: middlewares, options: StrictHTTPServerOptions{
		RequestErrorHandlerFunc: func(w http.ResponseWriter, r *http.Request, err error) {
			http.Error(w, err.Error(), http.StatusBadRequest)
		},
		ResponseErrorHandlerFunc: func(w http.ResponseWriter, r *http.Request, err error) {
			http.Error(w, err.Error(), http.StatusInternalServerError)
		},
	}}
}

func NewStrictHandlerWithOptions(ssi StrictServerInterface, middlewares []StrictMiddlewareFunc, options StrictHTTPServerOptions) ServerInterface {
	return &strictHandler{ssi: ssi, middlewares: middlewares, options: options}
}

type strictHandler struct {
	ssi         StrictServerInterface
	middlewares []StrictMiddlewareFunc
	options     StrictHTTPServerOptions
}

// CreateConsentV2 operation middleware
func (sh *strictHandler) CreateConsentV2(w http.ResponseWriter, r *http.Request) {
	var request CreateConsentV2RequestObject

	var body CreateConsentV2JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CreateConsentV2(ctx, request.(CreateConsentV2RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CreateConsentV2")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CreateConsentV2ResponseObject); ok {
		if err := validResponse.VisitCreateConsentV2Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// DeleteConsentV2 operation middleware
func (sh *strictHandler) DeleteConsentV2(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request DeleteConsentV2RequestObject

	request.ConsentId = consentId

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.DeleteConsentV2(ctx, request.(DeleteConsentV2RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "DeleteConsentV2")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(DeleteConsentV2ResponseObject); ok {
		if err := validResponse.VisitDeleteConsentV2Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// ConsentV2 operation middleware
func (sh *strictHandler) ConsentV2(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request ConsentV2RequestObject

	request.ConsentId = consentId

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.ConsentV2(ctx, request.(ConsentV2RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "ConsentV2")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(ConsentV2ResponseObject); ok {
		if err := validResponse.VisitConsentV2Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// PersonalComplimentaryInfoV1 operation middleware
func (sh *strictHandler) PersonalComplimentaryInfoV1(w http.ResponseWriter, r *http.Request) {
	var request PersonalComplimentaryInfoV1RequestObject

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.PersonalComplimentaryInfoV1(ctx, request.(PersonalComplimentaryInfoV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "PersonalComplimentaryInfoV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(PersonalComplimentaryInfoV1ResponseObject); ok {
		if err := validResponse.VisitPersonalComplimentaryInfoV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// PersonalIdentificationsV1 operation middleware
func (sh *strictHandler) PersonalIdentificationsV1(w http.ResponseWriter, r *http.Request) {
	var request PersonalIdentificationsV1RequestObject

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.PersonalIdentificationsV1(ctx, request.(PersonalIdentificationsV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "PersonalIdentificationsV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(PersonalIdentificationsV1ResponseObject); ok {
		if err := validResponse.VisitPersonalIdentificationsV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// PersonalQualificationsV1 operation middleware
func (sh *strictHandler) PersonalQualificationsV1(w http.ResponseWriter, r *http.Request) {
	var request PersonalQualificationsV1RequestObject

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.PersonalQualificationsV1(ctx, request.(PersonalQualificationsV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "PersonalQualificationsV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(PersonalQualificationsV1ResponseObject); ok {
		if err := validResponse.VisitPersonalQualificationsV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CreateEndorsementV1 operation middleware
func (sh *strictHandler) CreateEndorsementV1(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request CreateEndorsementV1RequestObject

	request.ConsentId = consentId

	var body CreateEndorsementV1JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CreateEndorsementV1(ctx, request.(CreateEndorsementV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CreateEndorsementV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CreateEndorsementV1ResponseObject); ok {
		if err := validResponse.VisitCreateEndorsementV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CapitalizationTitlePlansV1 operation middleware
func (sh *strictHandler) CapitalizationTitlePlansV1(w http.ResponseWriter, r *http.Request, params CapitalizationTitlePlansV1Params) {
	var request CapitalizationTitlePlansV1RequestObject

	request.Params = params

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CapitalizationTitlePlansV1(ctx, request.(CapitalizationTitlePlansV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CapitalizationTitlePlansV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CapitalizationTitlePlansV1ResponseObject); ok {
		if err := validResponse.VisitCapitalizationTitlePlansV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CapitalizationTitleEventsV1 operation middleware
func (sh *strictHandler) CapitalizationTitleEventsV1(w http.ResponseWriter, r *http.Request, planId PlanId, params CapitalizationTitleEventsV1Params) {
	var request CapitalizationTitleEventsV1RequestObject

	request.PlanId = planId
	request.Params = params

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CapitalizationTitleEventsV1(ctx, request.(CapitalizationTitleEventsV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CapitalizationTitleEventsV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CapitalizationTitleEventsV1ResponseObject); ok {
		if err := validResponse.VisitCapitalizationTitleEventsV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CapitalizationTitlePlanInfoV1 operation middleware
func (sh *strictHandler) CapitalizationTitlePlanInfoV1(w http.ResponseWriter, r *http.Request, planId PlanId) {
	var request CapitalizationTitlePlanInfoV1RequestObject

	request.PlanId = planId

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CapitalizationTitlePlanInfoV1(ctx, request.(CapitalizationTitlePlanInfoV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CapitalizationTitlePlanInfoV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CapitalizationTitlePlanInfoV1ResponseObject); ok {
		if err := validResponse.VisitCapitalizationTitlePlanInfoV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CapitalizationTitleSettlementsV1 operation middleware
func (sh *strictHandler) CapitalizationTitleSettlementsV1(w http.ResponseWriter, r *http.Request, planId PlanId, params CapitalizationTitleSettlementsV1Params) {
	var request CapitalizationTitleSettlementsV1RequestObject

	request.PlanId = planId
	request.Params = params

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CapitalizationTitleSettlementsV1(ctx, request.(CapitalizationTitleSettlementsV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CapitalizationTitleSettlementsV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CapitalizationTitleSettlementsV1ResponseObject); ok {
		if err := validResponse.VisitCapitalizationTitleSettlementsV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CreateQuoteAutoLeadV1 operation middleware
func (sh *strictHandler) CreateQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request) {
	var request CreateQuoteAutoLeadV1RequestObject

	var body CreateQuoteAutoLeadV1JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CreateQuoteAutoLeadV1(ctx, request.(CreateQuoteAutoLeadV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CreateQuoteAutoLeadV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CreateQuoteAutoLeadV1ResponseObject); ok {
		if err := validResponse.VisitCreateQuoteAutoLeadV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// RevokeQuoteAutoLeadV1 operation middleware
func (sh *strictHandler) RevokeQuoteAutoLeadV1(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request RevokeQuoteAutoLeadV1RequestObject

	request.ConsentId = consentId

	var body RevokeQuoteAutoLeadV1JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.RevokeQuoteAutoLeadV1(ctx, request.(RevokeQuoteAutoLeadV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "RevokeQuoteAutoLeadV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(RevokeQuoteAutoLeadV1ResponseObject); ok {
		if err := validResponse.VisitRevokeQuoteAutoLeadV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// CreateQuoteAutoV1 operation middleware
func (sh *strictHandler) CreateQuoteAutoV1(w http.ResponseWriter, r *http.Request) {
	var request CreateQuoteAutoV1RequestObject

	var body CreateQuoteAutoV1JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.CreateQuoteAutoV1(ctx, request.(CreateQuoteAutoV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "CreateQuoteAutoV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(CreateQuoteAutoV1ResponseObject); ok {
		if err := validResponse.VisitCreateQuoteAutoV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// PatchQuoteAutoV1 operation middleware
func (sh *strictHandler) PatchQuoteAutoV1(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request PatchQuoteAutoV1RequestObject

	request.ConsentId = consentId

	var body PatchQuoteAutoV1JSONRequestBody
	if err := json.NewDecoder(r.Body).Decode(&body); err != nil {
		sh.options.RequestErrorHandlerFunc(w, r, fmt.Errorf("can't decode JSON body: %w", err))
		return
	}
	request.Body = &body

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.PatchQuoteAutoV1(ctx, request.(PatchQuoteAutoV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "PatchQuoteAutoV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(PatchQuoteAutoV1ResponseObject); ok {
		if err := validResponse.VisitPatchQuoteAutoV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// QuoteAutoStatusV1 operation middleware
func (sh *strictHandler) QuoteAutoStatusV1(w http.ResponseWriter, r *http.Request, consentId ConsentId) {
	var request QuoteAutoStatusV1RequestObject

	request.ConsentId = consentId

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.QuoteAutoStatusV1(ctx, request.(QuoteAutoStatusV1RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "QuoteAutoStatusV1")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(QuoteAutoStatusV1ResponseObject); ok {
		if err := validResponse.VisitQuoteAutoStatusV1Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// ResourcesV2 operation middleware
func (sh *strictHandler) ResourcesV2(w http.ResponseWriter, r *http.Request, params ResourcesV2Params) {
	var request ResourcesV2RequestObject

	request.Params = params

	handler := func(ctx context.Context, w http.ResponseWriter, r *http.Request, request interface{}) (interface{}, error) {
		return sh.ssi.ResourcesV2(ctx, request.(ResourcesV2RequestObject))
	}
	for _, middleware := range sh.middlewares {
		handler = middleware(handler, "ResourcesV2")
	}

	response, err := handler(r.Context(), w, r, request)

	if err != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, err)
	} else if validResponse, ok := response.(ResourcesV2ResponseObject); ok {
		if err := validResponse.VisitResourcesV2Response(w); err != nil {
			sh.options.ResponseErrorHandlerFunc(w, r, err)
		}
	} else if response != nil {
		sh.options.ResponseErrorHandlerFunc(w, r, fmt.Errorf("unexpected response type: %T", response))
	}
}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
